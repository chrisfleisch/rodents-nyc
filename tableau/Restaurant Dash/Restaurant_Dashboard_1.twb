<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
    </datasource>
    <datasource caption='combined_restaurant_sightings' inline='true' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_restaurant_sightings' name='textscan.1itt1c00ozjhrm123ntqw0hhodn3'>
            <connection class='textscan' directory='C:/Users/adpra/Documents/MIDS/W209_Data_Visualization/Final_Project' filename='combined_restaurant_sightings.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1itt1c00ozjhrm123ntqw0hhodn3' name='combined_restaurant_sightings.csv' table='[combined_restaurant_sightings#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='BOROUGH' ordinal='1' />
            <column datatype='real' name='COUNT' ordinal='2' />
            <column datatype='string' name='CUISINE DESCRIPTION' ordinal='3' />
            <column datatype='string' name='DBA' ordinal='4' />
            <column datatype='integer' name='ZIP_CODE' ordinal='5' />
            <column datatype='string' name='price_level' ordinal='6' />
            <column datatype='string' name='rounded_rating' ordinal='7' />
            <column datatype='string' name='violation_count' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BOROUGH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BOROUGH]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>BOROUGH</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COUNT]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>COUNT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUISINE DESCRIPTION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUISINE DESCRIPTION]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>CUISINE DESCRIPTION</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DBA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DBA]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>DBA</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP_CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP_CODE]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>ZIP_CODE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price_level]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>price_level</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rounded_rating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rounded_rating]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>rounded_rating</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>violation_count</remote-name>
            <remote-type>129</remote-type>
            <local-name>[violation_count]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>violation_count</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
      <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
      <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
      <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([violation_count])' />
      </column>
      <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([CUISINE DESCRIPTION],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
      </column>
      <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
      <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
      <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
      <group caption='Action (Borough,Zip Code)' hidden='true' name='[Action (Borough,Zip Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BOROUGH]' />
          <groupfilter function='level-members' level='[ZIP_CODE]' />
        </groupfilter>
      </group>
      <group caption='Action (Cuisine Description)' hidden='true' name='[Action (Cuisine Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' />
        </groupfilter>
      </group>
      <group caption='Action (Price Level,Rating)' hidden='true' name='[Action (Price Level,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[price_level]' />
          <groupfilter function='level-members' level='[rounded_rating]' />
        </groupfilter>
      </group>
      <group caption='Action (Price Level,Rounded Rating)' hidden='true' name='[Action (Price Level,Rounded Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[price_level]' />
          <groupfilter function='level-members' level='[rounded_rating]' />
        </groupfilter>
      </group>
      <group caption='Action (Restaurant Names)' hidden='true' name='[Action (Restaurant Names)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DBA]' />
        </groupfilter>
      </group>
      <group caption='Action (Zip Code)' hidden='true' name='[Action (Zip Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ZIP_CODE]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/adpra/Documents/MIDS/W209_Data_Visualization/Final_Project/combined_restaurant_sightings.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/29/2018 11:17:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='181375' timestamp-start='2018-03-29 23:17:35.933' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181375</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BOROUGH</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BOROUGH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BOROUGH</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNT</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CUISINE DESCRIPTION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CUISINE DESCRIPTION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CUISINE DESCRIPTION</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DBA</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DBA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DBA</remote-alias>
              <ordinal>4</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>224</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP_CODE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ZIP_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP_CODE</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[price_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_level</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rounded_rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rounded_rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rounded_rating</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>violation_count</remote-name>
              <remote-type>129</remote-type>
              <local-name>[violation_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>violation_count</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.482166' measure-ordering='alphabetic' measure-percentage='0.47424' parameter-percentage='0.0435931' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BOROUGH:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BRONX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STATEN ISLAND&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;QUEENS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MANHATTAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BROOKLYN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
      <datasources>
        <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
      </datasources>
      <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
        <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
        <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]'>
        <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Restaurant Dashboard' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Restaurant Dashboard' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Restaurant Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Borough' />
        <param name='target' value='Restaurant Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Violations Heatmap</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([CUISINE DESCRIPTION],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]' filter-group='4'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter from='&quot;1.0&quot;' function='range' level='[none:price_level:nk]' to='&quot;4.0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter from='&quot;1.0&quot;' function='range' level='[none:rounded_rating:nk]' to='&quot;5.0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' direction='DESC' />
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cuisine and Rodent Violations'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([CUISINE DESCRIPTION],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[violation_count]' derivation='None' name='[none:violation_count:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]' filter-group='4'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]'>
            <groupfilter from='&quot;Afghan&quot;' function='range' level='[none:CUISINE DESCRIPTION:nk]' to='&quot;Vietnamese/Cambodian/Malaysia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' direction='DESC' using='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]'>
            <groupfilter from='&quot;1.0&quot;' function='range' level='[none:violation_count:nk]' to='&quot;9.0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='rows' value='Avg. Rodent Violation Count' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' value='84' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Restaurant List by Violation Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([CUISINE DESCRIPTION],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='Attribute' name='[attr:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='Attribute' name='[attr:ZIP_CODE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_level]' derivation='Attribute' name='[attr:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='Attribute' name='[attr:rounded_rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]' filter-group='4'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:DBA:nk]' />
              <groupfilter function='member' level='[none:DBA:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' direction='DESC' using='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:rounded_rating:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:ZIP_CODE:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Restaurants By Zip'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([CUISINE DESCRIPTION],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[DBA]' derivation='Count' name='[cnt:DBA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]' filter-group='4'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' value='false' />
            <format attr='break-on-special' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' />
              <lod column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' />
              <geometry column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sightings Vs Restaurants'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[DBA]' derivation='Count' name='[cnt:DBA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
            <column-instance column='[COUNT]' derivation='Sum' name='[sum:COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' scope='rows' value='Number of Rat Sightings' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' scope='cols' value='Number of Restaurants' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' />
              <lod column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Restaurant Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
      </datasources>
      <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
        <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
        <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98334' id='5' param='horz' type='layout-flow' w='71817' x='27602' y='833'>
            <zone h='98334' id='3' type='layout-basic' w='60189' x='27602' y='833'>
              <zone h='60330' id='1' name='Restaurants By Zip' w='60189' x='27602' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38004' id='8' name='Cuisine and Rodent Violations' w='60189' x='27602' y='61163'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98334' id='4' is-fixed='true' param='vert' type='layout-flow' w='11628' x='87791' y='833'>
              <zone h='8437' id='7' name='Restaurants By Zip' pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' type='color' w='11628' x='87791' y='833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8437' id='10' name='Average Rodent Violations By Ratings &amp; Price' pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' type='color' w='11628' x='87791' y='9270'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16562' id='13' name='Sightings Vs Restaurants' pane-specification-id='4' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='color' w='11628' x='87791' y='17707'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21041' id='15' name='Sightings Vs Restaurants' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='filter' w='11628' x='87791' y='34269'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6250' id='16' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='11628' x='87791' y='55310'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='27825' id='9' name='Average Rodent Violations By Ratings &amp; Price' w='27021' x='581' y='33333'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='38009' id='11' name='Sightings Vs Restaurants' w='27021' x='581' y='61158'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32500' id='14' name='Restaurant List by Violation Count' w='27021' x='581' y='833'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sightings Vs Restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Restaurant List by Violation Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Restaurants By Zip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>10510</value>
                <value>&quot;POLYGON((-73.8425 41.1113,-73.8455 41.1043,-73.8452 41.1083,-73.8614 41.1082,-73.8593 41.1116,-73.864 41.1197,-73.8684 41.1109,-73.8678 41.1288,-73.8651 41.139,-73.8574 41.1453,-73.8551 41.1585,-73.8471 41.1647,-73.8436 41.1611,-73.8357 41.1618,-73.8366 41.1672,-73.8307 41.1651,-73.8334 41.1618,-73.8248 41.162,-73.8151 41.1752,-73.8113 41.1751,-73.8131 41.1715,-73.793 41.1621,-73.8007 41.1612,-73.7993 41.1555,-73.8042 41.1579,-73.8058 41.1503,-73.7998 41.1429,-73.7952 41.1483,-73.7916 41.1458,-73.7985 41.1367,-73.8078 41.1355,-73.8128 41.1287,-73.8157 41.1357,-73.8267 41.1223,-73.8319 41.1239,-73.8351 41.1178,-73.8425 41.1113),(-73.8522 41.1085,-73.8425 41.1113,-73.8432 41.1176,-73.8475 41.1199,-73.8522 41.1085))&quot;</value>
                <value>41.155299999999997</value>
                <value>-73.826700000000002</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Cuisine and Rodent Violations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Rodent Violations By Ratings &amp; Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Restaurant Dashboard'>
      <viewpoints>
        <viewpoint name='Average Rodent Violations By Ratings &amp; Price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cuisine and Rodent Violations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Restaurant List by Violation Count'>
          <zoom type='fit-width' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Restaurants By Zip'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sightings Vs Restaurants'>
          <zoom type='entire-view' />
          <highlight field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Rodent Violations By Ratings &amp; Price' width='192'>
      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
      /wcuFbUI+Wl8KgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cuisine and Rodent Violations' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Restaurant Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3Bc153v+bmxczcSkQiAYKYYJFHBkixZlmXZcpBzeRxkz4zfzHje7O6M
      q3a3turVVm3NP/uqXr2tmjdvgi0625I8si05KljByhIlihRzAIkcG+hG53Tj/tF9m92NBtAg
      wGTxWwUSuH3uOefePr9zfvkn2LZtcw3X8B6FeLkncA3XcDlxjQCu4T2NawRwDe9pXCOAa3hP
      4xoBXMN7GtcI4Bre05Ar/0jPjfHor54BQWDPLXdxx97rlu3ASM8xMKuzc1P3RZng3NgAerCP
      7iZ3+drJg4fYdPNNOFfeeP113n/nnQvuPXr0CNdff0PVteefe5b7PvLRizLXC8HV8s5r8fIz
      v+LM2Byy6uHe+z9Of1db3XbxqSF+/vvny38/8Gd/zsjJg7z//Qu/r8uBqhMgPTfO+l138Td/
      9Z+YP/kqh0fmAQhPjnJmcLTcbnTwDMdPncWy4eSh13nmhZd499gpAGanxjj07hFymlm8NzwD
      QCYRJZU3iM3NoJkWZwbOAjA1Nsi7R46jmVa5/cTIWQbHpsDSeP2Pz/LS629x6txIefxTB98l
      XzHvzVs2A6Dl0rx76BCz80kS0RmeevopDh48yEw0UW4bDk9z5sRRZueTgM3k5GT5s6npqdW8
      ywvClf/ObYbPnuLkmUGsCovRuYko3/zmN/nalz7H7574JYVMnLlYGgA9lyz/3tS9iW9+85t8
      82++gSrJtAXdbN5c/L5mwmHmpsY4dXaEy2WMqssCCaJEX28HmWyB0wde5vn9R5k8e5jfPPcG
      Awee5eUjoyRmxzg3Nlt9o55i/zvHMbUsP/rJowA8//xzAIwe38/ATJpDrzzHjx95mPG5JHpq
      lneOD6JlY/zk0ccB+PY//VeOn5vk+V89zETSaOghnDF+/MPvoxkm7xw8uGjbwVNHiSRzPPaD
      f2c0muPp3/2WggXpmdO89u5IQ+NdDFyp7/zoK7/nrTMzRKeGGJ6aL18vZOIcPPgOr73+Bv1b
      dqDIIo8//msAXnv2SdKWVNXPC797grs+8XlU8fz8nv71Y7x9bICxk2/xi6deXbuXuQLItRde
      fPpXvPHUI+y+5S6+fHcXP/z3RzHkAOeiMJua5J4HP07sjd9yLBrkizfdic+1jbN6jr17rsPU
      0sQjk8zMTDA8MbfIkAZ33Ps5dvc0oaXniUwOMzMhMDGXAWDrnlv52H33cFCIksyLbNu6kdz6
      G7iuv2nZh9nU282Bt99i8+5bCbV20tvTw80331zVZvPOG7nzjtu4sc/Ls0fP8NH37+TFAwOY
      Y+/w4Qe+svI3uAa4kt95xK3x4uNPk/Q3s+d9/pp+BSRRJJ1MI7qCtLkKxPIm4wmdD7V6yq2m
      zr5LxtfPlq7q71D2t/LJ++8D4OGHH1mr17kiLCCAD338c9zQrvOHt4pHXqipjXs/+1WavQq5
      fB7BtvmHb32LQnKSnz/5R770oU3ohg7Aqbde5Lq7P8+tm5v5zr59AFilczOXy5WHbGsrvoi3
      Xnyauz//DTY3S+zb94O6ExQFAV1v7CR4/30P8GGPh8e+910Sd9+GaVrYgFCn7bmzg3R0vo++
      667nue/9CI/XR6tHqtPy4uNKfue+1l6+9a1vkY2e44lnXuNrX7gXAJevqby57PvedwH42Efv
      5rGHv8+6jbeU+zILKZ589QR//Z++tujzF9JRCpZyIa9u1agiANUXpMX00bN1Aw+oKk8+/zqf
      eODj/ORH+xAkhf6de9nZ5ebJF97Atmw+/vmv4Gr3kh95iB89FuYrn3g/P/jxzzjmC+AKFoWi
      Np/Ed7/3fSQ9y527ZYS2DtQS43Xj7R/gxz/bhy/QRLCtA4CO9uL//uY23KpI9w238dD3HyY8
      vJfPfPTuYp9dIR7dtw8Z+Njnvlq+549PPc5ENEuwvY+QCHdcv5V/+bdv86GPfoo9W3sAsLMx
      9u17iED7Br58T1GI3NwmYva+7+K+6UVwpb/zG/oC/OHlt7Fs+PQXHyzP2ydp7Nu3D8s02Li7
      +O78HVuZn/4pX/zzvym3O/b2q8QTMb5bIs4H/uzPae8ojqen5vj+979HQbf5s69+/eK+6EUg
      vNed4abGBnnit8/yzf/l78qL5BouDCcOvcHbp8N846ufa6j9Tx95hK8/+ODyDS8irhHA2BBq
      qIO2kO9yT+Wqx+mTx9m0fReqVI/pXIiZcJjO0mlwufCeJ4BreG/j2qF/De9pVAnB09NTdHU5
      1kWL6elZ7Nw8eXc3m7oXqiHrWVoBjHyKREGkNeQDI80bBwd5/20L2y0FLZ/m5MkBuvs3094S
      WtG9DsLhGTo6Oi/o3kuFbDaLrus4B7EgCFQeyoIglP9XVRVBENA0DdM0q/qpva8W9fqs/Nuy
      rBXP3ePxlMc9r3G6PDAtC9MqvhNVXqhREgQBj8dTdS2fz1efACf3v8horABAfOwYbxyfoHvT
      zrqLH+DYsaN1r6dnBth/vGTFlP0rXvyp2RH+6V+/T8EweefgoRXdWwnH4HIlI5/PYxgGpmli
      WRamaWIYBpZlYRgGhmEgyzLBYBCXy4VpmmUCcH6ctpV/1/643e661517nLEqf3Rdr3vd+bEs
      C1mWyWazS7a7FD+WaaLrOgVNW/CZbdv4fD4URaFQKJBKpUgmk2iaVn0C3PnBO/n1q2+y4dP3
      8Or+o9zz6QcZOfgCk55d3NRt89AP/wO320Xz+m186dP3le878OpzHDo5RCad5it/9b/ywu9+
      x+GwwvzUIF//4kd45KdP8uDXP8fPfvAdErpEXhf5u7/7a37+w39HE9wUsgk23vAhPn73XgCe
      +cMf+bt/+HuCJbWMbeTY9+2HQHVjqc385298iUd/+ggPfv1B4iMHeX3Sw0aGeXz/CJ0BCcvd
      xkdu2cibb+4nk8lx130PXDS/mdXCMAwkqWh/sG27ancWxeLzm6ZJoVCgUCiUT4vKdrV/V0IU
      RbxeL9lstm6bxU4O27axLKs8t3rIZDJks9klT55LBUEQcCnqguuKouDz+ZBlmXQ6TaFQqPq8
      igDcLf0YyVcBm6Qm0uoWSZU+e+W5F/jSN/+eLp/ML378E7IV923auo0zQxPk40kOnxrhgU99
      iuZJD5+8cyeUvHZSE8dR+27jP993MxPHXuG1IyPgaeKvHnwQyPPIT58EigSQF+Ty4gc4d+gV
      dn/4S9y5s4sDf/gFp2YqRz+PT3zhQW7ub+KRnz7Cpp03c8cdJ3nwwcujX14pnIVYbzE7O5nT
      rtH7oMimZLPZJVmcegtYEIQlF/9S915MLEXs9eD3F63X6XSafD6/4PMFluCekIszZ44S6tld
      dV2osqfaVHovPfHr3/HVv/xb9JmjvD652ItufNItis1IJE1/m7/O2H9aEEWxis+vRaVs4MBZ
      9LXta/l8SZIoFArLLv4rYQdvFLpZ3AgUSW6IEAqFAtls/Q0T6miB7vjA7fyPf/4Rd92xp+r6
      Bz5yL4/t+xe+8+1/x2zqxlsxdsAl8chPf8wvflvkuQPt/Rz+4xM88viT59v07EIbe4vvPPQQ
      v3z5NHfd0L/opO7/zGd58pF9PPTQPn70H79m800f4PgLj/HQQ9/hwJTJdZ1e3GT4zr7v8R+/
      embRfjoCMv/y79/h1PD0om0uN5wFWLkIHfajdmEuJ6gudnIsJyBfbtQ++1KQRAlJlDBMoyHB
      XVGUJQnlmh3gMiMSiSAIQvlLWkwbVInKzxb73fm7EvVOjVpt0krgdrvrshWrQUHXUGWl/CyW
      bSOJ5/dp3dDRDB1JkjBNE4/qLstK9eD1epEkiVQqVffzBSzQNVx61C70yoW8GM9bqbpshD2q
      bVdv3Fo4mqNCoVC3P1lem+UjCAJer7cs51R9VvO3KIpYto1dIlx7mUgCTdOWnOc1Q9gVgMUW
      qyAIC2SE2sXu/F3JMlVeA3C5XHXHXU42UFWVYDBIS0vLgl1WFEUUZXUenIqi4Pf78fl8ZLNZ
      JEmqEryd56+EJEp4VPf5z4Wll7DL5Vqg+anENQK4AlBPCK6VCxbjY502tQul8hTwer0r3v0F
      QSCVSqHrOoIgLGCVXC4Xuq4v2cdScAgonU6TTqexbZt8Pt8QUcmShM/lwefy1H2u2mdb6lmv
      sUCXGaIoYllWlToTzrM4texMLW9cySo5/1eeDJIklY1BDuoJ2PVg2zbJZLLqFHKwWsuv88yV
      cLvdDfe72IZQeV1RlAWEa9k2QkW7awRwBaCeFqhyEdfKBFDkjR0WZqkdz7IsEolE3c8andtq
      BOXFIMvywsVZsizXEuyFwuVyLSAosYZwrrFAlxn1BD84rwp1foeFWp5KFWqjPxcTpmWhL/I8
      lfD7/ciyvECDlM/ny5brpTQ7jaIR4r12AlzBEEWxzCI5uFDHtYuNnJbHtCxkSWYpLt7r9Zb9
      n+qhUCggSdKaEKtzki7V17UT4ApGKBQqC6CO49pSi/9SEUY9lsutuPCoLlw1nphmaU4+nw+f
      rxh0tNjidyBWyDarQT6fJxAILNnmqjoBVuIHslKfkYvdfqVwPD+XWyyVuBC2wbZtAoFA2W3C
      YUsURUHX9bIgWXsKVaIscAv1fYcsbDRNa1hrtFa7v1HyEHWepR7qEkA8EsHX0oqWzaBKMDQ2
      iTfQRHPQh9/nITqfpKXJR6YAgqXh8fmwtCw6MqYJXhWGRyZobg4xF4mCqLB1Sz8TI8OE1nXj
      U2wGR8Zp6+hGlWz8/gCZTBqfz08yFiEcidPbvxGPWj29598ZJJJszPJoWdaKFsRatv/Q3n46
      W2pTiCzeTz2nM13X0TTtohOaz+cru0woioIsy9i2XRZG3W432Wz2grQ+lmUhiSI+n49MJtPw
      fWvxvIZlIiDUFYQrUZcAwjMT2LEMZiFJp99FW/82Wl0Cx48fZ1NHkGPDSfZ0qOitGwnkooyk
      LIzYGBs2dTE4rmFmprhuz/XF9BzTYfp3bWPw1HHa+7cydOokm7t9BLu3MT54mC29HQxO5MjF
      I+zevYvZSIytWzZx5NhJbrzh+qp5vXBomFOj0VW/nIuN6za0NUwAi+nv15KdqedSAOcd5hxn
      sUKhsGD3lWUZr9cLrEz1ads2BUNDkmVcDZ5itm2jmQaLvTnbtktyxvJeqqIg4vN6F3WBKLer
      e1HxodpZCqYNWAydHWBiZg6fLDIYLdDX4mIqa9Lhk/Gt6yM3P4Fui+WsCqLiQlUU3K7z/tl5
      SyDocRFyucgBp4++g6348bV0ERs7Sc+mbQgC6Pk0Bw4cpKXt8gZLXy5ciOOabdt4vB4QIBAI
      LDD9C4KwYPEDCyyv9cZNJBIUCgUURSEQCOD3+xvaod1uN82hJgJef8NsnCAI6IZeJNY6grAg
      COXFv5xWSyopEJZD/dSIgsDGzZsYGx1HEEQEAWzLoq+vjamZOL0dAcLRPAgCICBZGRRvEwJF
      3bVLtjl9+jTxdA5RLL6sdSEvJ06eYl438QkiO/bciJ2Lk9ctfM3tNHmLX5rqCbB7xxai8zHG
      x8cxsnGmIktT8Z8KBEEgFAot6rrgoPZzQRDI5/K0tbbhcrkadlGQZXlJNwEH6XSaZDJJKpUi
      k8ksCC0MBoNVROd2Fx3U8rk8ZilSrVG4FBVd18vhn7WwbAtN18hq+SW9gBRFKSsOlsJV5Q06
      Mh2joDf2Mk3TbCig43x7C0lqXAZYqv+e9iA+98LopHqYnZ0tf9GiKNLS0rJo8AYUF5tlWaTT
      6arrXq+3zKqkUqmGFrbL5SqHUq4EgUCgzFr4fD50XcftdpNMJpFlGUVRVmUp9nq9aKXQxlqY
      poluGsiSvCQrpKoqLpdrWRao6qycn50mEk/Ts6EfjwIzswm6OtuYGB0ib0r097QzODxaTt/X
      1dFKKpUkEAiSSqUIBnzMzsVZ1+onldWZnpxAdvvoamvB5fMi2TrpPPi9xcUxOnQWU/LQ37ee
      8eFz5HXYuGUT02MjeENtrKsJhj8+PMtcfPHghkpYtr3A6nex2reGvHz6zu0N31sPgiDg9/uJ
      xWKLLkhHPVi7+CVJKvv76Lre0OJ37tM0bcVzzefzZZVmPp/HNM1y3K0gCAvmt1JomobX6yWd
      Ti+QhWrZtsWwnMoYitFyVQQQjaXZsmUjx06cpjPkZmQ+T2dHK7m8Sd96P2dHY1y3PsSxiEpA
      zjM8MUM2EWfX7hBjY2NsbA9waiyNmJUxQ80I7nVs7m9lZOAsXVu3IBkppmZhW38rAHkT1vs1
      BqeTWCZs376V8OAphOY+POrCg+m1Y2NXpBC8eX3zqghAkiSCwWDdbA+VsCyr7o7mcrnKp8hK
      /fNlWV6xU5uu6wvuca6thdbKMAxSqRR+v7/sKLdS+Hy+JQlRkqSiJq/yYiGb4uy5c7Su62B8
      ZhYxNUs4qRGLhnnn8Gm6u88XQQi0rWdu5DT9W7chAH5FZHC+QF+TynTWot0rMTE6xNDoxKKT
      iIYnOHx6iu42P9HwFGfODNLav4X87CgjEzOXLWf8pYbjr7MSVWElHJnAtu2Gd38oEkstP79a
      rJXK1rZtMpnMsoasxVAoFJaUpRw7SxUBeANNbNu+g57OJkKtXdz2gQ8Snx6jtb2bLf29zM/P
      AyJSSbANtXXgU4vHUW9fO7OzKXo6g8zFNRBEJKl4ZIuCxbmBARIZjemJEWbminnm27v76O9t
      Z34+XjrWLFLJJKYtYhoGE+Pj2IUU4+H4Bb2EqwWVfj8XAufUyOfzK9otGw18v1xw0r042hzb
      ttEMHcu+8Hdl2zaiKJaDfa4qIXgqkkQ3Gnv4lQvBF95eVSS6Wi9sp6oUglcDRVEoaIVlA0Rq
      4fDtTsqVtcRaxCI7izWbzWJaFrZd9DdaDpIkoarqAmHckZc0TaNQKNQ3hI2NjdHb20ciMg2e
      FkIui8lohp7ONiYmJ1nf3U0ikcTIZfC3d1FIJbBti2BTM8lEHI8iookeYjPjSN4Q3R1t2IbO
      yMgIgdYOmtwwn7Vp88tkLJWgR2F2apy0LtDbHuTc6DRef4i+ns6qkLi3T00SjjUmBNu2hbCC
      xXCh7dc1efn83cvX9brY0HW9vPg1Q284a4LDdrnd7nLWubWA2+0u5+JZDZzYBVVVixkuFnFf
      q42GMwyjrBWrhKqq5TxLsIgl+PSxw3Ss72Vm9DR62/WkzCjhrMH6jlbGzp1E9TUzOz6BKlnM
      pfJYWoZNvZ2cHZlAy6QJeRX8HkiLzfQHipM4e+Y0vVt2cO7kCdRODyfHTe7Y7GVaayXosRib
      nGfXrq3k4uM0rd9GV2Dhl7f/5MQVJwRvXt98WQjAiReoxzo1uvgrIYoisiyvKQEkk0mgfmqX
      RqCqKh6PB10vBsELgoC0SB8WNpZtIVNsZ5jGAm9QJz1iLBYr31eXnDZs6GJ06BySKwjAzNws
      +vwMkYxBa/cGIlOjxcorkhuvqJPRLNzBdSSnh+jfspW+TVto6dyEz5jnzLlhsEG3BTyqjE9R
      KACb+joZGpspjeiid30zx0+cwrBhZHCA8anwil7WewmOwWwxAfZCWarV7tYOJElC1/UycRZ0
      jYKxcsKSZZlUKoUoiksK90VXD6sqf5QiK2Sz2apTwOmnki2rSwCqr5X47Ay9G3pQBJ2Wjn7u
      uPsDxKYnUGSF7rYAqYKFrMj0bdrE/GxxsQbbOvC7inxxPpMiqxk430VHa4jjJ0+RtAV8koLH
      34xoFVAkAUyN+Xi6SN2igiQUy/y81yzBjcIJKFmLoBEo6sPXaueHIvtRqdFyKSou+bxhcCUh
      mQDJZLK8o9drY9gmNiAJC0M3K+H1ehfIBFeVEByJZzAbnK1pGkgNCEurba9IIi3BC1clVgrB
      jerQHYPYWn11zsK4FEvBsm2yhRyyJOFWlnb5cLxIDdNEqhOXDGDaFmZJKyQLYpUSwOVy4fF4
      SCQS2LZdtitUouobj0VmQA3SHPQwODjEps2bCY+P0tTdRyYWpbm1lflolNbWViIzk8ynMrS1
      d9PaFGBkZIQNG/pJJhMEg36i80mS82EMW2LjhvWcGRwjEGwi5JXxN7WSjMdobm7GyGcYGptk
      fd9G/B6VSHiK+XiKdd29NAeqhZg/Hhpmer4xXflK3Ztty0K4AHfo9mYfX/nw7uVvaHQeDRDB
      Wge+mKZZFjLrwSi5HqwFnCczTQsndEwz9LJ6UhalBc+/lMuDJIgICBi2WbLOn//MUQ97PJ5y
      uGUtqp5qLpbAMhO4dB+nR+bYtHkTsdgscU2mf52Lo0eP4g220domEE/m2Lp5I0eOnyawuZOx
      sWlau/sIh2eJTo/T0rcNHYnt27ZCehqleT2ZuWHaW/oYODeMqeVpbm5hdnoSXzDAxGSYHVt6
      iSXSbN22lePHT9C8pzo946Gz01ekELxWBHAx/f6XgpOeZDGsVLW6FARBwKO6qvpUJJmclkcS
      JTRDx6Wo5XiEhvqkmD9Wqpmn4+xnWRbBYLAugdc8mYAkCkxEs/S2+8nHppjNiERmp3AFmonP
      TtPa1opA0Wo8cHYQl9fH4PAEba0eBs+Nkk8nCMfzBD1K2bpr2DB8+ghxXcTtCZGPTbFhc9H9
      2RZEBk6fRRKLfKGeT/PGa6/R0tGz0nd71aMyCP5ihzdW8uHLsT5rJWs4kGp2+SJRuDEts7zb
      OwE6jUAQBJQ6J4eTer5QKDAfmydVh8irnkxVVXrbg6Q0CY/LzUyswAduv4ne9mZGR4a46c57
      CY8PF/WyLhVBFLAtG5e/iet23YhfNQm2rGPv7s0MjkyiqipgYQsy23ffSJvbJpXXCbR2EHCX
      HtS06GwLEYmlAAFfsIX33Xoz0bnwe04IdhZavYxoDtaKT7cpBpcoirKqPhdLPuuoLRvtWxCK
      +f0lcen4hKr2S7g6iKKI3+8nm80WkwsIYl1W6qoSguOpXMP+QZfKEiyJIkHf0sLcUlipJbhW
      tlmt81k9wXAlWGm4o6qqVSWhFoOjs18stbnP51syztiJZIvH4yiKgtvtJpPJlJUHzjtcINlM
      jQ2Tylts2bqJqaFztPVvwUzHmJyZpat3I0Gvi+FzZygYsHHLVqZGzqKZ0LdxE9OjwwguHx7R
      IByN09rRzfo2P0MT82zuX08kEqWtrZVINEI+nSST01i/YRN+t8jg0ASbNvczOjRI38ZNzM9H
      MfIZwpFiPz2d6/j9GwNMNngaXAp36Nt29nDvTRsbvmctsCCEEnvZ+gm6YSBLC1kEKLoeLxU0
      vhxW6sDXiLpVUZQlY3mdpFqapi1K/LquF1XFklgO1hFFkbxWlAPU+gRg09TWgTk2QCSZw8hn
      yRowNTLOth1bOX1umBt27cAwRbZubOP04BQqItu3b6UQmyBhednd1Y4sK0TiSXo61zExNEAs
      rWPb3UzPTNPW1sr0zAwuVWXbti2cODVAV8hNOJZmg22TTUUYGvWQy8yzZ9duIrFiPwDHR2av
      KCG40bjflWCl/jPLCaiaoaObBgVDw6O6F4RGqqq6ZgawtYCTJdrZrWshimL5ZFjq9BMEoZgW
      xR8o5zl16qJVllJaIATPTo1RcLfRHvQQ9BX12163zLnBYbzeYhBELBrm5dcOsWljF/FomIGB
      AQisZ33A5t2jJ6gsHzMzF0HMRJiI5qhMdp1OzPPSSy/T07+J8Zk5gmKGwYkoircJK5/AsK4a
      zmxN4XK5ysEmawFFkpFFCVmUyiecLMv4/X4CgcBlr+5YC8cfyWFVLLtY/dEqEYNzMpimuaxw
      LstFlxCHWGzbRjeNKqKpOQEMJibDrOsSSafTjM/MYRdUmiUZsZTiAqBzfR9Bn8JMeA6Xu5iq
      upBJEE1kcJf+9ng8YOu0dfTRv6GboeFRPAqcPHGUto4N6Nk4120PMDo9Q1NbB/39GxgaGkZ2
      uVnf0cqrB06e7+c9hHw+Xwz+XoEacCk4wmUlVFVddIe92DBK0WPKIjn7F+QcQsAwTWS5qOyE
      op9Rvag4xzruLPza0FFRFAl4fFV2jatKCM7lNWiQT78UQrBLVVDk1fnTLyYEu91u4qkkoiDU
      rXt7oVAUBUmS1ryyy1KwLKu0g9tIolSM6S2pLSufvdL1eTEEAgGy2WyRCDIZsO1yPHShUCgb
      v5wUjLUyimmZ5LQCXtVdrB5ZO0Ahk2BobJr2rh6wCrS2tDI3N8u6dW2cOTPItu1bEYBENMx0
      JE5P33q0LLQ0SczGTdr8NoPTKbb2dzM9PY1HlZiZm6eju5fmoI+BU8cxkdiweRuqkWI0WmBz
      bwfhqXHiqRyd7a2ogRYSkTAdHR1VL+hnLxxnbDbZ0Eu/FJnh7tzTx0dv3dzwPcv1Z1hmeWHk
      8/kFaQZXat2u7NuJ2bVt+5IufjivYBBKvjqLEXSjz2eaJrlcjkAggGWauN1uYrEYlmWhGXq5
      /6IafuFcAGRFwev1LiSAM4Mj7N5zPQJw9twUrS2thMNhFCPDfDJDwbRxSwIjEzNcf/31QJrp
      sTQtAZXZiEZmPklGM7HtLnRdJzw9wbZdN+JWSvlcZBfdAYnJ2SRidpasYWJbIWYiGa7fs535
      0bNEs3mw5AW7/cBE9IoSgvs76xcQvxBYllXm0RdzH7ZsC/EC07lKkoRhmmRz2WLOnDW07i6H
      RhJZQfEEWIrtc+J4gTIbJSgKiUSifN3r9pTTodTTbCmSjCSKuEsZMRa8BedYEgSBuZlJBgYG
      KJgwNh2hyW1wrlRxUSg5JwmCwNTECANnh7GASHQOIzHHdKJAX18f199wIxNDZxgeL94XDU8R
      TuRxixaRyCzZaJi5VA5Rcpe+cIux0fFiAqaGXtufBoo2Banq/dfiQv1xBEHA7XZTKKkAG0lh
      fqGwLAvDvLD+PR4PhUIBwzSYTyXIadUnlZPCUVVVVFfRXcIRiCvbWJaFqqrk8/lS1urqRAOS
      KKEoCrFYbKEMkEom8QcCZenZ6/WSyaQRBLH0ewafz0cyWUyHIggm2ayB1y2SyVsImHg9bjLZ
      Aj6fp8RaQCaTLdeC8npU0hkdUbTxeFSyORPTKBAMBtHzWVA95DPpBQHRBU1rOGAu0UMAACAA
      SURBVGrrUuQGlaWl3W+Xsug6mJuba3jM1cDr9RazOLvdVTumg7XKQaoZOgJFf/yVQFXVopZG
      18lrBZK5DCGvH5/Hi8/nI5FIFPX/loW/VPld1/VFVbhObbB0PosqyagVigBH0xYOh68uIXgl
      i/RyJsddCZwyqSv1/bFsq8zGNDIXR78eCoVIJpMryh6xEuimAba9YgKotEhnC3k0Q2dDd085
      HNIsaSGj0Wi59KkTcbYUDNNErNiInGCi2dlZOjs7r676ACtZcCtdnBe7/VJo5KRYcA/V2pPl
      4GRYyOVyaxr8UgnbtlEkecWLvxYe1UXQU+QynFpickUSL1VVl834BsVItGLs9vlSU8FgkHw+
      j9fr5eixY1cXAQAk5ueIxhd/eNu2SZR2hlQ8yux8YtG2AFo+w8joOKZlL9s3tk14apzZaByw
      mRofI99gqsal4HzJ9YrRLXZAr5RdyefzZb34xTr0l6vZuxhUVa0Sfg3LLFvEM5lMOcubEx7p
      ZKJbDi5FRZHPO+v5SqxTIpHA7/fz+lVHAGaOofEoM6OD6Is8//zcDGeHx7CMAoNjMySmh0lr
      i7MX8USatoDMyTMDjEzHmB0fJG8s0rll4A60MDsxxPC5M4jeIKdPnVzdI1VUiAQWJYSrARei
      WXJ0/5Wq2dqQSVEUSaVS5Wv11JvLwTEuRiIR1q1bx/6DRxmcTl5lBJBLoATX0exRySyiaGht
      7yLgdWEaeTzeAG3NfpKZxY/8gFflzMgMPW1+AqEWAn4PucIinUsKhVSUWEanoOk0h0LI0uoW
      qnN3vaorTo2wyy2mOdmeLxTmIjHATiGOSnnEsixUWSmPp6oqmqaV2R+HOJabj2VbFe4UNm6P
      B0mSME0TRVF48s0TjCU8VxkB+NrIzw4ykcwTXEQjGAlPMTkxQTxjkkmEGZqM0xpc3F354MGD
      BAJ+BMXH/Mwo4fksfk/9zo1Clng6j0+R8AcCnD51AsQLd4UGyrt9pRamUhUqiuJlz97m8XhW
      FaCzWDxvwdCQlWoCMGvGcXZ/OB/j62iKlix+J5xX07tdLlwuF7FYjJaWFl57+yDj4Siynr66
      tEDgRE0J5boD9T4vLiYRocSVLrVbWJaJbRftGtj2kn0Xd5Ti+MVgIKts3bxQzM7OVuXWr81l
      AxXFsdcgSkySJERRbNj9eTm//NWg1n1hMbjd7nJCK4/Hw/RsGMs0UeX6wTiVEEWxXDRkbm4O
      VVX5f37/CulIHC2evbqK5MHyGo/qz5fzlAexIgJpOT+j4o5yvr0grn5nrn2e2lDBWtlgMSKo
      VIsuBZfLhdfrXTINeyVs2667+NfCblBp2V2unUMAmqahiBIs8e4dpYLz47BZHo+HJ988RCIS
      w/a4EIKBq4wF+hOGw69WLvh6JYIW2wCWW/yyLONyuc5HQi3ijdnoXGuttPWQ0/Lohr6Arans
      ZzkGxLJtZqMRUuk0qVQKWZYJhUK0trbS1ta2IDoOis74jtzhVJ1PJpP4fD5ePXaGtBoikQdt
      LnyNAC43KheAWaH+W2vOVBRFgsFipr9GfOmXgiAIuBVXycuz/uLWdB3bBs00SmxjNRp9PlEQ
      8LrcFErFtVOpFJqmkc/n0TStTMiWbZWVsKIgVPkfGYaBruuYpklG8uLLxVF0jYyn9eojgFwq
      xvj08u4Dk6ODHD1+Eq1ONumTx45T7/DX82liyeJxPxeewbQhGpnj3IkTxPPneebTp46jVWTo
      iszNYtlw5NDhFWvCK3d6SawuDFdPHnDuqYUT7VQPTt2weDyOIAjEYrELDoSx7WL9XUdDtRiT
      qcgyqlwMxqkMdHd0+vVYKEEQ8Pl8+P1+gsFguX5xZTunfKxTXlbXdQzTQBTEcr8250/TyjiB
      QqGAoGUxmjpx+/z02Qmkf/zHf/zHC3oTlwkvPP173jl5lp19LYzHDKbGhjCz8/zmqecJtXbQ
      FChGU/3iFz8n6JF59dAZgkKGP7xygC1bNvLHp37Nky+8xY27N/HrXz9JT18fr7/8HIdODJGc
      PMoPf/FH9t56M6f2v4DY0s/Lzz5J1/puAgE/f/jdE+REHwPHD9Hd3cWvfvkL5GAz3/+n/05C
      8NES8NDR2bEiJ75sNruA76/3e+3fmmlUqVAXc6ADyklvDcNoyArs8M2LEZRYMZZpWSAsrsat
      F4ssiiKWbZUXt+M8FwqFyGQyFAqFsmbIEZQdBAIBPB4PpmmWjXrOaeZo1Cp/HAFa0zRS6TR/
      DGcQ4nNYviaE2Zmr7wQYmZjEis+QU/y888brnDp5kudfeoMHPrCbo4Mz5XZ6LsVzL7zMdddt
      58U3j3H79lZ+/tgvKAQ3c11/F888+STNITfPvfAKUzENVY/Q3LWRez76MVq8KjfsvZ5Db72G
      6Glj/OwZ3nntOVq3386xt17BsEEr5Ojq3cArL77Orpv28rF77uT40WMX9EyVX5izw+a0PJlC
      jpy20GdHM4tFIgqmjmYun2FhpWrUpdySawlNlqQVGcCcxSqJxaAct9tNIBAkFAqRzeWqiK62
      zpfjAxSLxUgkE2hLaLJEsei86XK5yoH/qXQaW/UgiALi3BSxrPvqIoBCbARDaWXn9g28dXQC
      PXKKwPpduEWdJ558HtsyOHDoXQB8bT381de/wMDAObxCjt889ybbr9vO8f0vMDA2Q+/6TgbH
      Zti8YT3+gL9Y1zjQwsGXnmU+qxHo2MSZ159h2/V7AWjv6ePN535DTvAiCjA1eIajpwexbJug
      S+TpF18HYGzgCLNzEd4+OtDwczkL2IlW0ky9mH1bKCpyc1oe3TTQDB3DMjFK2pvi55RzY1ai
      MplsNptdcSXItYJuGgvckSuRSqVIJZMkEgn0mtNJUZSqeXs8HmLJOJl8Ft00SOUyVQTixBBD
      kSV0ZATHqzmSzBST6JoF7FQxD9VVZQco8ndF62mltuTAq8+y/8ARPvT5b7BrQ2tZXSgKAqZl
      I4rFbNPOdWcXsywTsYLvdrwynaPUMk2EkiXW+cyxF5T/Lvdll7Wozk7eiKAZiUSAIktj1ARs
      1z6783/lLmzbNqokV/HZle1XGuW20nuWg2VZ2KVQyJUiGAySy+XQdR1FUWhqamI6PENB0wAb
      j8tddfoU3UrOa8T8fj8ul4vp6Wm6urr4/Utv8Mv9xxBDTdiWRXo0dnXZAQRBqOs6cMtdH+Hm
      O+9DlKTy5+WjtuSq4HABleyAkw26sq/Kz8XS787n5c9q/64Yp3KujaCga5i2VcUC1bu30kq8
      EAuvOS4AjUZjVd53IQRgWmbZ+lqJ1WibnPw/jgrX8TYVVQHTtrAtGyoer1I2Aao2CYBotoDR
      1IWcnUeUwNPuvroIYDGsde7KSwmbhQuu0UXoLIjaXD9QfCf13orjV18Pq9n56y3+1cJR3cqy
      XLQ9lFK4F59t4TNYtl111WGP3G43YxMTnDs7AGILurcVKTmL2dL1p0EAf0qop/ZcALu424lS
      Md/PSvtfDpZlndevL2HEWkpjtVZwEuTWy/DgzM95Z0rppHDUoZV5T5999SX861vZ6w8wefIc
      GZePNIvUCLuGy4+lTgFJFFHqxAc7MtJSKR6XS/+4nEpVM/TyolNkuSENUO2zOLr60oiLzknX
      9bLrc6UqtLK/ytM/W8ijmTpuV7FAnyRJZbWqKivkZqYx/Dn6b78DKzqLz5avEcCViMpTYDGD
      US2c9ivJb7oUFtMaqbKCWVIwNLLrq6pa1sRAdUUXB6It1D3JKufg9XpJJpOLulUbpolRUiQY
      hklLc3M5fUpnZycdTS1MiS7kbJLrJJO+63cRzenXCOBKRe2O6VxTpcZ23YuJxWSIWjiW3Hj8
      fKHzeipbR36o9YCtTX9e6etjlYRuy7YwTPO8LCQIrGttRdM0TEEsp29//+230zc9zeb+fibD
      c/y/r57AkJRrBHC5YTt63SUgCKU6DEu4/15pEWS6aRCLxxArcpLW272dhIeV3q5OEq/KCvGJ
      xPnQ1nQugyRKqLJMwdAJeH0UdA1ZVmhtbkGWJCRJJh4rluFyYoF3BoMIgsCb50bJWqAZuWsE
      cLkhwKL+Q4oko0j1XRIcPvpSnQYrzYJhmiamZeJxuTGtkoGqDo06lR2dZ3RUy5W7f607tr+U
      39MsacGCgSCSJJHN5VAVhUKhUBaARVEkEo3y/LHj7O3tYceWLRyZimJZCgg1uqTDhw5RftVW
      gUPvnmBq6CRDU3Hq4fnnnq17PR+fYmCs5LBmpHnjrSPLva8lcejQofLvU0MnmYo3ltrv6JGj
      qxr3UsBx3ILz7sEC57M6L6aFEQSh4cW/UlunbhpVGdgKula0UBuN1xBQFRWvywN20SqNvZDQ
      RQRkqbrcq8fjobm5uWr3rw3eEQUBSZTwuj14XEVfH0mSCPj9xfciSeRyuXL512eOnyIlSAii
      yMGTp/C7wG/m8daoTbFioxwdLVbRHju+n3nLQ8u6LlpDxWqN8cgMR46dxCylLg+X6gMbWo6j
      hw8xOjULwNG3XuLZP77KkRNnQPayeUN3sV0hy+F33yWRKUr0M+Ew2eQ8h48cQy/1OTF8lmMn
      z5THADj07nkCmB4+xXSJAMKTo5wZHC1/NjU2yLtHjqOZFtGZCZ5+6ikOHjxINJEhHJ5hfnaS
      U2eLBfqOHjlMtlAUsiIzExw6dJhsKRZ4Jhxm5NxpxkrPczHhVly4FRcuWcXn8uBV3cVSQcLS
      scCO4LcULtSyW1mp0UlPXkmojcARkkVRRJWVugY5qeTB6YR9OpVcKuebyqTJ5BYG5EiiiFWK
      EKuEXTL+JRIJfD4fiqKwo7WJr9x8I7Ig8nYkTtfmTdy0pZOObI0z3I13fpBj+18FYP/RUe7a
      u4mZgUMcH51ndvgoP33iObLxMP/2vZ9WDXrs3YOk8wZvPvNLTo7XnhYazz/3Cph5/u1fv01e
      0/jRd/6FSEbnud/9kt/84SWyiUl+/sTzjB59hT+8dYZUdIozw1PlHsxChoMHD3Lw4EHODBUX
      /OkDL/P8/qNMnj3Mb557Az01yzvHB9GyMX7y6OMLXtjvfvkwrx44zuEXf8P/+MHPyWZTPPwf
      vwRyvPXmYUwjzw9+/DAAD3/vXxmaivLy73/G26cnFvS1lhBKvutVgmUD68y5b7k2FzqnsvVb
      lPCoblRZQVriRFrpPETOj+EErXi93gVtNU1b9KQTBKFuIT3H+Q2KLNUtu3fzwoF3eHZkHLFU
      40Lx+Wlqb6+WAUR3C4KexLZ1dMGNu2Lc/W8c4c//6uuEJIiOPUqy4ksSLI1jx05SiM8yPDbF
      ndu3M+f3cMOu7UBxt44OH2XrHZ/k9tt2sH2dxP6jQ+Bp4itf/DyQZ/inT9LWfRuZFx/nSNLP
      F/a8b8mX+saBdzDkAOeiMJua5ON37CAyOczMhMDEXIbWzh56enq5+eabAfA0dfCZT97PyEGZ
      Sc8ubt/ZydmhR7ANiCdmmJyb4txI0Zu0o38H9959J9y1h0f+42Xet+PiVqw0TbPoXnGFumUJ
      wupTtAuCgGSLmCUmu7akqZP3p6WlpUwEhUIB27SqCF0UxXJN43oF+mzbJhKJ0N3dXfWZ4vYg
      qufrTsdnZpiw6rhC7OkJ8cILL7B+9+1V19e1uBmfjhHqaWYuncJdMe7hgTH+9pvfZPzYSxxN
      Fh+2NgGrv7WdyOEBYAejo+O0rH8/kaHqsSVfK3//rW+hZ6M8+sQz/OXXvlC87vKVFzLxEQBC
      TW3c+9mv0uxVyOXzvPXc49z9+W+wuVli374fAGBayydpHT78Gr23fJy7d3fz7YceqvpsZug0
      nnVdy/axWiwV63spsJh7xFrlC3VQ1AaJZa1PLSrDNDVNq5v9zbIsdF3H5/NhGAbpdBqv11vO
      LeokxqViDEEQuH3HNn5/9AQ5X5B8fJ7xSBLquULsueMD/Ld/+iH/x//1MQDc/maCbpXdH3mA
      Rx9+hNdyGtff/mFUoKO9A4D+9hD7vvs9mv0KPbs3EurZROTJfTwSGefBL3yEjo42XM39bAwe
      4TsPPUSofQNf/lAHidEO59XQ0dFGIjzKr//wMrZlc9+nv1ieU1fX+UXob24Dt8wnHvg4P/nR
      PgRJoX/nXu64/QP8+Gf78AWaCLYV+71+azf/9u2H+OinvkB7R0fV8wB0dLTTt+sWnvvBI5x9
      24/kbQFgZvg03/vuPkRXiK997UvLfrFXMxwXbLfiWsBSrbVqVRAEpCV0vg4LZNt2uUySA9u2
      sYUiS+Z2u8ufO64PTptkMklTU9OCuft9Pj65ZyfHBgY4qefpbXIxaFlXlzv0pcJPH3mErz/4
      4CUZy3GHvlxfg2VbWJZdPgEqDVJLeadWYikP1uWeS1XVst+/v6TFyefzdXd/zdDRDJ2erm4U
      WUHTNLK5LMFAsDxWJBKhra1tgTuHaZocPH6cmWiUeZ8PQZJ44+TkNTtAPXzkvvsu6XgNOcCt
      MZxFKwriggwjtUm6loJlWeS0PLIkL6hF5qTTXwyKohAsGacqx16sgo0iFWt/mYaJJBZjfYOB
      YPmeeDy+gP1x+ozOz3M8FsPd0YFi2yQjEXx24doJcLkxNzdXTtl3qbCcenQl6lNnVxYFAY9a
      rcJcqoi2y+UiUKpDUYl4PF7W+zupEyttAk5wP5yvd+bEMDvW49rdf35+nmdPnMAsWYUr5a1r
      J8AVgEu9By22sCutvY3y/44PzmIRX5VslGOwcnT+tc+dz+fRdf18xglRxO/zkU6ny5Fh2WyW
      qWQSQxD5wO5duFyuJZ0FTdPkD0ePMm/aDB48xXWbu/E2hc4T+bUT4PLiUlWIgaWDYaA6Dcta
      CMCqquJyucpVHc+cO8v47CweVcXv9uB1uWhpaaGpqQmfz1dOd5LP55mYmCCaSRPN59Akkehc
      FH97JwgCnubmYiBRNMp9u3bR1tpad/xcLseLh47y1NkJNNUDviBiJsGWgIDf6yIbT1zdBPD6
      s7/i8GCYXXvv4J7bbwAsDh08wk03713Y2Mzx/Kvvct8971+yz5EjLzMhb+GuXesvzqRrsFiZ
      1LWGk82tlk1Zq76h/qkhCAKBQIBzw0MMFzJ4mpvOt7Vt8pkMqeg848dP09Pfj+BS0QQBU9fo
      2rqlrNqcGhrB19WzQF6SolH+7IN3LxjXsiz++48e4VxL/4K5KYk5btnSyfx0+OpmgeLxNF/+
      i7/gtz9/nNP7n6Rz+21koxEycyMcG4+zc8M63j0xwE0f+DgfvLGX6XBxt/3Vo99ncDLGnp1b
      6dl1C8ffeRsjNsVU0uT+u3Zi+y/zg10ECIJQ9M25CNBLeX1cirpAdamqKhMTE4xqWTzNTVV+
      TwAunw+3308yniRtW3T29eK1beaGh8upWQRBwNCq/YHKbNUidZpnZmYIWyLS/AxWc0c5jlvI
      Zdi9vglPKESXz3d1pUWphVFI8chPH+Wuez9CS9dmPvOxe7Btm7HZOH/x9QeZm5rk+ltuRTQr
      tQoWk+EYt+7dSc+WHbzym8dYv3kb4XiBG7ZtIqs17vD1p4xG0zM6VSGtkitD5T1OIPvr54YY
      nZxFq6lL5uzupmWycc9OZLVCLqg5VcppYmwbPZ8nNTpEYmwEaRGN0TtDo4S2bKezfwPBTBRy
      aWxDZ7PHpLmzaBMS5as8ImzHje/noztvxCOBltqNIAjs3rOTnvYAv/z5L7j33vt54fkXuOXu
      j4KgoGrz/OL3f+T++z7Iq++cYvdt97Jl+zb27txBQIvw7kCYndfvxXAHlh/8CsNKorQaQaP9
      iKKIW3WRLRRzFzU1NZUTWsmyzOTkJAmXF9kfYODsBL1dzQSazxuqKsdx8gIVsllcJSc3Z6eX
      SulpLNsmOT3Fxp3bi1qh+XhdmWUwlsT2tyCIIoGeXjxjZxFzBn3vu7ncJp9MXt0ywJ8C1koG
      cKqxXyg8Hk8568JK5uO0d1KXVPahqirvnDjJgOorqx4LiRitsklXf2/5foB8JkN0bp6W7m4m
      T58h2NyE6vXgDYUAmDo7iL+3H9u2iY2OsGHHluL90Rifuu2OBXP65989Szxw3q+oPTdL7+YN
      TA2N4u0o+gnFpmcufW5QW8/ysx9/F6ltC+tCHiw9yw+/t4/TEzH2lB6qEZw7doDHnvgNGctN
      f08H00Mn+NHDj4G3lZ6OlsY6MQs89sjDvLr/ENt27catiDz1xM94/rVD7NqzB0VqnEN849kn
      ODaVY+uGLlKRcb7/gx8T1xQ29y3tS5TJZNaEAFbTh9frLRef8Hg8y1ZsrzeuU5290hfH7XYT
      icwxU5G8R3K5ySMzPTzK/Nw8sbko6XiC8bEZ3KrMyPAUdqCZvKgSj6fwygKp+XkM2YVacpUo
      JJM0tRW/41Q6TW42wvru7qp5HTg7SE71FNmmyDQ7tvcjKwqh1hbS4TDRmTDN/RsvhwwgsGPj
      BpLZ4nE3fuIAm277JO50mNQKbEF922/gE/feUVYjvvnmIf7yb/+WgcNvN96JqLK5fz35fK4Y
      Z5qNELWa+MjeHg6fm1n2dgep2RHmUgbRWDFsb//Lr/PZv/hbwkPHsa7w81UpRVBpmkY6nS6X
      JnUismzbbjgQxtnlVVUtB6PkUikqaVMQBCTVhbu7D6mjB9p70Vu6CWzeTjSjE9q0BU9LK6o/
      gKe9k6mpOQKtLSTGRhEEgcTUFFY+Wz5lUsk057AZm5qqGsNV8hQ1s2k2d4WQlApHu3yOUN8G
      gEtPAILiIeirqNrtcZOMx0nnNJQVzGbk+Nu8fTbG5z/xIQAUsRg3atgrCNszdLZcfxs7u71M
      RtMIkko+kyKeSOF2N16J8K039zM+Mcrhdw9hWOB2ScQTSQra2lp315pbdTwra63Q6UymHJpY
      6QrdaEhkJpMpn2wFw0RoMHIt0LvhvNBbelZ5XSdn3j3B+r03YVsWpq4TaCladCPjEwS7u5G9
      Xl4bGqx6jr3r27F0nVA+ji/gJx2LFWOLI1GSapDI+ASmfhmyQmTnJ3jh0CCIYZq5nlDHHpRT
      v2PDjbdVuVgvh0y+wPzkOZ59xUurX+Lej93PE799invv/3TjndgGLzz9awx3B7eqGU6PC9y6
      rZ1zEZ3P9rc13M19n/ky9xWSHB6KcOTdA9x67/38+olfcfuHPsoi5cYuCI2yOZZlYVhm2Xem
      FoZpUNA1FFlBrecGXYr+qnXTdtKML+e67Wh3RFHEKmV1K8/NMNDTKVxNzaWHWrofUVaQ/QEE
      USQ2NkLvlg1IsoxtWeTzGt6SG7TU3MzxgTPccN1OAG7ZtRNbe5dAz3aeOXwC1a/i8niZmEuh
      tnUgBELMjk9UC8FFDzy7Ii5DKMVpXFho3WAysqL29WCYNrk6RS5WikTOIKevrh9VEuhtdq96
      Luu8fnpb1gEXxxCmlcoSuRW1bt+mZWKWypEuhnoOek6yKShGWjnFt+E8cTj3+v1+TNPk1Nlz
      HMgbUBorPTmOLIC7u7fuuLVCuJ7L4ipkCHV1MXbwAH07tuFvaWZudAxPR1eRGEoqWzM8y1c/
      9KHyvZZlkc1mOXL6NC+/+y6eji7kzt4qi3fVCRAIBMCI83//l//GdbfdyYNfeAAzG+H/+5/f
      RfS18X/+/V+vSNMwm5havtEyyJsWsXxjAtlSGIvliWZXp+P3qxJqaPWL1S9eXEtbMZvE4huW
      VFO1pRJOELwi18847XK50HWdXC6Hy+UqB6IYhkEwGCw79jkObb1dnZw8OUAmUNTm+Nf3VvW3
      XNKv3OwMvoCL9OQY22+9CVlVsUwTTTfxy3I5t6pt2xg+b9kdGoosm9/v585bbqGvq4u3hkYY
      S6eQff7yWAtYICOdxtfWRqFQTEE9fe44d3zia+ROvkzMhNar2nLw3sCqTxSh/E8VTNMkmUyW
      /87n81Wuy5Vllxx5oaBpJOxqr8vKNPXLwaUqdG7eVHVtdnSMUE9PNQEJAn2yUl78tehdv57e
      9esZHZ/giXMjyL6irWcBA5jX4fbb38f87BTxyDRq63oOvfYsJ6djBC9vveZruAQQhGIBvEaz
      vy3VTzqdZjA8hxwMldmUWkF6OYuzYFcXwMjEE6ih5mIq/AqB2ZNIcveNNy47rw29PdwYOG+x
      XrCf+9u62dCVYs9f/gUSeXyBjXzlMyqitxllhTtLIrd61qVgWKQLq9emCAJ4VqJmqgOXLFSl
      a7lQWBfB9uj4uV8pGeJEUUSWZU4kUkih5iqZojYFYj1Yhk4hPIVsFN0nUtF54rNzeNrW4W1q
      KrezbRuSKe7dvbthLdVNWzdz8I0DqC1tdbRAgkizT+GNQ0d54MN3Aha/f+5psu4OvvHlz67o
      BZ+ZbSyB1VLQTYucvnoCaPbKdIdWJ8DKIuTXQCA3VklE9bQ8brf7olRzv1AIgsDs7CxysOl8
      HugaFWcl8tMTyLaJJYiYto1bVVi/ZROZ+Xkmzw7hbm6mZdMWoqOjZQKwbRsjk+Ge/n78/uXl
      Ktu2yWQyjI2Pl+MNFhCAbZv84cX95GyAO7ELEYbCOl/52tJuxNdwcSHLMoqiYFkWhUJhwReX
      y+WWjPC61CeDIAjMJxJYqg/Z463L6tjYCAjkZmfo6u1GrpMM19fSgljB1/tbW0lHIvhaW9Fz
      eW5pW0d3KeFBoVBYkFC3EsfOnOF4ZA7dMFgn6ETPnVgoA5w7+CLHBic5+NZ+YjkbWwzwqU/e
      w+OPPso1P8nLi1wuV86T74T+NQK7kUxb9e67QFZNEAQkSSKRz5GLzJUXf/rUEQqToxiOsFzq
      XjI0JFVdMJ4gFDPLVbJO7kCAxPQM82Nj7G1qYnt/f7n9UosfwLBMLFki2NVJoH8D/TfvXXgC
      bL3lPv7rLffx4ksvkRo/RtwV4sCBt+jctI3VpUa6htWgUd+ceriQBLq2bZMt5PG6Vh5A44Q0
      pm0bWSyxbPkc6zb00tTZSXwmTHQmhmmauGVhWQ+ASs9R27bp2L6drbLMzk2blr6xBjft3MXm
      RIKBoSESuoZZTw0KYFsmt99+Bx53kaK6v/oggrR4au7FJ76i5nVh2TapTYkX/AAAIABJREFU
      NbADCAJoq+7GZi69+nOwVdGhfhTfBRsd1wKOddhxq65d/I4WZ7GTwQlGF0WR2dlZlFAQNVFM
      b2LNzxLasRXbtmnu6iS47nxFzOnTp0nNzeGvYHWWev4OTeOW66+v+9lyWaxDoRC37j0fMViX
      AF55+le8MRznv/xvf42eCvPP334YweXnf/+HbyKt4ItZi++wWAd39VoT07QxpNX1Y9s2xhrM
      RTOXUPtdpIVv2zZ5XSvl+Ky/QAzLRLKkBdUxK/twu90UCoWyBdhZ9E78r+MROh2ewdfWynQk
      DuFpevv7yv1YloUoScQmJ7F0jb6d15FNJklG5vC3ravSGNXGKHuTSe553+JpM1daMHFB69Tc
      KJN5H20eMC2bmaFT3Hb/n7Gn3Uf88tRavoZVwrZt9FLh7KXIy6u6kSVp0R1eFEVM0ywvMsfr
      0+v1Iooi8/PzRKNRYrEYU7kcpmFi5vO0t4VQ3Oe9S53/LcuirbcHQRTwNYXwe91kY7EFaU2c
      38VEgvtuvHFNq4IuOAHSmTySkeT0qdOMjo3hae3lncd/D5bFfdcMYVclHI/OWt+fSv8dp51u
      6OimiddVX2XsLEZFUcqxA5FIBEVRGJieIpbPIdg2cmc7NtDcHMDbFKxLVN5QiPR8jKaOdgAS
      s3O429qJT00R7OysWuh2MsmHr7sOt3v1vliVWEAAXf3b+VL/du6//34UCURXgG989XMIrgDy
      Co9naQ1Oc1kUkNfCpVJYvQFKECCgrn4XcMmXPgyjniq0nmBtWCZL5Wf3+XzEYrFyTv+pqSna
      2tp47fgxck1BxICvPJ4oCNiWhVPevHZ8dyBANDJXJoCeHdtIzkXQ9TxaNovb78e2LFyJBPfs
      3k0o+P+3d+bRTZ53vv9ol2XJ+75gzBIW2+wxa8gCSSBLCSGQpGnStJ0hnU46M3fOufec2/bM
      dObO6TJ3etvb9LZJmq1JScjCHhJCMGsgLLbBCwaM8YptkDdZu/Tq1Xv/kCVblmRsbIIBfc/h
      GL3L8zyv9Pze5/f8lu8vbjRfQViECIDb0sn7n+wgIXMyax6+F5nMyyfbP8FjyOHFp9eMSEfV
      qkY/WSQJYtSjD0CSyxi1F1ejlJGbMLSpbTiI117/9zKWNv1wYc1qpQphCJY6p9OJUqkMRFrG
      6vUcqKpATEoMUq8CY7zGpl4mVwTp+2q5HK1WR7fDgUImY5JGQ/GiRTesGHpIqwqtgckTc2lv
      a/WN39nJpXYnxeG4dqIYNRSK0IjLoXC9IuzfTIZbBYN4duQKtKrIyUB+kiulUonb7aajqwvX
      IC/sQKeXSqPG06dm+Y8P7C8hJ4crlxoCPEFTDPGsufc+NFYr92Rlsaio6IZNfggjABIy8idP
      RbRbEQGv3MBz317L3h3boo6wGwC5XB6i1w7cKDoFN0JfAguMvg6wjFAhG8qDHC4d0m63B0Kh
      czIzkZl6g877N7GSJJGYlUVve3vQ8YEhETK53CcE9Y0IVzvITkunrLKSKRkZ5A7K870RCBEA
      c8dl9nyxj/SJU2i7WEnL1W6OfXWQnGmFUUfYDYAgCIGCD+GtH7435mgrtIBv9ZCk4fuFZTIf
      e/RggRFFEavVilarxWQykTlEHI58iDJOAeuOUsmExGRW372QA2VltJpMFM/9ZjSOEOU6MXMi
      a59Yg0ZnQB/r42ZJeXIdKEfuERyTTbBChnaUUZwAKrlsxJv4wVDIGZPIVLcndELZ7Xb0ej0W
      iyXI9q1VjX7P4YcMkA1TnfCIIkpFfzmLcA46URR9CTQRvNT+aw3JSVg6uzCkBHv//CRXGRIs
      X7AAgIUFBSSFKXBxoxAiAC7TVfYf/pqLjW38z3/+ewRzG6++uQXkKv7bP/5whI6wsaH7GO2y
      Dz7VQT5Ka5JMdv06+ECEa0OSpEAwl8vluiETYNixQ5IUcGL69W+vJCGIQpBAiqKIRqO5pnNQ
      Fx+PvbkZj9uAso8yRfJ6obuH4twJTMztzxLLzf5mOFn9CHkdaBMz0Yi9xMT6UtiuNtZx94q1
      FKYboo6wGwy/AIyHmH5//JBfLVPI5WiU/ZtjP8W50+kkTqXiau0FnNb+WgAh+cRqDaLgwWI0
      4jAameiFNYsWB03+m4GQFaCj5SKCKhG37TLtly+hSJ7AyQ+3IVOoeDDqCLuhkMlkASvLwPTC
      mzGOax3XaDQYjUau9vbQqZaRXzCdpgv1aPX5QKjK5HY6SVRrWLOgOFDYYjwgRABSsvNZronj
      4YcTUMk8yFQx/N3fvoBMqR2R+gPgHCULA4Db40UYgySUuFgles3ovnSrxcmBz6pHPZakpbNY
      lBWeMc7j8QS8rB6PJ1BDNxJuRKy/SqVCrVYjl8sDpFmDz1ssFkxWCyadOsDQPJBITyaT4bJa
      8VptyCUJg0dkRdGsMffkjhahSfG2bj7eshWXLIZ/eum7yHDzf37zG9KmzxtxRthoM5/8bYxF
      CqFKISN2lF5cuyhy4WzrqMfSOXXikOcdDkeg9I8/zkYmkyGKIg6H44aWVI2NjSUmJibwO2s0
      GpxOJ1arFehjUlAqsdvtdNttyHU+VdkXKSrDK4rIFQoEp5M5iclMnbvgpka4XgshewBlbApP
      PrKCGD81nqMHm6QmRntjuOWjCA9RFPF4PNhsNiwWC2azGYfDgV6vD1IfhppUI01oMRgM6HQ6
      3G43PT09dHd34/F40Gq1gT41Gg3d3d2kpaXhFIOtP6nZWVypvUjP5VZyZAqmTswPjHE8Tn4I
      ZwUyt/Hm5s94at1a7DYzHpecp55ez8G9exF4mOETBkYx1vBXUzcYDFgsliCHWbgJNpJJZzAY
      0Gq1eDyeIOoTpdKXd+ynPbfb7aSnpyOXy5mZnUtljxGtQY+j10wKShYvvy+k8uN4RogAiJKa
      4nkFNDe3kKCTUMam4uo9z8Nr1qIaMpg2FGPBoCBKEh5x9Eu+VqEkTj06m7qoi2FiZoRMlhEg
      wXD9q6kk+UqC+lUT6E9B9Hq915XGKJfLA+mEg0uU2u32oOqLcQMC0rIzszDbbAhWN/MmTCFh
      AFvDrYIQAdAZ4lFKApr4TNIyJyKTSdR5XNjsziF5HMPBNgbksA5BHDWjG8CMxFTunTg0Vflw
      8L3ieaNuY6QY+Ib3E9rq9XqsNhuC6CElMSlQfdG/T/Azsw2nBKu/QLXH4wkRAIfDgcfjQalU
      olQqUauD6RZnTr1rjJ/2m0XoJthpI33STPbt+YzF8wrobammtkuBcLaEmQVTiLlFlrbbBaJX
      RPB40PatXv6UREEQiI/3vY3dLjeCIATSEQ0GQyB90WazhQiAX5/3W5v8QmK1WkOZGyQJt9uN
      2+1GoVAEuP9vF4QIgEpnoPLoVhYuXwnIsPWayMydiMPeitMLMePDfHvHQCFXoAhjvRr8plap
      VAGqc7vdHhAGURQDZk2bzYZOp0PXV2jCH5npcrnCTv7BEEURi8USpAbdahC9YhDnaYgAdDef
      53xLF2axjFStA036TOo2v4cyMZeEW7qk3q0NSZIQvV6UYRxICoUiKGTYb7fX6XTo9XrfvaIY
      4BayWq0oFAo8Hk+AZiUSvJI3iFXC7XbfFJ6h0cLldiFJ0NPbQ2pyCkqFb+rf0Bphr1VUjLoN
      l8dLj330rBCPT53IvIzUUbcz1hguPbro9eL2CGEpz2NjY7HZbCH3qFQqtFotgiCgUqkCG9qB
      Vp7hYuCbMzExEaXy1mJJbmptAXwGgzi9gYQ4n/8i9Clcvbzy+9+z4PGNLJ6eDpKT//WzfyOn
      sJgXR+gIi48Z/Zfk8ngZOpV7eFDfhDTEsYQMwha88HNwhnsrGwwGZDIZFosFURTR6XRhBSUc
      Brc3cBVwuVy3nAAkxMVjsVnxer2YrRaUCiX6sHWC1QYeuW8xYp+3UXL04tXcOnbd2xVyuTxE
      /dHr9QFO0HC/T29vbyCmSBCEgCDAtZ1kg73NA9t3Op3XtCyNN8Qb4khPTg2oPt29PmKuEAHw
      uB1camqh6dIleno66baKPLjqQbpbmxm9IhJFOAgeAWGEzG/+sqZ2uz1g8gx3jVqtDht45u2j
      HY8kCJGC1TQaDTqdDq/Xi9VqHRVj3TcNv0oYoGq028KQ44oe9FnT0KNCEFyoY1OI17Sz7tln
      UY5QFRkLrcMpSZjHgBlOGANn2o2CUqEMTMjhwM/IMNy3uH+VGJz7C744/5EEOfpNsP7wBpPJ
      FMgRHk6gm38THYnHUxTFgAVrpBjO5txfcBt8JVbDmEHjiNdIxOXNIC1FD0icaW+hR9AyIWtk
      m8jEMdgDmB0ClW0j37QNxpLM8ZvRLJPJUMiGb19WKpVB9bkiwW6343A4Arb+cG/rkRTC0Ol0
      aDSagOnU73n2q1lutxuVSoVGowk7gQf6GuRyOSpVcJqn0+kMqHOxsbEj9jn4M9QGtzsQsTE6
      es1mJCREbxgVCGcvNVVVNBl9nI6mpgquSunUlx/FceMMRlFcA/4CdZEmVyQMDJ0Y7T7OT4Vi
      NptRKBQhJlS/P6G7uxubzRayQvkrTPqrx/j3Ek6nM8i8KkkSVqs1UHV+JLjW5txvMvZ/F6FX
      axO4u2gql/s+OqxWElMycHbH4PaCLuoIuynQarV4vd5AqPRwdG8fDYpvlXC5XOj1etxu9zVt
      /+Hgf2P73/xDFeOQJAm73Y7H4yE+3mdu9Hq9OJ3OfnqWvj3EwAkul8uJiYkJWKr8QqLT6UJC
      MML1CdcOAJTJZORkZmF3OOjo7gwVAKepjZ0HS3HJG0lTLkCfUUjLR++hTM4j/ta2JN6S0Gq1
      qNXqQIyPvyLj8CEL3ON2u697FYiJ8QXw+dWu4eQkuN3uoLDua1mO/AI+EP7oVH8eglarDbua
      +eOVhgtNn0CFqRM8duhxjb5kj0PwjkkwXLZBR1LM2DEsjAYKhQKdTgcQSDQJB/+PDlwzM2wo
      +FULf3uRrEbXGnM4YqtIGFjcYqwTeAZ7vmHkmXGSJOEW3DfWExxFFOMdUaUmijsaUQGI4o5G
      VACiuKMRFYAo7mhEBSCKOxpRARgHKPtqL3989VVefe0trGFM/G31NdS3mYZ9fKyw6b1Ngf+7
      u5v491/+b157/XXeeGcTTs/QxsOyki3UXHEOeY0fX+7bG/S5q7GKE2ebA58/+2w34OHYsRMj
      7mvvvi8D/z967GjI+VsrqPs2RE9LDZXtXn70wx8ieb1IMqisrGDWrNl0NNcixE1Ap9XiUSkR
      3Ta2b92G3avm0ce/FThu7WjmbGMXtWdPM3XuUhbNnkZXeyO7Pi+h4O7l3F00ta83L4f37uZC
      01UW37+Kwik5VJSX0nm1ldYegfUb1hGjlFF+bD/l55ro6u2fVF63jfxZS3j+0aW01xxlz9Eq
      nri3iK/3f865lh4eW7OGtAQ9XVea+PSzfXS2N7K64FG8goNdO7YjqJN54vGH6GmppbHLztnT
      ZcxdupJEmYkd23fQUN/IwvtWMfuuCSRPmMrO97axsGACkrsXY48bUKLX+4LtOlsb2LWnhKlz
      FrFsfmFgjE5LD5/u/gyLW8a31j5JY+VRdmzfQWN9A49teAG93gCAx2llx/btSDEp0RXgZuNM
      aSkrVj0E+KjL5TKoqqoEfDyt7SYnpvYGWjqsnCzZSfacFax7bCV4vYHj1o4Wvq5sYP1zL1B5
      8hBIAlt3fskzz3+X1oqDtPb6qQ0l8qfP5Qc/eJFjB/YAcHDfXibNWsy9BUkcLrtIbWkJTQ4D
      33/xeVLiQqM7Ja+XCxcbSE9LouLQbsyx+Xx73aN88P77INp5/6PdPPXtF1g4exoAn27bwtzl
      q1lakMrOL47R0XKRyoYunnvhBU4eKmHCXbNZvHgRGzduZPZdfaVU5Vpi5AJuCc6eOMLspfcC
      fd+LaOf9LXt49oUXcTWVU1Z3JTA2ryRx76pv8eyTq9i1cyfzl65g0eLFbNy4kawELZVVVQB8
      uGkTix78FkuKsqMrwM2GWqXE6XSD4dqhxPOXr+ajjz/hhMnKqnXPMdCvXTRnHlqVklhdDFiv
      UFXbyLtvv4XLamJip4ns+DQEWw87tm1BHRNDRZ0v2islM4/87DRMQjweq4eqxi7WPL0COaDV
      BEdjHj/wOSd3vc3q77zMfTNy+KDsEOu/MwMlMCHBQG9nExNmLyNWqwqETjTU13HF9BEAcWkT
      wABz5s1HpVShG8Izv7golxNnL3O5xczT9yQFjgvdl0mb5nvWB1bexwdHLjGt76u70ljL7q/O
      oFHKMbkje4W9Wj3ZyXGQXBRdAW425i+7jx1/fRubU6Cj7TJOEWw2Ox7Bxdma80HXdnR08ciT
      3+aFDQ9xuvxc5EZjU5mam8l3Xvw+GzY8RWair3Jjd3MtOXMe4Nn1T5CoD0/OlZes4sjpOhyW
      HozdwWHoi+5fzW9/9zsuVx6lrdtKQW48JSfO4bSaaO4xE5eQSUPVSQSPh+Zmnw6flZ3Dysee
      5LvfeYZ5RTPC9ul1OzA73AhC/wYob9YSWs6UIFPHBU1SVVIuHRfKcQoeSvYdYNq0yYFzp6su
      8MzzL7LqgSWByqJ2ixlB9OAZQLCscFlp7TLTdqkSxc9//vOf+09IXg8HPt/JvsNfI1PryUxL
      5tjRo+RO6K/y7Ud3UxXnrkpkpvSXx6morCQjPR2A+poyHKokDNrrW2SMzbV0C1ridb63UHl5
      OZmZ4Ymtyo6W8OmefVTV1JKRk4ded+2Yn5qKShIz0m/YG6CysoL09IxrXqfUGpiWl8qO7dtp
      63EyfdoU9HIXu0u+YtqMIrJyJ2DQKtEaEknQyfny813UttlY+/iDKOUytIZE4mPVqHXxJPat
      IukZOUzKSWb7tu10WEQKZ05DqZChT8miufII1fVGFiyYR24fQ3V6RnpgLEVz5nCp7BDl55sp
      LCwgN7v/O5erdWSlpzJ3ThFl5RUsvPcBOmpPceB4JevWr0evjyMzXsHWXXvIzp/OxPx85s2a
      wZF9n1NadZHpBQXE6bTo4pMD8yI9I5287DS2btlKbEo2KQk+PR2ZEkfPVabPX0aCvv/3TM/M
      YXJOClu2bCN9ejGLCicBYEhMpXBaHru2fIKgTaVgSi4Z6ekk61Vs27WHvGmF6NQKMtLTmTFj
      OiWf7aClRwRpAA7v2CydqL0sedxOqaKyWpIkSbpypb3vrFdqrDsvnb1wSTJbLFL72a+kL09e
      lM5WnpE6eiySudso/eJXv5RKS0ulVmO3ZO42SlaXKFlNnZLJYpUqz5yWeiwOX0uiIFVXnJaa
      mpsli0MIfK5vaQ+MxW1uk9796DPfB49NevOdzZIkSVJrY51UUVUjCaI3cO1rb7whSZIk2c3d
      0n/97g99wxWlc1UV0tWuXl8TLrt0prxMar3aJTnM3dJvfvEr6VhpqdTUapS8okc6f7ZSqqmt
      l7ySJLmsJqnb7Ah6/ivtVySXzSzVN7dKouCSqitOS3WNrZIkSSHPaOpsl375q19IpaWlUnun
      KajvKMYXgl6AWXnZHNnzKeca2ikqKgBgX58Z6bOP36X8QjOm1mo++cJnjjqwdzc9Nid/effd
      kDdbbflhmrrdNFUf5w9vfoDN6eTddzcBIq///rd0mB0c2f0hF65Y2bb5PTotTmrPlGLpC1RU
      GTLxOowA1JUfZXrxcq7UnmLnoQpsvUbO1TWH9BljSCC2783yyaa3aO+x8emHf6Gpy86mv7yN
      3e3hVGlZyH0tdTW0dpq5UlfO7gPldDdVU157Jej5d2/7gHf++jGiV+J81Wl6rE5qvt7DsZqW
      MM8YjKH6juLmIkgAJs9ext9/72laa8v53WvBk7rXq2HtIw+yZHFxYOf8wKo1LF20kIxkA4bE
      VHJycpk/fz5ZqYlB965a8xSLFi4i2aAFcytxdy3lvmWLmdunE06bOomK06V02CUGZlFOS9NT
      12GnrNZI8fRMEtJzEXpaKK+qJTm5f2OEo5s/vfJbfvav/0HxPQ8BAhVnqrh4rgqnw8zJ8hqm
      TMql9NRJRJkKjSGRvJwc5s6fz4SsVJQKGbU11VxsucrlhoawX5TTLed7f/M9puRlo5B5OVtV
      Sbuxk0sNzSHPGJ+cQW5ODvPnzycjOT6o72jo7fhCkABYzBY0+gQefuxJkpRCUF1gp6mLLrOd
      y01NEdkhJFHkmpHfuiSMdVW4B2yUJhcW8w8vv8ycDImTF64GLl1wzzLKjuzHq4xFKQM08bz8
      D//ISy8+zZ7du/vbjEni7378TyybNRGX4AGUTJw+i7/duJEf/fNPePyeQuYuWcmPX34ZvbmO
      pl4vMknEvy/68qtSNr70Et99bj0aBYFiFCDhcPhs4fFJyaj6NlZfn6nlpZc28uza1REfUxS9
      gck+uO8oxg+CdqjG5vO8d/gUSqWSyQULUAHpab4N0voN69m+dTMZOWkoiUEdG0eiwrfpSuvb
      +C5fMINXXvkjy1euRp+YglYth7gkFP4NT3oaKPU8uXoJ773zF+JUMlKBytLDnKlpQqaK4TtL
      0voHF5uOytrE5GXrAbB2tvLu7hK8kpd7Vz8ZuM63OZaxat3zlHy6hYa0FJYtmMkf//gnlAoF
      Kx9bR9OZg9Rd7kIdl8bKeDkxyxfw5iuvULx8JYtmTeXVV18jKS2V9IwUUvILuPTnv/BWtQGP
      Uh/0jAAzJ6bx6ut/JiNRT3pOIbF6efAzAotnTeWV//cn7n/ocTpqTwT1HcX4wbATYo4f3gfa
      eJqqT5Fb/ChLCvOuu9M9u7aSnJHDkQP7efHH/4OkmOikiOKbgsRf//wHbF41jz7x1PAFQHDa
      qDl3gcT03BHTowxGb7eRS42XyZ8yncQ43ajaiiKKEcFt5N2tp3nhmYepObo7mhIZxZ0Ggd//
      1/+leMlC5C5LVACiuPPgtPZyoeEyM6dPiQrA7QhRFMdNIerxjujuM4o7GlEBuNUheam7cI5L
      jZcDh376xn5++uf9N3FQtw6iAnCLoPRkKQBlg8IpRHsndnk81t7OmzGsWx7RfIBbABfOHOed
      d/5KdU01mvgM5i/oP+cRQXSY8HpAkCTk3n7e/01fVvLRgRq2/PtTN2nk4x/DEgDpOoqieb3e
      6+J4v1ntj+f2ps1ZxI9eUmF2CMTEBRfqVqg0yCQvcqUShUyGvG/zO5Bj3yl4aWg3kZ+ZgD7m
      9ipzOloM6xc6fvLkiBsOZ1wailF4pBhrvsnx0p6fQHYwkexXR78mMzOT1KTgauzKmHjmzC5k
      7uzCiD9mQ7uJn72xn13Halnzk81U1Ruva2y3I4YlANoI1TzGApIksffUJTZ9WUlX79gJyK2I
      q23N/OLXv6aqqpI/vP5W0LnstCS+Pn6cypqLN2l0tyeGFICmvmhNfWzsmHQWzjbdYjSjVirY
      cH8Be09dGpN+blWIHg/5eXm43QLPPfts0LnEpCRkSDS3tIxJXx+UVFNVb6SkrIGSsvAh4HcC
      Iu4Bzhw/xOvvfUTx3QtwEMPUqVMjXTpshOOHT46LYV9pPXaXQHbqrVuBfCyQNWESMtcX1NXV
      0euCB5bMD5xLzchErkvg6InTY9LX5pJqnllRSPUgdahwUhrGHhv5mQk0tJtIS4wN+ZyeODYv
      xPGAiAIwZ9G9PN7RhSExjfiU8Lm4Y4HYGDXPrizEYneTFuGL9UoSrR1mUhNi0apvb8NVr8XO
      vJlziRuY8AMkJCbR2XuZ73//xRvS7/5y3ypgNNnYXFLNf/zNA/zsjf08s6Iw5LNfaPIzffuR
      x5dOw9hjo2hSWsT2xysiqkCSJNHY3EZeXh7pqUmRLhsRIrnnYzSqiJMf4PPjF7nU2sMHJVV9
      CS+3Lx5Z/RAWhxPBFVzE4otPd+J0OXl/85aQey431VPfdDnk+I1GQ7uJhnYT+8sb+Nkb+6mq
      N7LmJ5vZefQCP/3zfurbekJUrfq2Hurber7xsUZCxNfpwS92IleqOHbsGGm5U0gbsBxfL663
      uHKPxclDd0/GbHdhcwhoVLfvKvDp518yZdbdnDp5hNmFdwWO6/U6Wltb0en1Qdd7bB00G61M
      mpj7TQ81ImxOgeoGIzanMKSqtbmkmt++/DBv7j7NA/Py2V/ewA8enYvNKXxjqlbEmXT/qjW4
      dnyEySly6Ww5cfGJzC+YNKrOrrc+1Yr5+XxysIa8jASS4sLz2dwuKLgrn5pzlcyYsyRwrK3h
      Avc98QJxGjh/vjboeo/DSmxSBt0tjcSnJKAe4Ajrr+cl9v0N/TzYXP1N32OxO6luMDJzYgrV
      DUYsdif/8tYhNtw/k48O1LDh/plY7b6ifvmZCewvbxggLPN4c3c5P3h0HjanT4VOSxiZ0Axp
      BaprMfL4Y48iSDJOHd03oobDdnadjqHMZAPPrixiSeH4ecvdCOzfs4Omq72kJCfhcvXzcpYf
      +QqL6EUuk3Ho4OGge7Qpeahs7QgqLVqZLKBmDnSEyfuKYof77K8d5v83nu7x/202Wmg2Wuiy
      uDjX3B346xS8gb//+vZhDlW0sO5fPuHjQ+d5Z08l7+yp5FBFC//69mGUSmXYfxFnpMfj4dEV
      y9i2bRf3r3yYFQ+sHM5vOCSuVwW6U/DAqjXYHQ42bHiK5kv9zG8rn1jD/o/e5c233mLJykcG
      3SVn5qzZzC6aweiqAN9e8O9PjCYb1Q1GPiipDjgBB/6NqAKdranB0tGOXh9LR2c39xTPHvWg
      Rluo+U7AqnsW8Ov//C3f2vB84Jg2LoXvfv8HN3FUty8i6yR2MwULl2Hp7kAQxiZM4EbGBt0u
      KDn0FYuK53H0aDCX/ZZNb/Hhhx+yZ/+xmzSy2xMRZ2Tl2fOcPriLCfMfpPbsqTHpLJwKJEkS
      VZeu8vnxizhdt7eJczjQ67S0trah1wc7BXt6LUzIyyMzY3SEBFEEI6IArHniETy6PJbNTGXJ
      0vvHpLNwKtDVHhv17T3MuyuT3cdrw9x158Bu7iJ7ymye2vA0EzOD2fXWrH0SJImkxIQId0dx
      PYgoAHHJWSwpno1CFcvkiVlj0lk4AVArFThcHjp77Whucy/vtfDFg5yAAAABjklEQVT+h1u5
      e1oy//3ffsececF+l61btlNQWMD2LVtD7nP2dnLidNU3NczbChEFoPFiDb/41a84dOggb/71
      wzHpLFyIcKIhhqVFudidAquLp4xJP7cqZs2YxM6SMubelcnXp4JjfuYUTWX79u1MLZoz6C6J
      +lYjepVPnfSrmSPxAwz8N57uGXzvwGPB117/PRFfufFJKSxcMB+DIY6n1j4R6bIRIdwKIJNB
      blo8uWnxtBh7KTtTzTzpJFnTF6HMWzwm/d4qKF62guIwx0+Xn0YUQaPWwKB9lLXzMr12D+au
      NiZPK0CrGrkfYCDG0z2D7x14LPjaUdxDBCQmp3GlpYHjJ4/x8bbdkS4bEYYyg7oFkS9P1nKP
      poID0v14WkaehHM74esT/RUR586bi1qfwtNPP01qXHBuhj4ll8ULZjF37ly0qqiVbaQYUume
      MGUGKq+dZvPY2O8jZUm5BA+bS6qpa+vlpMoC8mpkaYlhr73dcb6qHJPNjUwmx2R1kqDXDpkT
      7EdaWnrowSiuif8PKlUwB+7XqOgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Restaurant List by Violation Count' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Restaurants By Zip' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sightings Vs Restaurants' width='192'>
      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
      D9cL/z8VOuWwuXhBGQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
