<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Restaurant_Search_Tool_0' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
    </datasource>
    <datasource caption='combined_restaurant_sightings' inline='true' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_restaurant_sightings' name='textscan.1itt1c00ozjhrm123ntqw0hhodn3'>
            <connection class='textscan' directory='C:/Users/adpra/Documents/MIDS/W209_Data_Visualization/Final_Project/rodents-nyc/tableau/Restaurant Dash/Restaurant_Search_Tool.twb Files/Users/ChrisD/Documents/UCBerkeleyMIDS/W209/rodents-nyc/tableau/Restaurant Dash/Restaurant_Search_Tool.twb Files/C:/Users/adpra/Documents/MIDS/W209_Data_Visualization/Final_Project' filename='combined_restaurant_sightings.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1itt1c00ozjhrm123ntqw0hhodn3' name='combined_restaurant_sightings.csv' table='[combined_restaurant_sightings#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='BOROUGH' ordinal='1' />
            <column datatype='real' name='COUNT' ordinal='2' />
            <column datatype='string' name='CUISINE DESCRIPTION' ordinal='3' />
            <column datatype='string' name='DBA' ordinal='4' />
            <column datatype='integer' name='ZIP_CODE' ordinal='5' />
            <column datatype='string' name='price_level' ordinal='6' />
            <column datatype='string' name='rounded_rating' ordinal='7' />
            <column datatype='string' name='violation_count' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BOROUGH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BOROUGH]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>BOROUGH</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COUNT]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>COUNT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUISINE DESCRIPTION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUISINE DESCRIPTION]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>CUISINE DESCRIPTION</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DBA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DBA]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>DBA</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP_CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP_CODE]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>ZIP_CODE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price_level]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>price_level</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rounded_rating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rounded_rating]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>rounded_rating</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>violation_count</remote-name>
            <remote-type>129</remote-type>
            <local-name>[violation_count]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>violation_count</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
      <column caption='Rodent Sighting' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
      <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
      <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([violation_count])' />
      </column>
      <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
      </column>
      <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
        <aliases>
          <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
        </aliases>
      </column>
      <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='No Price Data' />
        </aliases>
      </column>
      <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='No Rating Data' />
        </aliases>
      </column>
      <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
      <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
      <group caption='Action (Borough,Zip Code)' hidden='true' name='[Action (Borough,Zip Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BOROUGH]' />
          <groupfilter function='level-members' level='[ZIP_CODE]' />
        </groupfilter>
      </group>
      <group caption='Action (Cuisine Description)' hidden='true' name='[Action (Cuisine Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' />
        </groupfilter>
      </group>
      <group caption='Action (Price Level,Rating)' hidden='true' name='[Action (Price Level,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[price_level]' />
          <groupfilter function='level-members' level='[rounded_rating]' />
        </groupfilter>
      </group>
      <group caption='Action (Price Level,Rounded Rating)' hidden='true' name='[Action (Price Level,Rounded Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[price_level]' />
          <groupfilter function='level-members' level='[rounded_rating]' />
        </groupfilter>
      </group>
      <group caption='Action (Reset Filter)' hidden='true' name='[Action (Reset Filter)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
        </groupfilter>
      </group>
      <group caption='Action (Reset Filter,Restaurant Name)' hidden='true' name='[Action (Reset Filter,Restaurant Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
          <groupfilter function='level-members' level='[DBA]' />
        </groupfilter>
      </group>
      <group caption='Action (Reset Filter,Zip Code)' hidden='true' name='[Action (Reset Filter,Zip Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
          <groupfilter function='level-members' level='[ZIP_CODE]' />
        </groupfilter>
      </group>
      <group caption='Action (Restaurant Name)' hidden='true' name='[Action (Restaurant Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DBA]' />
        </groupfilter>
      </group>
      <group caption='Action (Restaurant Name,Violation Count)' hidden='true' name='[Action (Restaurant Name,Violation Count)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DBA]' />
          <groupfilter function='level-members' level='[violation_count]' />
        </groupfilter>
      </group>
      <group caption='Action (Restaurant Names)' hidden='true' name='[Action (Restaurant Names)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DBA]' />
        </groupfilter>
      </group>
      <group caption='Action (Zip Code)' hidden='true' name='[Action (Zip Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ZIP_CODE]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/adpra/Documents/MIDS/W209_Data_Visualization/Final_Project/rodents-nyc/tableau/Restaurant Dash/combined_restaurant_sightings.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/29/2018 11:17:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='181375' timestamp-start='2018-03-29 23:17:35.933' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181375</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BOROUGH</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BOROUGH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BOROUGH</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNT</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CUISINE DESCRIPTION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CUISINE DESCRIPTION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CUISINE DESCRIPTION</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DBA</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DBA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DBA</remote-alias>
              <ordinal>4</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>224</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP_CODE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ZIP_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP_CODE</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[price_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_level</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rounded_rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rounded_rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rounded_rating</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>violation_count</remote-name>
              <remote-type>129</remote-type>
              <local-name>[violation_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>violation_count</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.39846' measure-ordering='alphabetic' measure-percentage='0.348412' parameter-percentage='0.253128' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BOROUGH:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BRONX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STATEN ISLAND&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;QUEENS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MANHATTAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BROOKLYN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Restaurant Dashboard' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Restaurant Dashboard' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Restaurant Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Borough' />
        <param name='target' value='Restaurant Dashboard' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Restaurant Dashboard 2' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Borough' />
        <param name='target' value='Restaurant Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Violations Heatmap</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Price Data' />
              </aliases>
            </column>
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Rating Data' />
              </aliases>
            </column>
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]'>
            <groupfilter function='level-members' level='[Calculation_92253480755834880]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
              <groupfilter function='level-members' level='[DBA]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name,Violation Count)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[DBA]' />
              <groupfilter function='level-members' level='[violation_count]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:DBA:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' filter-group='11'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]' filter-group='13'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' direction='DESC' />
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name,Violation Count)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Price Level:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rating:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Rodent Violation Count:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cuisine and Rodent Violations'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[violation_count]' derivation='None' name='[none:violation_count:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Price Data' />
              </aliases>
            </column>
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Rating Data' />
              </aliases>
            </column>
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]' filter-group='4'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]'>
            <groupfilter function='level-members' level='[Calculation_92253480755834880]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
              <groupfilter function='level-members' level='[DBA]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name,Violation Count)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[DBA]' />
              <groupfilter function='level-members' level='[violation_count]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' direction='DESC' using='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:DBA:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' filter-group='11'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]' filter-group='13'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]'>
            <groupfilter function='level-members' level='[none:violation_count:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name,Violation Count)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='rows' value='Avg. Rodent Violation Count' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' value='84' />
            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' field-type='quantitative' max='15.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' enable-instant-analytics='true' formula='total' id='refline0' label='Average &lt;FieldName&gt; = &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' z-order='1' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Cuisine Description:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Rodent Violation Count:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Restaurant List by Violation Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='Attribute' name='[attr:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='Attribute' name='[attr:ZIP_CODE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_level]' derivation='Attribute' name='[attr:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='Attribute' name='[attr:rounded_rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[violation_count]' derivation='None' name='[none:violation_count:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Price Data' />
              </aliases>
            </column>
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Rating Data' />
              </aliases>
            </column>
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]'>
            <groupfilter function='level-members' level='[Calculation_92253480755834880]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]'>
            <groupfilter function='level-members' level='[attr:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]'>
            <groupfilter function='level-members' level='[attr:price_level:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:DBA:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' direction='ASC' using='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' filter-group='11'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]' filter-group='13'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' field-type='quantitative' max='25.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='cols' value='Rodent Violations' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='cols' value='Over Last 5 Years' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
            <format attr='width' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' value='192' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='background-color' id='refline0' value='#ffffff81' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:rounded_rating:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:ZIP_CODE:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' enable-instant-analytics='true' formula='total' id='refline0' label='Average = &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' z-order='1' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Restaurant Name:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cuisine Description:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Price Level:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rating:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:rounded_rating:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Zip Code:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:ZIP_CODE:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Rodent Violation Count:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Restaurants By Zip'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[DBA]' derivation='Count' name='[cnt:DBA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_92253480755834880]' derivation='None' name='[none:Calculation_92253480755834880:nk]' pivot='key' type='nominal' />
            <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Price Data' />
              </aliases>
            </column>
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Rating Data' />
              </aliases>
            </column>
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]' filter-group='4'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]'>
            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
              <groupfilter function='level-members' level='[DBA]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name,Violation Count)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[DBA]' />
              <groupfilter function='level-members' level='[violation_count]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]'>
            <groupfilter function='member' level='[none:Calculation_92253480755834880:nk]' member='&quot;Reset Filter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:DBA:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' filter-group='11'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]' filter-group='13'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name,Violation Count)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='60' />
            <format attr='font-weight' data-class='subtotal' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='bold' />
            <format attr='font-weight' data-class='total' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='bold' />
            <format attr='background-color' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='true' />
            <format attr='font-weight' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='bold' />
            <format attr='color' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='#000000' />
            <format attr='font-size' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='10' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' value='false' />
            <format attr='break-on-special' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='in-tooltip' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' />
              <lod column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' />
              <geometry column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Zip Code:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Restaurant Name:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk] * [federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)])</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column-instance column='[Calculation_92253480755834880]' derivation='None' name='[none:Calculation_92253480755834880:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Price Data' />
              </aliases>
            </column>
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Rating Data' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                <groupfilter function='member' level='[price_level]' member='&quot;2.0&quot;' />
                <groupfilter function='member' level='[price_level]' member='&quot;3.0&quot;' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='member' level='[rounded_rating]' member='&quot;3.0&quot;' />
                <groupfilter function='member' level='[rounded_rating]' member='&quot;3.5&quot;' />
                <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1534254550933838' />
                <format attr='shape' value='KPI/03.png' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Rodent Sighting' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[DBA]' derivation='Count' name='[cnt:DBA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Price Data' />
              </aliases>
            </column>
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='No Rating Data' />
              </aliases>
            </column>
            <column-instance column='[COUNT]' derivation='Sum' name='[sum:COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:rounded_rating:nk]' />
              <groupfilter function='empty-level' member='[none:rounded_rating:nk]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' scope='rows' value='Number of Rat Sightings by Zipcode' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' scope='cols' value='Number of Restaurants by Zipcode' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' />
              <lod column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Restaurant Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
      </datasources>
      <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
        <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
        <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
        <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
        <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
        <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
        <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
        <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
        <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
        <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal'>
          <aliases>
            <alias key='%null%' value='No Price Data' />
          </aliases>
        </column>
        <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal'>
          <aliases>
            <alias key='%null%' value='No Rating Data' />
          </aliases>
        </column>
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98712' id='5' param='horz' type='layout-flow' w='72067' x='27521' y='644'>
            <zone h='98712' id='3' type='layout-basic' w='63820' x='27521' y='644'>
              <zone h='60562' id='1' name='Restaurants By Zip' w='63820' x='27521' y='644'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38150' id='8' name='Cuisine and Rodent Violations' w='63820' x='27521' y='61206'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98712' id='4' is-fixed='true' param='vert' type='layout-flow' w='8247' x='91341' y='644'>
              <zone h='6522' id='7' name='Restaurants By Zip' pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' type='color' w='8247' x='91341' y='644'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6522' id='10' name='Average Rodent Violations By Ratings &amp; Price' pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' type='color' w='8247' x='91341' y='7166'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5394' id='21' mode='typeinlist' name='Cuisine and Rodent Violations' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' type='filter' w='8247' x='91341' y='13688'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5394' id='17' mode='typeinlist' name='Restaurant List by Violation Count' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' type='filter' w='8247' x='91341' y='19082'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5394' id='22' mode='typeinlist' name='Restaurants By Zip' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' type='filter' w='8247' x='91341' y='24476'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16264' id='23' name='Average Rodent Violations By Ratings &amp; Price' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]' type='filter' w='8247' x='91341' y='29870'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27134' id='24' name='Average Rodent Violations By Ratings &amp; Price' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' type='filter' w='8247' x='91341' y='46134'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='52808' id='9' name='Average Rodent Violations By Ratings &amp; Price' w='27109' x='412' y='46548'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='45904' id='14' name='Restaurant List by Violation Count' w='27109' x='412' y='644'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Restaurant Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
      </datasources>
      <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
        <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
        <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
        <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
        <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
        <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
        <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
        <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal'>
          <aliases>
            <alias key='%null%' value='No Price Data' />
          </aliases>
        </column>
        <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal'>
          <aliases>
            <alias key='%null%' value='No Rating Data' />
          </aliases>
        </column>
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8750' id='6' mode='checkdropdown' name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' type='filter' values='relevant' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8750' id='7' mode='checkdropdown' name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' type='filter' w='16000' x='83200' y='9750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8750' id='8' mode='checkdropdown' name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]' type='filter' w='16000' x='83200' y='18500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19875' id='9' name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode' pane-specification-id='4' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='color' w='16000' x='83200' y='27250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12875' id='10' mode='slider' name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='filter' w='16000' x='83200' y='47125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='350' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98712' id='1' param='vert' removable='false' type='layout-flow' w='99176' x='412' y='644'>
            <zone h='4026' id='3' type='title' w='99176' x='412' y='644' />
            <zone fixed-size='206' h='16586' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99176' x='412' y='4670' />
            <zone h='78100' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99176' x='412' y='21256'>
              <flipboard active-id='19' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='LET&apos;S BEGIN!&#10;At any story-point you can interact with the dashboard below without affecting any previous or future story-points and you can revert any changes  by clicking the rewind button above.' captured-sheet='Restaurant Dashboard' id='1'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
                            <groupfilter function='level-members' level='[ZIP_CODE]' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
                            <groupfilter function='level-members' level='[ZIP_CODE]' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
                            <groupfilter function='level-members' level='[ZIP_CODE]' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Choose an area of the city. We&apos;ll zoom in and use Lasso selection from the lower button on the map toolbar.' captured-sheet='Restaurant Dashboard' id='2'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10001' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10004' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10005' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10006' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10007' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10016' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10017' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10018' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10019' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10020' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10021' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10022' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10023' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10024' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10025' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10026' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10027' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10028' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10029' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10030' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10031' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10032' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10033' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10034' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10035' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10036' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10037' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10038' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10039' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10040' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10044' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10048' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10065' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10069' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10075' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10103' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10104' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10105' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10107' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10110' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10111' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10112' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10118' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10119' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10121' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10123' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10128' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10153' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10154' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10155' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10162' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10165' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10166' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10167' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10168' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10169' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10170' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10171' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10172' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10173' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10174' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10175' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10176' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10178' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10199' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10270' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10271' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10279' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10280' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10281' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10282' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10285' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10301' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10302' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10303' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10304' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10305' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10306' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10307' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10308' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10309' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10310' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10311' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10312' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10314' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10451' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10452' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10453' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10454' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10455' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10456' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10457' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10458' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10459' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10460' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10461' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10462' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10463' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10464' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10465' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10466' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10467' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10468' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10469' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10470' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10471' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10472' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10473' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10474' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10475' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11001' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11004' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11005' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11040' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11101' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11102' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11103' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11104' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11105' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11106' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11109' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11201' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11203' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11204' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11205' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11206' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11207' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11208' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11209' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11210' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11211' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11212' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11213' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11214' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11215' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11216' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11217' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11218' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11219' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11220' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11221' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11222' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11223' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11224' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11225' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11226' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11228' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11229' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11230' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11231' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11232' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11233' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11234' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11235' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11236' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11237' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11238' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11239' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11241' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11242' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11245' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11249' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11256' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11352' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11354' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11355' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11356' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11357' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11358' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11360' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11361' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11362' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11363' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11364' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11365' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11366' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11367' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11368' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11369' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11370' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11371' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11372' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11373' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11374' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11375' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11377' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11378' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11379' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11385' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11411' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11412' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11413' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11414' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11415' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11416' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11417' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11418' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11419' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11420' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11421' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11422' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11423' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11426' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11427' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11428' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11429' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11430' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11432' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11433' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11434' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11435' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11436' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11451' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11691' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11692' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11693' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11694' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11697' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10001' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10004' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10005' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10006' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10007' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10016' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10017' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10018' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10019' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10020' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10021' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10022' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10023' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10024' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10025' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10026' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10027' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10028' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10029' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10030' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10031' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10032' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10033' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10034' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10035' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10036' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10037' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10038' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10039' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10040' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10044' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10048' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10065' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10069' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10075' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10103' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10104' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10105' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10107' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10110' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10111' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10112' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10118' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10119' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10121' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10123' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10128' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10153' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10154' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10155' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10162' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10165' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10166' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10167' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10168' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10169' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10170' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10171' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10172' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10173' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10174' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10175' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10176' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10178' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10199' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10270' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10271' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10279' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10280' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10281' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10282' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10285' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10301' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10302' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10303' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10304' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10305' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10306' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10307' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10308' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10309' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10310' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10311' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10312' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10314' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10451' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10452' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10453' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10454' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10455' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10456' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10457' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10458' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10459' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10460' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10461' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10462' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10463' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10464' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10465' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10466' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10467' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10468' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10469' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10470' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10471' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10472' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10473' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10474' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10475' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11001' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11004' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11005' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11040' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11101' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11102' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11103' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11104' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11105' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11106' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11109' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11201' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11203' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11204' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11205' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11206' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11207' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11208' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11209' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11210' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11211' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11212' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11213' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11214' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11215' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11216' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11217' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11218' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11219' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11220' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11221' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11222' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11223' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11224' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11225' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11226' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11228' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11229' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11230' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11231' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11232' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11233' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11234' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11235' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11236' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11237' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11238' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11239' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11241' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11242' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11245' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11249' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11256' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11352' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11354' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11355' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11356' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11357' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11358' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11360' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11361' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11362' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11363' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11364' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11365' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11366' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11367' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11368' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11369' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11370' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11371' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11372' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11373' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11374' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11375' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11377' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11378' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11379' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11385' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11411' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11412' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11413' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11414' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11415' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11416' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11417' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11418' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11419' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11420' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11421' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11422' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11423' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11426' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11427' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11428' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11429' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11430' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11432' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11433' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11434' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11435' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11436' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11451' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11691' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11692' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11693' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11694' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11697' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10001' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10004' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10005' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10006' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10007' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10016' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10017' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10018' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10019' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10020' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10021' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10022' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10023' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10024' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10025' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10026' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10027' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10028' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10029' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10030' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10031' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10032' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10033' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10034' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10035' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10036' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10037' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10038' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10039' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10040' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10044' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10048' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10065' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10069' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10075' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10103' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10104' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10105' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10107' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10110' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10111' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10112' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10118' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10119' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10121' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10123' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10128' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10153' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10154' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10155' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10162' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10165' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10166' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10167' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10168' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10169' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10170' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10171' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10172' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10173' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10174' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10175' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10176' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10178' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10199' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10270' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10271' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10279' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10280' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10281' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10282' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10285' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10301' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10302' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10303' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10304' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10305' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10306' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10307' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10308' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10309' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10310' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10311' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10312' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10314' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10451' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10452' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10453' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10454' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10455' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10456' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10457' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10458' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10459' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10460' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10461' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10462' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10463' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10464' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10465' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10466' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10467' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10468' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10469' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10470' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10471' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10472' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10473' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10474' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10475' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11001' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11004' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11005' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11040' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11101' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11102' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11103' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11104' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11105' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11106' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11109' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11201' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11203' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11204' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11205' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11206' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11207' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11208' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11209' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11210' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11211' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11212' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11213' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11214' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11215' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11216' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11217' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11218' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11219' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11220' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11221' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11222' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11223' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11224' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11225' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11226' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11228' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11229' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11230' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11231' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11232' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11233' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11234' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11235' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11236' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11237' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11238' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11239' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11241' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11242' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11245' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11249' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11256' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11352' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11354' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11355' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11356' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11357' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11358' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11360' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11361' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11362' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11363' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11364' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11365' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11366' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11367' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11368' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11369' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11370' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11371' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11372' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11373' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11374' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11375' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11377' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11378' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11379' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11385' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11411' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11412' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11413' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11414' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11415' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11416' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11417' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11418' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11419' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11420' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11421' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11422' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11423' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11426' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11427' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11428' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11429' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11430' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11432' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11433' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11434' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11435' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11436' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11451' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11691' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11692' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11693' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11694' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='11697' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4985317.8818903165' min='4961303.4177470757' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8206743.0474085351' min='-8259167.0757363299' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <fields>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;Reset Filter&quot;</bucket>
                                </multibucket>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Say you want more affordable food but with a high rating. Let&apos;s select a range of ratings and see what restaurants have recorded rodent sighting violations.' captured-sheet='Restaurant Dashboard' id='3'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4983805.907538035' min='4963897.3774312474' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8223325.3918853477' min='-8245830.6873338157' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>376</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>458</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10013</value>
                                <value>&quot;POLYGON((-73.9986 40.7135,-74.013 40.7172,-74.0133 40.7183,-74.0114 40.7282,-74.0034 40.727,-74.0044 40.7241,-73.9944 40.7195,-73.9975 40.714,-73.9986 40.7135))&quot;</value>
                                <value>40.7194</value>
                                <value>-74.003</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>375</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10012</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-73.997 40.7314,-73.9926 40.7241,-73.9944 40.7195,-74.0044 40.7241,-74.0034 40.727,-74.001 40.7317))&quot;</value>
                                <value>40.7256</value>
                                <value>-73.999200000000002</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>423</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10011</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9909 40.7397,-73.997 40.7314,-74.001 40.7317,-74.0036 40.7407,-74.0094 40.7426,-74.0089 40.7511,-73.9923 40.7436))&quot;</value>
                                <value>40.7393</value>
                                <value>-73.998900000000006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>242</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10010</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9862 40.7434,-73.9726 40.7358,-73.9738 40.7327,-73.9799 40.735,-73.9909 40.7397,-73.9923 40.7436))&quot;</value>
                                <value>40.740000000000002</value>
                                <value>-73.985500000000002</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>274</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10009</value>
                                <value>&quot;MULTIPOLYGON(((-73.9579 40.7241,-73.9589 40.7244,-73.9581 40.7245,-73.9579 40.7241)),((-73.9799 40.735,-73.9738 40.7327,-73.9715 40.7276,-73.9751 40.7146,-73.9749 40.7188,-73.9885 40.7233,-73.9799 40.735)))&quot;</value>
                                <value>40.726700000000001</value>
                                <value>-73.979699999999994</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>633</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10003</value>
                                <value>&quot;POLYGON((-73.997 40.7314,-73.9909 40.7397,-73.9799 40.735,-73.9885 40.7233,-73.9926 40.7241,-73.997 40.7314))&quot;</value>
                                <value>40.731200000000001</value>
                                <value>-73.988799999999998</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>439</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10002</value>
                                <value>&quot;POLYGON((-73.9921 40.7095,-73.9975 40.714,-73.9944 40.7195,-73.9926 40.7241,-73.9885 40.7233,-73.9749 40.7188,-73.9751 40.7146,-73.9779 40.7105,-73.9921 40.7095))&quot;</value>
                                <value>40.715499999999999</value>
                                <value>-73.990099999999998</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Let&apos;s look for at restaurants with prices ranges 1-3 and ratings between 4 and 5.' captured-sheet='Restaurant Dashboard' id='8'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>6.2168674698795181</value>
                                <value>&quot;3.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>4.658385093167702</value>
                                <value>&quot;3.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>3.5</value>
                                <value>&quot;3.0&quot;</value>
                                <value>&quot;5.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>6.8499999999999996</value>
                                <value>&quot;2.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.9468354430379744</value>
                                <value>&quot;2.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>3.5833333333333335</value>
                                <value>&quot;2.0&quot;</value>
                                <value>&quot;5.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.7149122807017543</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.4045454545454543</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>3.8666666666666667</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;5.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;2.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;3.0&quot;' />
                            </groupfilter>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;5.0&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;2.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;3.0&quot;' />
                            </groupfilter>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;5.0&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;2.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;3.0&quot;' />
                            </groupfilter>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;5.0&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980894.5761983832' min='4966848.8249967126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8227615.1537363902' min='-8243459.6799989138' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>243</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>244</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10013</value>
                                <value>&quot;POLYGON((-73.9986 40.7135,-74.013 40.7172,-74.0133 40.7183,-74.0114 40.7282,-74.0034 40.727,-74.0044 40.7241,-73.9944 40.7195,-73.9975 40.714,-73.9986 40.7135))&quot;</value>
                                <value>40.7194</value>
                                <value>-74.003</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>237</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10012</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-73.997 40.7314,-73.9926 40.7241,-73.9944 40.7195,-74.0044 40.7241,-74.0034 40.727,-74.001 40.7317))&quot;</value>
                                <value>40.7256</value>
                                <value>-73.999200000000002</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>235</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10011</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9909 40.7397,-73.997 40.7314,-74.001 40.7317,-74.0036 40.7407,-74.0094 40.7426,-74.0089 40.7511,-73.9923 40.7436))&quot;</value>
                                <value>40.7393</value>
                                <value>-73.998900000000006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>117</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10010</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9862 40.7434,-73.9726 40.7358,-73.9738 40.7327,-73.9799 40.735,-73.9909 40.7397,-73.9923 40.7436))&quot;</value>
                                <value>40.740000000000002</value>
                                <value>-73.985500000000002</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>161</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10009</value>
                                <value>&quot;MULTIPOLYGON(((-73.9579 40.7241,-73.9589 40.7244,-73.9581 40.7245,-73.9579 40.7241)),((-73.9799 40.735,-73.9738 40.7327,-73.9715 40.7276,-73.9751 40.7146,-73.9749 40.7188,-73.9885 40.7233,-73.9799 40.735)))&quot;</value>
                                <value>40.726700000000001</value>
                                <value>-73.979699999999994</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>379</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10003</value>
                                <value>&quot;POLYGON((-73.997 40.7314,-73.9909 40.7397,-73.9799 40.735,-73.9885 40.7233,-73.9926 40.7241,-73.997 40.7314))&quot;</value>
                                <value>40.731200000000001</value>
                                <value>-73.988799999999998</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='We find Five Guy&apos;s, something easy to recognize. We notice that it has  a price level of 1 and rating of 4, with 3 violations (not perfect, but not bad for NYC).' captured-sheet='Restaurant Dashboard' id='9'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
                          <groupfilter function='member' level='[DBA]' member='&quot;FIVE GUYS FAMOUS BURGERS AND FRIES&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>3.0</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>1.0</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
                          <groupfilter function='member' level='[DBA]' member='&quot;FIVE GUYS FAMOUS BURGERS AND FRIES&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:ZIP_CODE:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>2.0</value>
                                <value>&quot;FIVE GUYS FAMOUS BURGERS AND FRIES&quot;</value>
                                <value>%many-values%</value>
                                <value>%many-values%</value>
                                <value>&quot;1.0&quot;</value>
                                <value>%many-values%</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
                          <groupfilter function='member' level='[DBA]' member='&quot;FIVE GUYS FAMOUS BURGERS AND FRIES&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980894.5761983832' min='4966848.8249967126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8227615.1537363902' min='-8243459.6799989138' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>1</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>1</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10011</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9909 40.7397,-73.997 40.7314,-74.001 40.7317,-74.0036 40.7407,-74.0094 40.7426,-74.0089 40.7511,-73.9923 40.7436))&quot;</value>
                                <value>40.7393</value>
                                <value>-73.998900000000006</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Let&apos;s clear our selection by clicking on the Five Guys bar in Restaurant List by Violation Count' captured-sheet='Restaurant Dashboard' id='17'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.1481481481481479</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.2131147540983607</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980894.5761983832' min='4966848.8249967126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8227615.1537363902' min='-8243459.6799989138' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>50</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>65</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10011</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9909 40.7397,-73.997 40.7314,-74.001 40.7317,-74.0036 40.7407,-74.0094 40.7426,-74.0089 40.7511,-73.9923 40.7436))&quot;</value>
                                <value>40.7393</value>
                                <value>-73.998900000000006</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Now unclick the square in the the Violations heat map.' captured-sheet='Restaurant Dashboard' id='11'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980894.5761983832' min='4966848.8249967126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8227615.1537363902' min='-8243459.6799989138' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>376</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Click &quot;Reset Map Filter&quot; in the pane to the left of the map. This can be used to unclick a selection on the map' captured-sheet='Restaurant Dashboard' id='12'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980179.7669318197' min='4968336.0505491057' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8228585.6702951891' min='-8241942.0352376522' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>376</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Finally, click the Unpin icon on the map to &quot;reset map' captured-sheet='Restaurant Dashboard' id='13'>
                    <capturedDeltas>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Zooming: Now that we are zoomed, we can move around the map by setting the pan function (crossed arrows) in the map tools icon (lookes like a &quot;play&quot; button).' captured-sheet='Restaurant Dashboard' id='14'>
                    <capturedDeltas>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Restaurant Dashboard' id='19'>
                    <capturedDeltas>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4997609.4481754843' min='4974015.1873897407' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8215647.7498048292' min='-8242298.2025066158' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Restaurant List by Violation Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Restaurants By Zip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Cuisine and Rodent Violations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Rodent Violations By Ratings &amp; Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Restaurant Dashboard'>
      <viewpoints>
        <viewpoint name='Average Rodent Violations By Ratings &amp; Price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cuisine and Rodent Violations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Restaurant List by Violation Count'>
          <zoom type='fit-width' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Restaurants By Zip'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='8' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='5' />
    </window>
    <window class='dashboard' name='Restaurant Dashboard 2'>
      <viewpoints>
        <viewpoint name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode'>
          <zoom type='entire-view' />
          <highlight field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Rodent Violations By Ratings &amp; Price' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cuisine and Rodent Violations' width='192'>
      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
      PUPu84o9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Restaurant Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Restaurant Dashboard 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Restaurant List by Violation Count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Restaurants By Zip' width='192'>
      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
      ayks4UgI/i/OoB5KIv998wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='24' name='Sheet 6' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAABSElEQVRYhe2XQYrCQBBFf4VEBBcS117BQ3gHQ4vS6YO5cp2reAz3xl1VNt+FzIDMgJvp
      qYB5y6Khfj+6Kx0hSXwwhXcAbyYB3gG8mQR4B/BmEuAdwJvy3YLL5fIfOdyQ6SH04UwCvAMA
      gKrCzH7UzezX+l/iLkBVcTgcEGN82ayZIcaI4/GYVYK7ABFBWZboug5t20JVAQApJXRdh8Vi
      ARHJF4AjQFUZQqCIcLfb8Xa7UUSYUuIwDFl7j0IA+ZTQNA1FhOv1mjFGmln2vqN6B/R9j81m
      g+v1ir7vsVwus/d0nwHAc+Dt93usVitst1vc73fUdY0QQvavgPsV+Dr6AJhS+j72IQQCYNM0
      VNVs/d/+C+SGJMwMbdvidDqhqioAwPl8BkkMwwBmvKWjmAGqiqIoMJvNXupmBpKYz+fZeo9C
      gCejGIKePABbI0ZQ+Iv/TgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='136'>
      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
      J8DQ/dt9Ufz8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Size of Local Rodent Population Vs Number of Local Restaurants by Zipcode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      i6LI/wOfIrYBSQzkHgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='KPI/01.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbND6kK1KI3WvBNwGJWBkOwvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0JfVVhiwFi9N
        l8DfP39B0NQJfCILd9EzsWm+HJV4PH5dVcdtNa/h3WdwO8RD27fClGBod52OhwSWtVyL2O7H
        YwTBCWK2CUzHC/B98QCYVAIQx59VLsaAUgcHhFL8CXgu9pBrF53hICY09kJwHtCqqfo5XvLi
        rGWtBG6M6WOEDoeDc/AdqV4Qns/now/Pm1nETL92phxmnb6ZPHChK9X0ppEdGO1yLfcmgXBK
        oe0Xi4vjTjunhJxKtmgoe4QdF7UtmtDaLMXzdbRevfYCLYWWe1UJC795I3WdOgJtNPE31dhP
        KXdcVvtWdOaeJ9DeOHVTx0FKOeaEpnZyjnGUZZR5uCAkz33ippOP97hF5qeMUN/SCca5H0Vh
        lBd5nnHGipBduPedNmVXiYnb/ON6V7kxU6I0Uq2k3E0V8LCRRuqN7AF7pODDU9PV8qA/jt9z
        jlSo5oeoCyVbcHrfuHlHP2Mpi1KS04CT3Mc49SI3wn7AgnAeuNTq/+XWb/Le78fAA1aQgLmY
        hxHPMc5CgvMi5VGKvZzhACIbCfqvUqYjW37j9lL31rh0juhsuyjbF38A6YkGSkr/HRQAAAIU
        SURBVFiF7dhNqA1RHADw3/UoIilKilBI+U6SjWwoio1EFha+yuplQWIlFhYWYmWrbJWs3oIs
        ZSdZWPgo5dVb+Oh5Pc+77ljMvXW7ZuacuR/mLpw6u/P/n9/M/PufmaklSWKYx5yqAaHxH9jz
        SJJEhXW4DLewpuXonFUDHyPBOHYOG/B8E9eakzg0LMAN+NEBTDCLs1UD5+FlBq59XqsSeDOA
        S/C0KuBe1AO4KWysArgEHwO4BBeqqsGHEbgnqFUBPBmBG8fyKtrManwN4Bo4WEWjHsHzAC7B
        vbJH3Qhu4DJqPQCvRuDeYEFZ4O22BHe7xO3CrwBuBtvzcHnAExmJrpfELcTbAC7BJeTisoDb
        pI0yK9nFEsD7Ebhnmu+jscDFeF+QsIHTEbgjEbgvWNUKiAXui0hcx9EC3ApMROQ53h4UC1wk
        rm5mcCADV8NYRPyDzsAyNbgS7yI2mcKejn1GI+I+SEupayCsxaeIzb5hazNmM6YD6+sZF9UV
        ENZLz8YQcgKb8CpibW6r6gbYuisxBT8bseYF5vYbCDukjzIEKJqTWJe3Qa9A2I3vPQDPFCXv
        B5D0VT3vhCmaj0KJ+wWE/fhZAvcZS/8lEA5LG3UI15DdzAcOhGPCX2Z3yiTsNxBO4XcO7jXm
        Vw2Ec9JH2Y6bxpayiQYF5O/zd7SbJIMEwpUmbkyX3y9FwFqPuIGPof8FPPTAP7paeKi9UDuN
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/02.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbKP1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0BXlVhqwli91
        m8DfP39BUFcJfCILd9Exuam/HLV8PH5dlcdtOa/g3WdwO8RD0zXSFGBodm0fDwksKrWWsd2P
        xwiCE8RsE5iOF+D74gEwpSUgjj8rXYwBpQ4OCKX4E/Bc7CHXLjrDQUxo7IXgPKBV09VzvOT5
        WctaCdwY08UIHQ4H5+A7Sr8gPJ/PRx+eN7OIWf/ammKYtf3N5IHLvtR1Z2rVgtEu1mpvEgin
        FJpusbg4bnvnlJBTqgYNRYew46KmQRO6N0v5fB3dr147iZayV3tdSgu/eSN1nToCbTTxN13b
        Tyl2XJX7RrbmnifQ3jhVXcVBSjnmhKZ2co5xlGWUeTgnRAifuOnk4z1unhFMuZdbOsFY+FEU
        RiIXIuOM5SG7cO/b3hRtKSdu/Y8rrnJjpmVhlF4ptZsq4GGjjOo3qgPskYIPT3VbqUP/cfye
        c6RS1z9klWvVgNP7xvU7+hlLWZQSQQNOhI9x6kVuhP2ABeE8cKnV/8ut3uS934+BBywnAXMx
        DyMuMM5CgkWe8ijFnmA4gMhGgv6rlOnIlt+4vdS9NS6dI1vbLtr2xR/wLwZQllJg0QAAASdJ
        REFUWIXtWEtKA1EQrHKhS71HPI5MziOeKHdJsvESxv/ESLkwy2mk6Xr4yKSgGagHRTH9eR9K
        Qs+4+G8Df+H0DZJckdRErBwGWa1Bkk8ArieWdpJuSuLwpPgr4A8GbYvB94B/M2hbDH4G/GjQ
        thiMjETGU3AYfA34blL8HfDdNMku4J8N2k3/YMSn0LIGXwzaFoP7JJ+Cw+BHkk+h5U7SjcFo
        L+4mxVEzRM2TwiwGdTSQuxnU5/NgFefzYBVRKqPUp1C+1bXG6V/cW2MeBkkOJNckx+N3cOgC
        ACSVAsAdAE3EUNWWZHmbWQNYTCxtJN2WxOF5PBoBXE4s7SVdlcThqcHHJJ+Cw+B9wD8YtOtN
        ciyRJYAtfo/5WwBLh66lSVpjHoO6JX4AZswqmojMTWIAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/03.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGMCG
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfiILZ9Exsam/HJV4PH5dlcdtOa/w3Wd0O0RD0zVCF2hodm0fDTEuKrkWkdmP
        xzZGJ4jexjgZL9D3xQNiUglELG9WOgCIUgt8Qil8Qq4Dru2YRWfgR4RGboDOAxs1VT1HS56f
        tYwV443WXWTbh8PBOniWVC82zOfz0Yfrzgxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGOMp
        haZbLC6O2946JWSVsrGHorPBcuymsSd0r5fi+Tq6X712wl6KXu5VKQz85o3UdeoINNFE31Rt
        PqXYcVnuG9Hqex5jc2NVdRX5CeXACU3M5BwgTFPKXMgJyTKPOMnk4z1unhKg3AsMnQBkXhgG
        YZZnWcoZywN24d63vS7aUkzc+h+XXuVGTIlCS7WScjdVwMNGatlvZIfYI0Ufnuq2kof+4/g9
        50iFqn+IKleyQaf3jep39FOWsDAhGfU5yTyAxA2dEDyf+cHcd6jR/8ut3uS934+B+ywnPnOA
        ByHPANKAQJYnPEzAzRj42DaR2P9VynRkym/cXureGJfOEa1pF2X64g/OuQY0x2QNAgAAAVlJ
        REFUWIXN2D1uwzAMBeDnDlk6BD1A7pcxSzPmRC1yjiQ9U9glLlxFEv+eEBPgZksfYJEUPIkI
        1hxvrwZosXogROQvizgAuAH4GLj9FsAFwH7p+GdqAA8A7gAEwM8g5BbA9bHHvYWsAZe4OdnI
        JW7OKrIE1nBsZA3XRJbAS+NFFrKHm/OrB7QsEEVa1v4GsNHO4AhkCNerYiYyjOsB54WzZzKF
        04BZZBpnAUaRZhyAJs4K9CJdOBbQg3ThmEAr0oVjAzPIKm4EMIJs4kYBPchzD6cBszfqyfDM
        DsB7eIfEJ9aq1dLMnwysIvHgVCS7zURwXSSzUWu4MwKzmzXqrBPCPbsZlwXv+HIhM8AIzo2M
        AjM4GrIFZOAoyBqQiUsjS+AIXApZAkfhXMge8DQQZ0UetTNYQ7JwGvLTWsVLJBvXQj7htD54
        GogrkVWciGByXLNeEqv/R7164C96sSVWO4KjCgAAAABJRU5ErkJggg==
      </shape>
      <shape name='KPI/04.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGMCG
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfiILZ9Exsam/HJV4PH5dlcdtOa/w3Wd0O0RD0zVCF2hodm0fDTEuKrkWkdmP
        xzZGJ4jexjgZL9D3xQNiUglELG9WOgCIUgt8Qil8Qq4Dru2YRWfgR4RGboDOAxs1VT1HS56f
        tYwV443WXWTbh8PBOniWVC82zOfz0Yfrzgxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGOMp
        haZbLC6O2946JWSVsrGHorPBcuymsSd0r5fi+Tq6X712wl6KXu5VKQz85o3UdeoINNFE31Rt
        PqXYcVnuG9Hqex5jc2NVdRX5CeXACU3M5BwgTFPKXMgJyTKPOMnk4z1ungYeJOlIJwCZF4ZB
        mOVZlnLG8oBduPdtr4u2FBO3/sd1rnIjpkShpVpJuZsq4GEjtew3skPskaIPT3VbyUP/cfye
        c6RC1T9ElSvZoNP7RvU7+ilLWJiQjPqcZB5A4oZOCJ7P/GDuO9To/+VWb/Le78fAfZYTnznA
        g5BnAGlAIMsTHibgZgx8bJtI7P8qZToy5TduL3VvjEvniNa0izJ98QfaxQY+qMi/ygAAAbRJ
        REFUWIXN2LFSwjAcx/FvPVZ1g1HAUR7BgjM+ATyKp7yTCiej+Aw4i5M6AiN4cWiqaY7UpoSk
        v7v/kOs1/dyV8k8SCSGoco5CA/5L5YG1sjdGUVQH+kAP6ABN4EReXgELYA7MgCnwaZor92cm
        hLAqIAYegQ0gCtZW3hPbGmxgbWBsgTLVWM7lDggMgKUDXFpLYOgECIwcwvQa7QUEbg6IS+u2
        FFC+1kPj0hpYAYEWyV+FL+AKaNkAXXyttjUuBAQuA+DSiosAHwIC73OBQB27DuG6NkBdNemL
        hT579GcHqUnDb3Rgz5/FmCt1oAM7/hzGXKgDHdj05zCmpQ504LFHiCkZgw6MPEIKRQeugyiy
        yRh04JtHiCkLdaADX/05jJmrAx347M9hzCwz0lpdg/CtrmFsdUKIL5ItYqhMpeEvO1YzMVVe
        bgVcsE5sVtRt/C/527abpqFH4LDstvPOA25UatupIKu7cdde99ohbI2row8FeY6br3si58Ip
        UIF2SY7Sthaob3lPlx3Je14kH2odeYB5zd8B5hlwKi8vgXeSxv8CPAEfprnyDKWBvlL5M+rK
        A38AJRJHiz0chcgAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/05.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XaxR9orzGQhq6Yqti987O873zn2Obd3Y19WW6HBWrw0
        XQx///wFQVPH8IkUdtEzsWm+HJV4PH5dVcdtFdbw7jO4HaOx7VuhSzC2u26IxhiWtVyLyOyn
        YwTBCaK3MUymC/C9eABMKgGI5S4qG2NAqYU9Qin+BBwbO8g2iy6wFxEaOT44D2jUVP0cLXl+
        1jJWDDda9xFCh8PBOriWVC8Ih2E4+XCchUEshtdOl+OiG25mD1wMlWp63cgOTHa5lnsdQzin
        0PZFcXHcDdYpIauSLRrLHmHLRm2LZvSgl+L5OnpYvfYCLcUg96oSBn7zRuo6dQKaaKJvqjGf
        Uu64rPat6PQ9j6G5seqmjryEcswJTczkHOMgTSlzcE5IlrnETmYf73HzNPQDxkJDJxhnbhD4
        QZZnWcoZy3124d53gy67Sszc5h83uMqNmBKllmol5W6ugIeN1HLYyB6wRwo+PDVdLQ/Dx+l7
        zpEK1fwQda5kC07vGzXv6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/l9u/Sbv/X4K3GM58ZiN
        uR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEHFJwGbpDfEecAAAGy
        SURBVFiFzdi/SwJhHMfx9yMiCIKChUMtLjU51ebm6OZWU20FQUKQ/Tk11VZTbW6OTrbU4lJb
        gYNgiOjT0D1y2Hnej+d57r7wAU/vzhcfzsN7hJSSNE8macCmST0w694QQsQ5Vx54dV7XgJ+g
        B/peZlLKZWLOJSCdtMMc6DasRhcwB3y4gJ/Oe6kBnrlwKudpAWaBoQdwyMo1nhTwxAOncpo0
        MAO8+QDfCXArMwk88sGpHCcFFMAgAHDg7Gsd2AqAU2klAeyHAPZtA5shcCpNm8BeBGDPFrAR
        AafSsAHsxgB2TQPrMXAqdZPAZw3AF1PAAw04lUMTwEeNwCfdwBqw0AhcOOfUBrzXiFN50AXc
        A+YGgHNgXwfw1gBO5S4usArMDAJnQNUPuOnfboeAzxURJwvc+O7h0+AOMMVceypTYDdKgx1C
        PNvGmBxwvfbTNQ1WgAnm21OZAJUwDV7xt9Zia/LOd/4fjwbLwBh77amMgXKQBttAIWITcaaA
        16LTSoNFYIT99lRGQNGvwQugFLuL6FNyDMsR7l+vEOIL2LKMWp1vKeW22hAeN+hUTerXqFMP
        /AVLJss8zee8nAAAAABJRU5ErkJggg==
      </shape>
      <shape name='KPI/06.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAiBpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XqxR9orzGQhqqYqti987O873zn2Obd3Y19WW6HBWrw0
        XQz/vP2GoKlj+EQKu+iZ2DTfjko8Hr+vquO2Cmt49xXcjtHY9q3QJRjbXTdEYwzLWq5FZPbT
        MYLgBNHbGCbTBfhZPAAmlQDEcheVjTGg1MIeoRR/AY6NHWSbRRfYiwiNHB+cBzRqqn6Oljw/
        axkrhhut+wihw+FgHVxLqheEwzCcfDjOwiAWw2uny3HRDTezBy6GSjW9bmQHJrtcy72OIZxT
        aPuiuDjuBuuUkFXJFo1lj7Blo7ZFM3rQS/F8HT2sXnuBlmKQe1UJA795J3WdOgFNNNEP1ZhP
        KXdcVvtWdPqex9DcWHVTR15COeaEJmZyjnGQppQ5OCcky1xiJ7OPj7h5mtqcucTQCcaZGwR+
        kOVZlnLGcp9duPfdoMuuEjO3OXFDP2DcvsqNmBKllmol5W6ugIeN1HLYyB6wRwo+PTVdLQ/D
        5+l7zpEK1fwSda5kC07vGzUf6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/j9u/S7v/X4K3GM5
        8ZiNuR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEXBVYGYV78fTkA
        AAEUSURBVFiFzdi7DsMgDAVQU/WXk6GdO/WP24EuNMoDsMHX4CshkSHWkUlIRIgxkufcZgO4
        uAfeEUVCCP/pg4gCEb1a7q8+ZjFG9djhYhrPVmCxNgi4xzUjTYEFXBPSDMjgxEgToBAnQsKB
        jTgWCQV24qpIGFCJKyIhQBAui1QDwbgLUgVMhdC4A7IbaIzbkF3AQTgW6QFXRXrBFZGecFnk
        +Y/6Q/PzPVxllnihed1bpS/JDOQFx20zI5FZnGSjHoEs4qSfOkvkSsQ0iQMaIldKUQMNkBsO
        BgQiDzgoEIC84OBABTKLMwF2IIs4M2ADsoozBQqQC4czB1aQItwo4BkpxnFAyAFmyrswVyXs
        OuAy7s+o3QN/HTxebpAd/IAAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/07.png'>
        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
        AElFTkSuQmCC
      </shape>
      <shape name='KPI/08.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbND6kK1KI3WvBNwGJWBkOwvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0JfVVhiwFi9N
        l8DfP39B0NQJfCILd9EzsWm+HJV4PH5dVcdtNa/h3WdwO8RD27fClGBod52OhwSWtVyL2O7H
        YwTBCWK2CUzHC/B98QCYVAIQx59VLsaAUgcHhFL8CXgu9pBrF53hICY09kJwHtCqqfo5XvLi
        rGWtBG6M6WOEDoeDc/AdqV4Qns/now/Pm1nETL92phxmnb6ZPHChK9X0ppEdGO1yLfcmgXBK
        oe0Xi4vjTjunhJxKtmgoe4QdF7UtmtDaLMXzdbRevfYCLYWWe1UJC795I3WdOgJtNPE31dhP
        KXdcVvtWdOaeJ9DeOHVTx0FKOeaEpnZyjnGUZZR5uCAkz33ippOP97hFxv2IcmrpBOPcj6Iw
        yos8zzhjRcgu3PtOm7KrxMRt/nHJVW7MlCiNVCspd1MFPGykkXoje8AeKfjw1HS1POiP4/ec
        IxWq+SHqQskWnN43bt7Rz1jKopTkNOAk9zFOvciNsB+wIJwHLrX6f7n1m7z3+zHwgBUkYC7m
        YcRzjLOQ4LxIeZRiL2c4gMhGgv6rlOnIlt+4vdS9NS6dIzrbLsr2xR8BmAZedgi/9AAAAdlJ
        REFUWIXtmD0vBFEUht8VFvsDVDpZySYUOioFWtqZbKUQ4hcIUSnwBwS90FLbfssVRFilhs4u
        M3PnzodibiT32kRxX3GLPd05k7x5cs49H7ulPM/hsg38N8Bv5jzgoK2A59cvASz3+HR1cX62
        YqtvDQhg/mh3DKMjpe9AGOXY3HubJ2hTSizTTG805ScEbQpgIGIdUPmfBG0KYCSNXCUpAEAQ
        tCmAIkn1DMokB4CIoE0B/IiE2yVOzWWUZQAcapL3IMq0QFj4HYI2J4OZzgc1dVKCNucNmmNG
        vckuQZsCGJtdrPyYoE0BDKXUA8oPCdqkTSL1DMbFHHQGUKZmiRO3StyNeu/iD4L234yZ1LFB
        3QmFMaiFW4NapsZIdm3VBbF0+1iI1Hn1baqLHboHjWKqA5ZyDzJ+NH3ePAqs7rya8YCgjVL/
        nwVL6wPaGqNJ4Pn1dQBbAMYBvAA4uDg/O2FoWzeJ59fXahPl06W5CqaqZdy1YzSaAe6f4w0G
        JKPE24uzFczUhjE0WMJMbRgLsxWgyKi1MQDHpyfLWmCqWgaKclsbA/Dl9km/Te/bMVC8RWtj
        AO43mgFaDwJJArQeBK6bAQAcErQ5m8Tz6xv42cXH1sLorzp7cx7wCztR4jstIoJvAAAAAElF
        TkSuQmCC
      </shape>
      <shape name='KPI/09.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbKP1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0BXlVhqwli91
        m8DfP39BUFcJfCILd9Exuam/HLV8PH5dlcdtOa/g3WdwO8RD0zXSFGBodm0fDwksKrWWsd2P
        xwiCE8RsE5iOF+D74gEwpSUgjj8rXYwBpQ4OCKX4E/Bc7CHXLjrDQUxo7IXgPKBV09VzvOT5
        WctaCdwY08UIHQ4H5+A7Sr8gPJ/PRx+eN7OIWf/ammKYtf3N5IHLvtR1Z2rVgtEu1mpvEgin
        FJpusbg4bnvnlJBTqgYNRYew46KmQRO6N0v5fB3dr147iZayV3tdSgu/eSN1nToCbTTxN13b
        Tyl2XJX7RrbmnifQ3jhVXcVBSjnmhKZ2co5xlGWUeTgnRAifuOnk4z1unuWRlwtq6QRj4UdR
        GIlciIwzlofswr1ve1O0pZy49T8uucqNmZaFUXql1G6qgIeNMqrfqA6wRwo+PNVtpQ79x/F7
        zpFKXf+QVa5VA07vG9fv6GcsZVFKBA04ET7GqRe5EfYDFoTzwKVW/y+3epP3fj8GHrCcBMzF
        PIy4wDgLCRZ5yqMUe4LhACIbCfqvUqYjW37j9lL31rh0jmxtu2jbF38ALPoGgtAaSM0AAAJT
        SURBVFiF7dixi9NgGMfxb2pOPGgOEyyeaA9cahfFoc53CILWVaSlm4ubNyp0LA6u/g2WdlMH
        BxHuijfqdEfxHC0qSMOBvd5dOIc4pfRyedM3ed9gB58t8JB8eJO8zy8xfN9nniv3rwGzau6B
        5vRBrd6YPmwBD4HbwI+Mrr8MbAKvup3286gG0Qq2gOat0bAEbACXM8L1KqNhGWjV6o2mLLAF
        NB9//2JU3QEZIQPctfvugEc/dw0RMgyc4JaPDwHIAHkCB1D0DoTIMPBBZTSc4ILSiDyFC6ro
        HXBjf88A7sQB1z4vFb6+u7By6swakEIcwOvCVbYt5yNQjQP+AlYzQMri7nU77RO3L+ol0Y1M
        jRMBp5G7ikglXBwwQK4pIJVxs4AqSGkcIMTJANMgteFkgUmR2nAQCguSyB5QDgOq7oDr472S
        j8GKt68FB8njVuxKFr2xVlwa4EykThykD6wT5LdzlrBpx3LYtpyttDhQS9QGYBgxDef/HANc
        BOy0F0kLnGwlUc9cUEVvrJyC0gBj97lwqaagpMBY3I7lEPVMqiCT7IMyE2ILKFRGw8h9Eih9
        WipskOBDTHYFZcfXXdQCRipg0tmqmoISAdMOfm3IOKBqKpFG1uoNIVIE1BWZlJFRQK15ThUZ
        BurGKSPDwCxwiZFxwPdHOZPf5lnduJlId2GRw5wJ8CYOuN7P2y8/OFcmSI04IdJdWKRnX6Kf
        t190O+2n081Ro269n7cBnpzxfd24MLIHlI9yZoB7Fm4UzeIAeTMDXBTybRQOwPj/E12x5h74
        F8U8DkvlrA52AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/11.png'>
        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
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/12.png'>
        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
        Xc5rPfBWb+cAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/13.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLKK2EbrA1uVRupeCbgNSsDIOAvNr/Vhn7RfmMlCVE1VbD/42ufcc6997+3d0BXlVhqwli91
        m8A/b78hqKsEPpHczTsmN/W3o5aPx++r8rgt5xW8+wpuh3houkaaAgzNru3jIYFFpdYytvvx
        GEFwgphtAtPxAvzMHwBTWgLi+LPSxRhQ6uCAUIq/AM/FHnLtojMcxITGXgjOA1o1XT3HS56d
        tayVwI0xXYzQ4XBwDr6j9AvC8/l89OF5M4uY9a+tKYZZ299MHrjsS113plYtGO1irfYmgXBK
        oeny/OK47Z1TQk6pGjQUHcKOi5oGTejeLOXzdXS/eu0kWspe7XUpLfzmndR16gi00cQ/dG0/
        pdhxVe4b2Zp7nkB741R1FQcp5ZgTmtrJOcbRYkGZhzNChPCJm04+PuJmzBMuI66lE4yFH0Vh
        JDIhFpyxLGQX7n3bm6It5cStL9wgu8qNmZaFUXql1G6qgIeNMqrfqA6wRwo+PdVtpQ795/F7
        zpFKXf+SVaZVA07vG9cf6C9YyqKUCBpwInyMUy9yI+wHLAjngUut/j9u9S7v/X4MPGAZCZiL
        eRhxgfEiJFhkKY9S7AmGA4hsJOi/SpmObPmN20vdW+PSObK17aJtX/wF9TIGVo7wNFAAAAGM
        SURBVFiF7di9boMwFAXgQ4WaKSgLSh8kazORqTwAiOdD8ABNhzBn4z1SKQvK1oaIDoU2UAy2
        7+Vn6JksWb76dCRLlo2iKDDnPEwN6MvsgSbHEM8PquUBgAFgp3I+jkLhHmeDh83lvNtczg6A
        hGsoS4Mocc/ZOwwUAOCklp1Ascm2kBv0/OAHZ+WfWOZXbLMTuJokAZu4KpxIbaAIx43UAvbh
        OJHKQFkcF1IJqIrjQEoDdXFUpBSQiqMge4GeHyQcOF1kJ7DEOdvsxILTQQqB97hlfmXDtSE9
        PxAiW4FD41SQf4Bj4WSRNeDYOBlks8EPALhN8NC+waiWtdtYk8RR6KaWvT+u1sjMxVg2ZOYj
        jqsnpJb9FkfhixA4BbIL1wocE9mHEwLHQMrgOoFDIu9xAIS4XuAQSBWcFJATqYqTBnIgdXBK
        QApSF6cM1EFScFpAFSQVpw2UQWbmgowjAbuQ37g1UsveU3BkYBuygXOp87l+t9zUsl9RtsWF
        A/iAwC8SYMIBgPH/iU7M7IFfIdyNLuJOcwcAAAAASUVORK5CYII=
      </shape>
    </shapes>
  </external>
</workbook>
