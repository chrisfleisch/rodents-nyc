<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='mac' version='10.5' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Restaurant_Search_Tool_0' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
    </datasource>
    <datasource caption='combined_restaurant_sightings' inline='true' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined_restaurant_sightings' name='textscan.1itt1c00ozjhrm123ntqw0hhodn3'>
            <connection class='textscan' directory='/Users/ChrisD/Documents/UCBerkeleyMIDS/W209/rodents-nyc/tableau/Restaurant Dash/Restaurant_Search_Tool.twb Files/C:/Users/adpra/Documents/MIDS/W209_Data_Visualization/Final_Project' filename='combined_restaurant_sightings.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1itt1c00ozjhrm123ntqw0hhodn3' name='combined_restaurant_sightings.csv' table='[combined_restaurant_sightings#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='BOROUGH' ordinal='1' />
            <column datatype='real' name='COUNT' ordinal='2' />
            <column datatype='string' name='CUISINE DESCRIPTION' ordinal='3' />
            <column datatype='string' name='DBA' ordinal='4' />
            <column datatype='integer' name='ZIP_CODE' ordinal='5' />
            <column datatype='string' name='price_level' ordinal='6' />
            <column datatype='string' name='rounded_rating' ordinal='7' />
            <column datatype='string' name='violation_count' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BOROUGH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BOROUGH]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>BOROUGH</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[COUNT]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>COUNT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUISINE DESCRIPTION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUISINE DESCRIPTION]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>CUISINE DESCRIPTION</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DBA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DBA]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>DBA</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP_CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP_CODE]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>ZIP_CODE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price_level]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>price_level</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rounded_rating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rounded_rating]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>rounded_rating</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>violation_count</remote-name>
            <remote-type>129</remote-type>
            <local-name>[violation_count]</local-name>
            <parent-name>[combined_restaurant_sightings.csv]</parent-name>
            <remote-alias>violation_count</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
      <column caption='Rodent Sighting' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
      <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
      <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([violation_count])' />
      </column>
      <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
      </column>
      <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
        <aliases>
          <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
        </aliases>
      </column>
      <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
      <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
      <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
      <group caption='Action (Borough,Zip Code)' hidden='true' name='[Action (Borough,Zip Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BOROUGH]' />
          <groupfilter function='level-members' level='[ZIP_CODE]' />
        </groupfilter>
      </group>
      <group caption='Action (Cuisine Description)' hidden='true' name='[Action (Cuisine Description)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' />
        </groupfilter>
      </group>
      <group caption='Action (Price Level,Rating)' hidden='true' name='[Action (Price Level,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[price_level]' />
          <groupfilter function='level-members' level='[rounded_rating]' />
        </groupfilter>
      </group>
      <group caption='Action (Price Level,Rounded Rating)' hidden='true' name='[Action (Price Level,Rounded Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[price_level]' />
          <groupfilter function='level-members' level='[rounded_rating]' />
        </groupfilter>
      </group>
      <group caption='Action (Reset Filter)' hidden='true' name='[Action (Reset Filter)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
        </groupfilter>
      </group>
      <group caption='Action (Reset Filter,Restaurant Name)' hidden='true' name='[Action (Reset Filter,Restaurant Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
          <groupfilter function='level-members' level='[DBA]' />
        </groupfilter>
      </group>
      <group caption='Action (Reset Filter,Zip Code)' hidden='true' name='[Action (Reset Filter,Zip Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
          <groupfilter function='level-members' level='[ZIP_CODE]' />
        </groupfilter>
      </group>
      <group caption='Action (Restaurant Name)' hidden='true' name='[Action (Restaurant Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DBA]' />
        </groupfilter>
      </group>
      <group caption='Action (Restaurant Names)' hidden='true' name='[Action (Restaurant Names)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DBA]' />
        </groupfilter>
      </group>
      <group caption='Action (Zip Code)' hidden='true' name='[Action (Zip Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ZIP_CODE]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/ChrisD/Documents/UCBerkeleyMIDS/W209/rodents-nyc/tableau/Restaurant Dash/combined_restaurant_sightings.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/29/2018 11:17:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='181375' timestamp-start='2018-03-29 23:17:35.933' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181375</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BOROUGH</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BOROUGH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BOROUGH</remote-alias>
              <ordinal>1</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[COUNT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNT</remote-alias>
              <ordinal>2</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CUISINE DESCRIPTION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CUISINE DESCRIPTION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CUISINE DESCRIPTION</remote-alias>
              <ordinal>3</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DBA</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DBA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DBA</remote-alias>
              <ordinal>4</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>224</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP_CODE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ZIP_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP_CODE</remote-alias>
              <ordinal>5</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[price_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_level</remote-alias>
              <ordinal>6</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rounded_rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rounded_rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rounded_rating</remote-alias>
              <ordinal>7</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>violation_count</remote-name>
              <remote-type>129</remote-type>
              <local-name>[violation_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>violation_count</remote-alias>
              <ordinal>8</ordinal>
              <family>combined_restaurant_sightings.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.496283' measure-ordering='alphabetic' measure-percentage='0.373606' parameter-percentage='0.130112' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BOROUGH:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BRONX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STATEN ISLAND&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;QUEENS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MANHATTAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BROOKLYN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Restaurant Dashboard' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Restaurant Dashboard' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Restaurant Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Borough' />
        <param name='target' value='Restaurant Dashboard' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Restaurant Dashboard 2' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Borough' />
        <param name='target' value='Restaurant Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Violations Heatmap</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]' filter-group='4'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]'>
            <groupfilter function='level-members' level='[Calculation_92253480755834880]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
              <groupfilter function='level-members' level='[DBA]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[ZIP_CODE]' member='10001' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10004' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10005' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10006' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10007' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10016' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10017' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10018' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10019' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10020' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10021' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10022' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10023' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10024' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10025' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10026' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10027' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10028' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10029' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10030' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10031' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10032' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10033' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10034' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10035' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10036' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10037' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10038' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10039' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10040' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10044' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10048' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10065' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10069' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10075' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10103' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10104' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10105' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10107' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10110' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10111' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10112' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10118' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10119' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10121' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10123' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10128' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10153' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10154' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10155' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10162' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10165' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10166' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10167' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10168' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10169' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10170' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10171' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10172' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10173' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10174' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10175' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10176' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10178' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10199' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10270' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10271' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10279' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10280' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10281' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10282' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10285' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10301' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10302' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10303' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10304' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10305' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10306' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10307' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10308' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10309' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10310' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10311' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10312' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10314' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10451' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10452' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10453' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10454' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10455' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10456' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10457' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10458' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10459' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10460' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10461' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10462' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10463' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10464' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10465' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10466' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10467' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10468' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10469' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10470' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10471' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10472' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10473' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10474' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10475' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11001' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11004' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11005' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11040' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11101' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11102' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11103' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11104' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11105' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11106' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11109' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11201' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11203' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11204' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11205' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11206' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11207' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11208' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11209' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11210' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11211' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11212' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11213' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11214' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11215' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11216' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11217' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11218' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11219' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11220' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11221' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11222' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11223' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11224' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11225' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11226' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11228' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11229' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11230' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11231' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11232' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11233' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11234' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11235' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11236' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11237' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11238' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11239' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11241' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11242' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11245' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11249' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11256' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11352' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11354' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11355' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11356' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11357' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11358' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11360' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11361' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11362' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11363' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11364' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11365' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11366' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11367' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11368' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11369' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11370' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11371' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11372' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11373' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11374' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11375' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11377' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11378' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11379' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11385' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11411' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11412' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11413' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11414' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11415' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11416' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11417' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11418' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11419' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11420' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11421' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11422' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11423' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11426' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11427' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11428' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11429' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11430' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11432' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11433' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11434' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11435' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11436' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11451' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11691' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11692' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11693' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11694' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11697' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:DBA:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' filter-group='11'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter from='&quot;1.0&quot;' function='range' level='[none:price_level:nk]' to='&quot;4.0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter from='&quot;1.0&quot;' function='range' level='[none:rounded_rating:nk]' to='&quot;5.0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' direction='DESC' />
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Price Level:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rating:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Rodent Violation Count:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cuisine and Rodent Violations'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[violation_count]' derivation='None' name='[none:violation_count:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]' filter-group='4'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]'>
            <groupfilter function='level-members' level='[Calculation_92253480755834880]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
              <groupfilter function='level-members' level='[DBA]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[ZIP_CODE]' member='10001' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10004' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10005' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10006' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10007' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10016' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10017' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10018' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10019' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10020' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10021' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10022' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10023' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10024' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10025' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10026' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10027' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10028' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10029' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10030' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10031' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10032' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10033' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10034' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10035' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10036' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10037' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10038' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10039' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10040' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10044' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10048' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10065' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10069' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10075' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10103' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10104' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10105' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10107' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10110' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10111' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10112' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10118' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10119' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10121' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10123' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10128' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10153' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10154' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10155' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10162' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10165' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10166' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10167' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10168' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10169' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10170' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10171' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10172' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10173' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10174' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10175' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10176' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10178' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10199' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10270' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10271' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10279' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10280' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10281' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10282' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10285' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10301' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10302' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10303' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10304' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10305' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10306' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10307' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10308' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10309' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10310' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10311' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10312' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10314' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10451' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10452' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10453' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10454' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10455' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10456' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10457' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10458' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10459' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10460' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10461' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10462' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10463' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10464' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10465' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10466' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10467' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10468' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10469' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10470' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10471' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10472' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10473' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10474' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10475' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11001' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11004' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11005' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11040' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11101' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11102' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11103' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11104' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11105' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11106' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11109' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11201' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11203' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11204' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11205' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11206' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11207' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11208' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11209' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11210' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11211' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11212' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11213' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11214' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11215' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11216' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11217' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11218' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11219' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11220' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11221' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11222' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11223' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11224' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11225' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11226' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11228' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11229' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11230' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11231' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11232' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11233' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11234' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11235' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11236' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11237' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11238' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11239' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11241' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11242' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11245' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11249' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11256' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11352' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11354' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11355' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11356' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11357' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11358' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11360' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11361' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11362' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11363' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11364' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11365' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11366' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11367' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11368' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11369' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11370' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11371' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11372' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11373' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11374' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11375' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11377' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11378' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11379' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11385' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11411' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11412' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11413' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11414' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11415' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11416' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11417' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11418' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11419' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11420' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11421' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11422' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11423' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11426' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11427' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11428' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11429' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11430' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11432' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11433' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11434' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11435' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11436' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11451' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11691' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11692' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11693' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11694' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11697' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' direction='DESC' using='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:DBA:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' filter-group='11'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]'>
            <groupfilter from='&quot;1.0&quot;' function='range' level='[none:violation_count:nk]' to='&quot;9.0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='rows' value='Avg. Rodent Violation Count' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' value='84' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Cuisine Description:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Rodent Violation Count:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Local Rodent Population Vs Local Restaurants'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Rodent Sighting' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[DBA]' derivation='Count' name='[cnt:DBA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
            <column-instance column='[COUNT]' derivation='Sum' name='[sum:COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:rounded_rating:nk]' />
              <groupfilter function='empty-level' member='[none:rounded_rating:nk]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' scope='rows' value='Number of Rat Sightings' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' scope='cols' value='Number of Restaurants' />
            <format attr='subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' />
              <lod column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[sum:COUNT:qk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Restaurant List by Violation Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Rodent Violation Count' datatype='integer' name='[Calculation_148900313420677120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([violation_count])' />
            </column>
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='Attribute' name='[attr:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='Attribute' name='[attr:ZIP_CODE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_level]' derivation='Attribute' name='[attr:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='Attribute' name='[attr:rounded_rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313420677120]' derivation='Avg' name='[avg:Calculation_148900313420677120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_92253480755834880]' derivation='None' name='[none:Calculation_92253480755834880:nk]' pivot='key' type='nominal' />
            <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
            <column caption='Violation Count' datatype='string' name='[violation_count]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[ZIP_CODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]'>
            <groupfilter function='level-members' level='[Calculation_92253480755834880]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[ZIP_CODE]' member='10001' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10004' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10005' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10006' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10007' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10016' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10017' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10018' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10019' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10020' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10021' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10022' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10023' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10024' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10025' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10026' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10027' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10028' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10029' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10030' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10031' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10032' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10033' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10034' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10035' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10036' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10037' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10038' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10039' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10040' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10044' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10048' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10065' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10069' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10075' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10103' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10104' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10105' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10107' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10110' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10111' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10112' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10118' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10119' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10121' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10123' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10128' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10153' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10154' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10155' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10162' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10165' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10166' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10167' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10168' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10169' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10170' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10171' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10172' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10173' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10174' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10175' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10176' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10178' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10199' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10270' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10271' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10279' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10280' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10281' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10282' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10285' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10301' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10302' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10303' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10304' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10305' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10306' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10307' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10308' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10309' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10310' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10311' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10312' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10314' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10451' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10452' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10453' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10454' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10455' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10456' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10457' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10458' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10459' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10460' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10461' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10462' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10463' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10464' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10465' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10466' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10467' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10468' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10469' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10470' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10471' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10472' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10473' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10474' />
                <groupfilter function='member' level='[ZIP_CODE]' member='10475' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11001' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11004' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11005' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11040' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11101' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11102' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11103' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11104' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11105' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11106' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11109' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11201' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11203' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11204' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11205' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11206' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11207' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11208' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11209' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11210' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11211' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11212' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11213' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11214' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11215' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11216' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11217' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11218' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11219' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11220' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11221' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11222' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11223' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11224' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11225' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11226' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11228' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11229' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11230' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11231' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11232' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11233' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11234' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11235' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11236' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11237' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11238' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11239' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11241' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11242' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11245' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11249' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11256' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11352' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11354' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11355' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11356' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11357' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11358' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11360' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11361' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11362' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11363' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11364' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11365' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11366' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11367' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11368' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11369' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11370' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11371' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11372' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11373' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11374' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11375' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11377' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11378' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11379' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11385' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11411' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11412' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11413' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11414' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11415' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11416' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11417' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11418' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11419' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11420' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11421' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11422' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11423' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11426' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11427' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11428' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11429' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11430' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11432' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11433' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11434' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11435' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11436' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11451' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11691' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11692' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11693' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11694' />
                <groupfilter function='member' level='[ZIP_CODE]' member='11697' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]' filter-group='7'>
            <groupfilter function='level-members' level='[ZIP_CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]'>
            <groupfilter function='level-members' level='[attr:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]'>
            <groupfilter function='level-members' level='[attr:price_level:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:DBA:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' direction='DESC' using='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]'>
            <groupfilter function='member' level='[none:Calculation_92253480755834880:nk]' member='&quot;Reset Filter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' filter-group='11'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Borough,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:rounded_rating:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]' />
              <tooltip column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:ZIP_CODE:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Restaurant Name:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cuisine Description:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Price Level:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rating:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:rounded_rating:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Zip Code:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:ZIP_CODE:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Rodent Violation Count:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Restaurants By Zip'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Box' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
            <column caption='Search Filter' datatype='boolean' name='[Calculation_148900313474527234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(lower([CUISINE DESCRIPTION]),lower([Parameters].[Parameter 1]))&#13;&#10;OR&#13;&#10;CONTAINS([DBA],[Parameters].[Parameter 1])&#13;&#10;OR&#13;&#10;CONTAINS(str([ZIP_CODE]),[Parameters].[Parameter 1])' />
            </column>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[DBA]' derivation='Count' name='[cnt:DBA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_148900313474527234]' derivation='None' name='[none:Calculation_148900313474527234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_92253480755834880]' derivation='None' name='[none:Calculation_92253480755834880:nk]' pivot='key' type='nominal' />
            <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]' filter-group='3'>
            <groupfilter function='level-members' level='[CUISINE DESCRIPTION]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]' filter-group='4'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[price_level]' />
              <groupfilter function='level-members' level='[rounded_rating]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]'>
            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_92253480755834880]' />
              <groupfilter function='level-members' level='[DBA]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]' filter-group='5'>
            <groupfilter function='level-members' level='[DBA]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:CUISINE DESCRIPTION:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:Calculation_148900313474527234:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]'>
            <groupfilter function='member' level='[none:Calculation_92253480755834880:nk]' member='&quot;Reset Filter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:DBA:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' filter-group='11'>
            <groupfilter function='level-members' level='[none:ZIP_CODE:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]'>
            <groupfilter function='level-members' level='[none:price_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]'>
            <groupfilter function='level-members' level='[none:rounded_rating:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Cuisine Description)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rounded Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Names)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Restaurant Name)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter)]</column>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='52' />
            <format attr='font-weight' data-class='subtotal' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='bold' />
            <format attr='font-weight' data-class='total' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='bold' />
            <format attr='background-color' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='true' />
            <format attr='font-weight' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='bold' />
            <format attr='color' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='#000000' />
            <format attr='font-size' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='10' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' value='false' />
            <format attr='break-on-special' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='in-tooltip' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' />
              <lod column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' />
              <geometry column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Zip Code:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Restaurant Name:&#9;</run>
                <run bold='true'>&lt;[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk] * [federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)])</rows>
        <cols>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
          </datasources>
          <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
            <column caption='Reset Filter' datatype='string' name='[Calculation_92253480755834880]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
              <aliases>
                <alias key='&quot;Reset Filter&quot;' value='Reset Map Filter' />
              </aliases>
            </column>
            <column-instance column='[Calculation_92253480755834880]' derivation='None' name='[none:Calculation_92253480755834880:nk]' pivot='key' type='nominal' />
            <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
            <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                <groupfilter function='member' level='[price_level]' member='&quot;2.0&quot;' />
                <groupfilter function='member' level='[price_level]' member='&quot;3.0&quot;' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='member' level='[rounded_rating]' member='&quot;3.0&quot;' />
                <groupfilter function='member' level='[rounded_rating]' member='&quot;3.5&quot;' />
                <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1534254550933838' />
                <format attr='shape' value='KPI/03.png' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Restaurant Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
      </datasources>
      <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
        <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
        <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
        <column caption='Restaurant Name' datatype='string' name='[DBA]' role='dimension' type='nominal' />
        <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
        <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
        <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
        <column-instance column='[DBA]' derivation='None' name='[none:DBA:nk]' pivot='key' type='nominal' />
        <column-instance column='[ZIP_CODE]' derivation='None' name='[none:ZIP_CODE:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97538' id='5' param='horz' type='layout-flow' w='71655' x='27650' y='1231'>
            <zone h='97538' id='3' type='layout-basic' w='57754' x='27650' y='1231'>
              <zone h='59842' id='1' name='Restaurants By Zip' w='57754' x='27650' y='1231'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37696' id='8' name='Cuisine and Rodent Violations' w='57754' x='27650' y='61073'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97538' id='4' is-fixed='true' param='vert' type='layout-flow' w='13901' x='85404' y='1231'>
              <zone h='10000' id='7' name='Restaurants By Zip' pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' type='color' w='13901' x='85404' y='1231'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10000' id='10' name='Average Rodent Violations By Ratings &amp; Price' pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' type='color' w='13901' x='85404' y='11231'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7539' id='21' mode='typeinlist' name='Cuisine and Rodent Violations' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' type='filter' w='13901' x='85404' y='21231'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7539' id='17' mode='typeinlist' name='Restaurant List by Violation Count' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]' type='filter' w='13901' x='85404' y='28770'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7539' id='22' mode='typeinlist' name='Restaurants By Zip' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]' type='filter' w='13901' x='85404' y='36309'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7539' id='15' mode='typeinlist' name='Average Rodent Violations By Ratings &amp; Price' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='filter' w='13901' x='85404' y='43848'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='52179' id='9' name='Average Rodent Violations By Ratings &amp; Price' w='26955' x='695' y='46590'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='45359' id='14' name='Restaurant List by Violation Count' w='26955' x='695' y='1231'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Restaurant Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='combined_restaurant_sightings' name='federated.1klyxjd02n97sj16nkyth0xvqjm6' />
      </datasources>
      <datasource-dependencies datasource='federated.1klyxjd02n97sj16nkyth0xvqjm6'>
        <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
        <column caption='Cuisine Description' datatype='string' name='[CUISINE DESCRIPTION]' role='dimension' type='nominal' />
        <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
        <column-instance column='[CUISINE DESCRIPTION]' derivation='None' name='[none:CUISINE DESCRIPTION:nk]' pivot='key' type='nominal' />
        <column-instance column='[price_level]' derivation='None' name='[none:price_level:nk]' pivot='key' type='nominal' />
        <column-instance column='[rounded_rating]' derivation='None' name='[none:rounded_rating:nk]' pivot='key' type='nominal' />
        <column caption='Price Level' datatype='string' name='[price_level]' role='dimension' type='nominal' />
        <column caption='Rating' datatype='string' name='[rounded_rating]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Local Rodent Population Vs Local Restaurants' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='6' mode='checkdropdown' name='Local Rodent Population Vs Local Restaurants' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' type='filter' values='relevant' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='7' mode='checkdropdown' name='Local Rodent Population Vs Local Restaurants' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' type='filter' w='16000' x='83200' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='8' mode='checkdropdown' name='Local Rodent Population Vs Local Restaurants' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]' type='filter' w='16000' x='83200' y='14000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='9' name='Local Rodent Population Vs Local Restaurants' pane-specification-id='4' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='color' w='16000' x='83200' y='20500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='10' mode='slider' name='Local Rodent Population Vs Local Restaurants' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='filter' w='16000' x='83200' y='36250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='19' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='LET&apos;S BEGIN!' captured-sheet='Restaurant Dashboard' id='1' />
                  <story-point caption='Choose and area of the city. We&apos;ll zoom in and use Lasso selection from the lower button on the map toolbar.' captured-sheet='Restaurant Dashboard' id='2'>
                    <capturedDeltas>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4997006.1285871007' min='4949615.1710502915' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8206354.9757291907' min='-8259555.1474156734' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Say you want more affordable food but with a high rating. Let&apos;s select a range of ratings and see what restaurants have recorded rodent sighting violations.' captured-sheet='Restaurant Dashboard' id='3'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10002' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4983805.907538035' min='4963897.3774312474' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8223325.3918853477' min='-8245830.6873338157' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>376</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>458</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10013</value>
                                <value>&quot;POLYGON((-73.9986 40.7135,-74.013 40.7172,-74.0133 40.7183,-74.0114 40.7282,-74.0034 40.727,-74.0044 40.7241,-73.9944 40.7195,-73.9975 40.714,-73.9986 40.7135))&quot;</value>
                                <value>40.7194</value>
                                <value>-74.003</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>375</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10012</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-73.997 40.7314,-73.9926 40.7241,-73.9944 40.7195,-74.0044 40.7241,-74.0034 40.727,-74.001 40.7317))&quot;</value>
                                <value>40.7256</value>
                                <value>-73.999200000000002</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>423</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10011</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9909 40.7397,-73.997 40.7314,-74.001 40.7317,-74.0036 40.7407,-74.0094 40.7426,-74.0089 40.7511,-73.9923 40.7436))&quot;</value>
                                <value>40.7393</value>
                                <value>-73.998900000000006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>242</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10010</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9862 40.7434,-73.9726 40.7358,-73.9738 40.7327,-73.9799 40.735,-73.9909 40.7397,-73.9923 40.7436))&quot;</value>
                                <value>40.740000000000002</value>
                                <value>-73.985500000000002</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>274</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10009</value>
                                <value>&quot;MULTIPOLYGON(((-73.9579 40.7241,-73.9589 40.7244,-73.9581 40.7245,-73.9579 40.7241)),((-73.9799 40.735,-73.9738 40.7327,-73.9715 40.7276,-73.9751 40.7146,-73.9749 40.7188,-73.9885 40.7233,-73.9799 40.735)))&quot;</value>
                                <value>40.726700000000001</value>
                                <value>-73.979699999999994</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>633</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10003</value>
                                <value>&quot;POLYGON((-73.997 40.7314,-73.9909 40.7397,-73.9799 40.735,-73.9885 40.7233,-73.9926 40.7241,-73.997 40.7314))&quot;</value>
                                <value>40.731200000000001</value>
                                <value>-73.988799999999998</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>439</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10002</value>
                                <value>&quot;POLYGON((-73.9921 40.7095,-73.9975 40.714,-73.9944 40.7195,-73.9926 40.7241,-73.9885 40.7233,-73.9749 40.7188,-73.9751 40.7146,-73.9779 40.7105,-73.9921 40.7095))&quot;</value>
                                <value>40.715499999999999</value>
                                <value>-73.990099999999998</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Let&apos;s look for at restaurants with prices ranges 1-3 and ratings between 4 and 5.' captured-sheet='Restaurant Dashboard' id='8'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>6.2168674698795181</value>
                                <value>&quot;3.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>4.658385093167702</value>
                                <value>&quot;3.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>3.5</value>
                                <value>&quot;3.0&quot;</value>
                                <value>&quot;5.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>6.8499999999999996</value>
                                <value>&quot;2.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.9468354430379744</value>
                                <value>&quot;2.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>3.5833333333333335</value>
                                <value>&quot;2.0&quot;</value>
                                <value>&quot;5.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.7149122807017543</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.4045454545454543</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>3.8666666666666667</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;5.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;2.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;3.0&quot;' />
                            </groupfilter>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;5.0&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;2.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;3.0&quot;' />
                            </groupfilter>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;5.0&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10003' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10009' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10010' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10012' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10013' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;2.0&quot;' />
                              <groupfilter function='member' level='[price_level]' member='&quot;3.0&quot;' />
                            </groupfilter>
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;5.0&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980894.5761983832' min='4966848.8249967126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8227615.1537363902' min='-8243459.6799989138' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>243</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>244</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10013</value>
                                <value>&quot;POLYGON((-73.9986 40.7135,-74.013 40.7172,-74.0133 40.7183,-74.0114 40.7282,-74.0034 40.727,-74.0044 40.7241,-73.9944 40.7195,-73.9975 40.714,-73.9986 40.7135))&quot;</value>
                                <value>40.7194</value>
                                <value>-74.003</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>237</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10012</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-73.997 40.7314,-73.9926 40.7241,-73.9944 40.7195,-74.0044 40.7241,-74.0034 40.727,-74.001 40.7317))&quot;</value>
                                <value>40.7256</value>
                                <value>-73.999200000000002</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>235</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10011</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9909 40.7397,-73.997 40.7314,-74.001 40.7317,-74.0036 40.7407,-74.0094 40.7426,-74.0089 40.7511,-73.9923 40.7436))&quot;</value>
                                <value>40.7393</value>
                                <value>-73.998900000000006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>117</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10010</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9862 40.7434,-73.9726 40.7358,-73.9738 40.7327,-73.9799 40.735,-73.9909 40.7397,-73.9923 40.7436))&quot;</value>
                                <value>40.740000000000002</value>
                                <value>-73.985500000000002</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>161</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10009</value>
                                <value>&quot;MULTIPOLYGON(((-73.9579 40.7241,-73.9589 40.7244,-73.9581 40.7245,-73.9579 40.7241)),((-73.9799 40.735,-73.9738 40.7327,-73.9715 40.7276,-73.9751 40.7146,-73.9749 40.7188,-73.9885 40.7233,-73.9799 40.735)))&quot;</value>
                                <value>40.726700000000001</value>
                                <value>-73.979699999999994</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>379</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10003</value>
                                <value>&quot;POLYGON((-73.997 40.7314,-73.9909 40.7397,-73.9799 40.735,-73.9885 40.7233,-73.9926 40.7241,-73.997 40.7314))&quot;</value>
                                <value>40.731200000000001</value>
                                <value>-73.988799999999998</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='We find Five Guy&apos;s, something easy to recognize. We notice that it has  a price level of 1 and rating of 4, with 3 violations (not perfect, but not bad for NYC).' captured-sheet='Restaurant Dashboard' id='9'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
                          <groupfilter function='member' level='[DBA]' member='&quot;FIVE GUYS FAMOUS BURGERS AND FRIES&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>3.0</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>1.0</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
                          <groupfilter function='member' level='[DBA]' member='&quot;FIVE GUYS FAMOUS BURGERS AND FRIES&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:CUISINE DESCRIPTION:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:ZIP_CODE:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[attr:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>2.0</value>
                                <value>&quot;FIVE GUYS FAMOUS BURGERS AND FRIES&quot;</value>
                                <value>%many-values%</value>
                                <value>%many-values%</value>
                                <value>&quot;1.0&quot;</value>
                                <value>%many-values%</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Restaurant Name)]'>
                          <groupfilter function='member' level='[DBA]' member='&quot;FIVE GUYS FAMOUS BURGERS AND FRIES&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980894.5761983832' min='4966848.8249967126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8227615.1537363902' min='-8243459.6799989138' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>1</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>1</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10011</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9909 40.7397,-73.997 40.7314,-74.001 40.7317,-74.0036 40.7407,-74.0094 40.7426,-74.0089 40.7511,-73.9923 40.7436))&quot;</value>
                                <value>40.7393</value>
                                <value>-73.998900000000006</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Let&apos;s clear our selection by clicking on the Five Guys bar in Restaurant List by Violation Count' captured-sheet='Restaurant Dashboard' id='17'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.1481481481481479</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>5.2131147540983607</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.5&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[ZIP_CODE]' member='10011' />
                              <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                              <groupfilter function='member' level='[rounded_rating]' member='&quot;4.5&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980894.5761983832' min='4966848.8249967126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8227615.1537363902' min='-8243459.6799989138' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>50</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>65</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10011</value>
                                <value>&quot;POLYGON((-73.9923 40.7436,-73.9909 40.7397,-73.997 40.7314,-74.001 40.7317,-74.0036 40.7407,-74.0094 40.7426,-74.0089 40.7511,-73.9923 40.7436))&quot;</value>
                                <value>40.7393</value>
                                <value>-73.998900000000006</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Now unclick the square in the the Violations heat map.' captured-sheet='Restaurant Dashboard' id='11'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>4.5238095238095237</value>
                                <value>&quot;1.0&quot;</value>
                                <value>&quot;4.0&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Price Level,Rating)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[price_level]' member='&quot;1.0&quot;' />
                            <groupfilter function='member' level='[rounded_rating]' member='&quot;4.0&quot;' />
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980894.5761983832' min='4966848.8249967126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8227615.1537363902' min='-8243459.6799989138' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>21</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Click &quot;Reset Map Filter&quot; in the pane to the left of the map. This can be used to unclick a selection on the map' captured-sheet='Restaurant Dashboard' id='12'>
                    <capturedDeltas>
                      <worksheet name='Average Rodent Violations By Ratings &amp; Price'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Cuisine and Rodent Violations'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurant List by Violation Count'>
                        <filter class='categorical' column='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Action (Reset Filter,Zip Code)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_92253480755834880]' member='&quot;Reset Filter&quot;' />
                            <groupfilter function='member' level='[ZIP_CODE]' member='10014' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4980179.7669318197' min='4968336.0505491057' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8228585.6702951891' min='-8241942.0352376522' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Geometry (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]</field>
                                  <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>376</value>
                                <value>&quot;Reset Filter&quot;</value>
                                <value>10014</value>
                                <value>&quot;POLYGON((-74.001 40.7317,-74.0034 40.727,-74.0114 40.7282,-74.0094 40.7426,-74.0036 40.7407,-74.001 40.7317))&quot;</value>
                                <value>40.734299999999998</value>
                                <value>-74.006</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Finally, click the Unpin icon on the map to &quot;reset map' captured-sheet='Restaurant Dashboard' id='13'>
                    <capturedDeltas>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Zooming: Now that we are zoomed, we can move around the map by setting the pan function (crossed arrows) in the map tools icon (lookes like a &quot;play&quot; button).' captured-sheet='Restaurant Dashboard' id='14'>
                    <capturedDeltas>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Restaurant Dashboard' id='19'>
                    <capturedDeltas>
                      <worksheet name='Restaurants By Zip'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Latitude (generated)]' field-type='quantitative' max='4997609.4481754843' min='4974015.1873897407' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[Longitude (generated)]' field-type='quantitative' max='-8215647.7498048292' min='-8242298.2025066158' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Local Rodent Population Vs Local Restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Restaurant List by Violation Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Restaurants By Zip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[cnt:DBA:qk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Cuisine and Rodent Violations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_148900313474527234:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:DBA:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:violation_count:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Rodent Violations By Ratings &amp; Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[avg:Calculation_148900313420677120:qk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:CUISINE DESCRIPTION:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:ZIP_CODE:ok]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:price_level:nk]</field>
            <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:rounded_rating:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Restaurant Dashboard'>
      <viewpoints>
        <viewpoint name='Average Rodent Violations By Ratings &amp; Price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cuisine and Rodent Violations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Restaurant List by Violation Count'>
          <zoom type='fit-width' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Restaurants By Zip'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:Calculation_92253480755834880:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Reset Filter&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <default-map-tool-selection tool='8' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Restaurant Dashboard 2'>
      <viewpoints>
        <viewpoint name='Local Rodent Population Vs Local Restaurants'>
          <zoom type='entire-view' />
          <highlight field='[federated.1klyxjd02n97sj16nkyth0xvqjm6].[none:BOROUGH:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Rodent Violations By Ratings &amp; Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cuisine and Rodent Violations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2daXBk13Xf/+/1631HLwC60QAaGGBWDmdGJIdDiiWaVLRQshSRTFRSksqH
      pJIqJ7HjpCplJ6kUvySfLadsR5FdZaskle2SrMhKWZJFKtolckgRM6NZMAB60ECj0fu+vjUf
      MO8R3e92YzAEGujp+6vCB7zb973zlnPvueeeey6jKIoCCmVEYY9aAArlKKEKQBlpqAJQRhqq
      AJRDQ1EU7B5i7vX/QV7rQa9BFYByKJQSq/jiH/8RfviLG9qxVqOIHy+taP9vrCyh0GgR60t8
      A3/+J3+IL/6vLyGZr+x5vXZhA8sr2+9dq1LEjTtxCJU0bt9e71mPoV4gymHw1T/6A7zwz/41
      /FbgjR/8HIuRMVRkM6r5KrZu/wJl8xQen7XB4PHj9b/7HlinFx9/6jTe+Mm7OPvMR/HCpWl8
      5Svfxksffhz/58crMPNJOKdPo7m5hprRiQ8/dRp/+bffxcXT57B04wbOnZ6Faew07l79Plqt
      Bk6cPIHXf3kT/+rzn8ZWAShv/gqb+Tpe/I2n8fevvwWzxYff/d1/TnsAyuGgQIGR48AyDMrl
      MlrNBprNFmr1GnyTk2g3ssiVSmg0azjzzMcw6bXgV9dvghvzo1QqAAAYhYHRaILUbuL2r1dR
      zgoYj0ygVa3i9jtLeOGVf4kPLE7Cv3AJH7o4i2qlCYN/Aq+8+AxqBj8++NyHcSJkQzGVQZPx
      4B9/7Apur8Tx9AdfxrTPBQWA4bXXXnvtSJ8U5ZFkKujF1772l8jWJEiVBG7FElg8fQ4mA1DI
      ZdAGh9mZKbg8XlgsDjgMMk7OzSO5nUE0uojpSR/e+eUP8e6dDXzylX8Ik1yCdSwIji+jzSu4
      /MGn8NPX/w4SrAjNRBHymlGWTFh568fYrjfx8Y++gDtv/gQ2TxicewyslMX1u3E89eQFmK1j
      MBp4zEQj1ASiHB7dnxbDMB3H1f931YBapbuMdC7deWQe/+8Xv8Lzz1zeVc6AYQAoCmQFYNnO
      8x4bBVBH6yxLrTLK4DhWX9sx0UXKCHGsFIBCGTRUASgjDVUAykhDFYAy0nBHLUA3uS/8IRRR
      7DhmmpmB+9VXjkgiyqPMsVOA5ju/gsLzHceUFjlehEJ5v1ATiDLSUAWgjDRUASgjzZEogCKL
      uHb1F7gT2ziKy1MoGkcyCK4kbiGveCHd/TVmZqdhfUA1lMpliNsp3XEuHILB6TxgKSmjwJEo
      AGt2opS8CZZVwCgKRFGCoiiQZRmkaCBZUSAIAhrvvIPy//5TXbn3d34blic+cPiCUx45jkQB
      +HodJocLbLsMUQYsRk5TAAbQKQHLMDAajTAYDMTzGQwGGI3GQ5eb8uhxJAowFj2LFycaYDkT
      zMbumHAKZXAciQIwDAOrzX4Ul6ZQOqBuUMpIc+xCId4P1e9+D2I+33GMtVjgfuVlKDwPMZPV
      1WFdThhcrkGJSDlmPFIKUP/JT8GvrXUcYz0euF95GXwigfR//q+6Ou5/9Crcr7w8KBEpxwxq
      AlFGGqoAlJGGKgBlpKEKQBlpqAJQRpqeCpDP5/HDH/5wgKJQKIOnpxu01WohmUwil8vB4/GA
      4x4pj6kOMZeDXK3qjhunpwGWhbC+ritj7XZwweAApKMcFnt+1d/85jfxyiuvwOFwwGQyDUKm
      I6H89b9BndDjhb/0RbAWC1K//190ZbanL8P/739nANJRDosHGgPk83l87WtfO2xZKJSB07MH
      mJiYwMsvvwxFUWA0GhGJRAYp11DRunMHzXd+pTvu+PCLMI6PH4FElAelpwIYDIaO+PtHfQzw
      fuBj91D99v/VHbdeuADj+Dhyf/AFXYwSFwjA/9v/Du21NRT//C90dV2f+ARsT19G8/oNSJmM
      rtz+4gtQeB6Nn/xUV8aFw7CcPvU+7mh06PtVK4qCX//61zh37hzeffddXLx4kZDTnbIX/Hoc
      YqpzKafcaAAAlEYT/Mqqro5UKgEAaq+/juZbV3Xl9t94HkqzicKf/pmuzPHiC7CcPoXGm2+h
      cVVf1/PZz4IL+B/qXh41+irAysoKvvGNb+D69euYnJwclEyUA4Lf2EDjpz/THXd98pNAwI/t
      3/t9yNVaR5lpLorAf/wPgxLxyOmrAAsLC3j22WeRz+dhtVoHJRNlQEiFAuRKp+tX8o0BAMRs
      Du3bt3V1zCdPght/dFy/e5pApVIJL730El1zO2Lwa2vI//Gf6I77/s1vgRsPIvPf/wdaN291
      lLFWK6b+7EuQeZ44b2Lwjh0706uvAjAMA5/PhzfeeANTU1N44oknBiUX5ZijyDIgy53HJAkA
      IGVzSP+313R1nJ/6TXg//znIzaYu/ysAsE4nGJaFVC7ryhiOA2s/+GW0e7p2DAYDWq0WUil9
      Ph4K5WEo/dVfo/bd7+mOh/7nF8AFAtj6rX8L3FcmFcuFCwj+3n9C6+ZN3bgFRiNsH7j0ULLs
      qQCRSARutxvXr19/qAtQKAdJ6a/+GvzdlY5jrNMJ25e+CLFQQOVvv62rY338cVgvXiCeb08F
      aLfbSCQSeP755x9OYgKKooBvtyApDKxWC6hjlXIQyJUqsWdh7XZYL15A+W++icabb3WW9Tuh
      oih499134fV68dZbb/X76b7g61n8/Q9+jpW1zQM7J4WyF1I+DyEe7/jrqwAMw8ButyOXy8Hh
      cByYILXtOBqigEwyAV5SIIqi9tcvNaLUZReqSJIEQRDI26yqdbt2ndHqyjIEQYCsyMRyURAg
      CAKxTJZ3zi33kEuUxB25SHelAIIgQOwll3pPMlkuQRQh9Kgrq/fUSy7x/j2RxLp/T2LPZy32
      ftbof0/y/XuSe9yTKIo9n7WiyPefx8Fet68JtLS0hE9+8pOo1WpYJ7i1HhaTw4mpuQAclRgq
      bRkB28GkRiTOUt+vK/cI5TCwLIxGI1iG3BZwRiPYHi5glt05N9tDLs7A7chFMvIYwGg0Quol
      l3pPPTYON3Jcz3ti1XvqJRdn3HFrk8S6f09Cz2fN9X7W2Lkn9JLr/j312gyd4zhwPZ41w7D3
      n0fv6yoPcd2+PcDy8jLq9TpYlsWdO3f6/XRfOCZOwqvkwPhmEbCRHzSFMgj69gAf+chH8J3v
      fAcA8Pzzzx9YHBDDMDjzGJ1ToBw9fRVgbGwMn/3sZwclC4UycPoqgCzL+PrXvw5BEDA7O4tn
      nnmGRoNSHin2nAcQRRHnz5+Hx+MZhDwUykDZ0w168eJFrKysoN1uD0omCmVg7DkRtrS0hKmp
      KSwtLQ1KJgplYOzZA1gsFsRiMdgPIRKPQjlq+irA2toaZmZm4PF4MDU1NSiZKJSB0XcQHAwG
      wbIspqenUalUBiUThTIw+ipAJpPBV77yFZw9exbNZhPRaHRQclEoA6GvAszOzuJTn/oU7HY7
      dYNSHkn6KgDLsrh58yYajQYCgQA+85nPDEouCmUg7OkFWlxcRDgc7hn+SqEMM317gLfffhvl
      cpmmRqQ8svTtARYXF7WBr99/vNJZUCgHQV8FcDqduHr1KmZmZvCzn+kzjFEow86eY4CxsTEs
      LS0hSDeCoDyC9FWAmzdvwmazAQAsFstABKJQBknfQfDU1BQYhkEgEMD8/PygZKJQBkbfHsDl
      csHj8eDtt9/Gl7/85UHJRKEMjL49wJtvvolkMolz585hcXFxUDJRKAOjrwJcuXJlUHJQKEdC
      XxOo3W7j+9//PsrlMr773e8e6GywLIlotloHdj4K5WHo2wMkk0ncuHED7XYbs7OzB3hZBcvX
      folYnsEn/sGzB3heCmV/7BkNeuLECZTLZZQJOdsflnp+G5s1A7xmFrKiQJYkLTPccUyNyPTI
      knbUqRHl95EakTmmqRGV45QaUVEUNJtNPPfccwe6JLLeaMNlYRG/l8Dj/AdgN9PUiD3viaZG
      3JHrkFIj7rlDzKlTp3Dt2jVMT09jbGys388fmGAkimBkFqcXT8FuptuvUo6OPbNC3L17F/V6
      Hclk8oAvzcDtcR/wOSmU/bFnLJDZbMby8vKg5KFQBkpfBXjzzTehKAqeeOIJBAKBQclEoQyM
      vgpw5swZ1Go1PPnkkwe6PwCFclzYcz3AqVOn8MYbbxzwPACFcjzoqwAAkMvloCgK6vX6IOSh
      UAbKnl6gYrGIK1euIJPJDEomCmVg7OkFunLlCpLJJC5cIO+zSqEMM31nob7zne+gUCigVqvh
      sccew4kTJwYlF4UyEPr2APl8HqFQCNls9sBmgSmU40TfHuCll15CpVJBNBql6dEpjyR9FcDn
      88Hn80GWZTQajUHJRKEMjD29QMr9cOJYLDYomSiUgbFnKOa3vvUt1Ot11Go1GAwGnD17dhBy
      USgDYc8eoN1u48knn8TU1BRWVlYGJReFMhD2XA9w+vRpbG9v49lnn+254oZCGVb2DIVgWRbr
      6+v40Y9+BJ/PNwiZKJSBsacCpFIpuFwuavtTHkn2VID5+XkIgoDt7e1ByEOhDJS+Y4CvfvWr
      2mr6V199dVAyUSgDo28P8OlPfxqPP/44GIbBz3/+80HJRKEMjL49gNPpxKVLl3Dp0iW6Rxjl
      keSBc5L0ygNDoQwzew6CDwNZ4vGrt36Ba7dXQTsWylFyNAogtDF98jxKG2toUgWgHCFHkpbN
      YLTg9ps/hH/+LKzs/ZyQNDco+Z5obtAduQ4pN+iR9ADV1DKWEzXUCinworKTE/L+H2mkcRC5
      QQ3vIzeo8RBzg3LvIzeo8RBzg3LvIzdor3t6kNygvZ71g+QGfZjrHkkP4Aydxb/4PJ1Zphw9
      R6IA1KNEOS4ciQlEoRwXqAJQRhqqAJSRhioAZaShCkAZaagCUEYaqgCUkYYqAGWkoQpAGWmo
      AlBGGqoAlJGGKgBlpKEKQBlpqAJQRhqqAJSRhioAZaShCkAZaagCUEaaI8oLJOCtn/8YN27H
      iFkgKJRBcSQKUEnchil0Dq3MJprk7BsUykA4EgWQeBE2hw1mowFtiZwjhkIZBEeiAK7QNO78
      8gfYrolwGekwhHJ0HElaFKPdj098/KNgWBY98hxRKAPhSBQAQEeWNzU1oqIocHzus4AkQ1EU
      LX+QweeDIAgwzM7C+U//CQB0lLPhEARBgO1jH4W5XO4oZ8xmCIIAuN3EutzCCQiCAPPTT4Gd
      CuvKJYMBsiyT605MQBAEcIuLxHIE/BAEAfZP/ybkegPv5SJkwDrsO3IFA8S6hoUFCIIAy3PP
      gVtc1JWLkgTFaCTWNUamIAgCjI+dg9Nq1ZUrLicEQYDj1Veh8HzndT0eCIIAZipMftYz0xAE
      AdYXX4Tp4sXOZ80ZdtIX2u3EuqZoFIIgwPSBS3D6/bpy2WKBIAhwfv5zwP3vQXvWAT9EUYTt
      Ix+B+amnOq9rMu1c1+UkP48TO7scmZ56Es7Jyc66yjFJ/K/mBlUVQxVLe+Gi2JH6ruND6yon
      1TUYDO99AH3qdpfL8o4yHpZcD1tXkiQwDKOl+9vPPSmKAkmSDk0ulmUP5Vnv5qDe8ZH1ACR2
      C9x90/v5//3UPcxzj8I9dXOQcjzsefv9f2x6gN3Isozl5WUAgNvtRigU0spqtRparRYymQwM
      BgPm5uZ0CVVv3boFhmF0dQGg1WphZWUFiqJgbm4ODoejozyRSCCVSiEQCGBmZqajjOd53L59
      GyaTCZOTk/B4PFpZuVyGKIpIp9PgOA5zc3O6ZK03btwAx3Hwer2YmJjoKCuVStjY2IDJZMLs
      7CwsFgvx2SSTSd09NZtNrKyswGg0IhwOw+VyEeumUikEg8GOJLGKouD69eswmUzw+/0IBAId
      dXK5HLa3t2EymRCNRmEymbSyeDyOer0OYGc3oUgk0lG3VqshFovBaDRienoadru9o3x9fR31
      eh0WiwXz8/PacVEUsbq6ikqlAqvVCrfbjenp6Y666jt2uVwIh8MdZdVqFffu3YPRaMTMzAxs
      NltHeSwWQ6vVgsViOV49gIokSZBlGa1WS5cR2uFwgOM4ZDKZnvVlWcb8/Dwxm3S5XEYwGITZ
      bEY+n9cpQLVaBcdxKBaLHQqgKAoajQbMZjNmZmZ0Sud2u7WPoR+zs7NEudrtNgKBADweT8dH
      1o3T6dQdkyQJdrsdoVCoZ3ZlYOfZdbeEqskxOztLzK7cbrcRDAbhcrl05TMzM8jn80gmk8TU
      46Iowu12IxgMEu+J53lMT0/rZFYbkHv37mF2dhb37t3T1e33jgVBgMfjQSAQ6HtdjuOOXyiE
      oijgeR5+vx8Oh0On+QCwtbWF2dlZnDx5kvjCx8bGEIvFkM1mdWXBYBDFYhEbGxu6lgMAwuEw
      JEnStYSyLKNcLoPjOKytraFWq+nqJpNJzM/PY3Fxkfgxud1ubGxsoFQq6co8Hg8ymQzi8Th4
      nu+47vb2dsexbiwWCxRFQSwWeyAl3A1zP318KpUi3tPY2BgKhQLW19d3Bu1dbG9vw2KxoNls
      6srsdjt4nkcsFiOWBwIBbG5uYnNzU1dmMpngdDpx7do1zM7O6sp9Ph9isRixIXQ6nWi1WlpL
      300wGEQ8HkcikTh+CiDLMkqlEhqNBliW1b34UqmEWq2G5eVl3Llzh/hSMpkMyuUycrmcriyd
      TgPYebGkDTcMBgNmZma03+0+HggEYDab0W63icrl8Xhw584dLC8vEzdrYBgGDMMglUrpysrl
      MiRJgsPh6FAQhmHgdDqRSCRw9+5d8DyvO3e73UapVEKhUEClUtGdW8V63yPUTa1Wg9vt1pkK
      wM7zzuVyqNVqaLfbuvKJiQlYrVaivd5oNFAoFFAqlVCtVnXl2WwW+XwexWJRVyYIAvL5PCYn
      J4l7VPd7x7VaDYVCAeVymajU2WwWxWIRxWLx+CmAwWDAxMQE6vU6FEVB+b5bU8Xj8WBqagrh
      cBi1Wo2oAB6PBx6Ph9gt22w2VCoV1Go1ogLU63Vks1niDigmkwmFQgHT09NEO5tlWdRqNdRq
      NWJ9WZY1T0c3FosFrVYLW1tbHbYywzBwOBzweDyQJAkbGxtIp9O6c4RCIVjuuxF7kU6ne/aK
      6XSa+LGwLKuZgiSlrlarCIfDPXd9iUQiMJvNxB7MYrFgcnKy584uoiiiWq0SlcvtdsPr9fbc
      qSYSicBkMvW87sTExI5niFj7iFE/ErvdTuw6G40GkskkIpGI7oVXq1U4nU5wHKdr0dSXNDU1
      BQBEM0V1p5nNZmxtbSEUCmkvoFAowGazIZvNYvK+P3k35XIZPp8PsiyD5/kO86xer8Nms4Hj
      OLhcLrTbbZjNZq2c4zicOXMGm5ubRLm2trZw9uzOpiLdO52wLAubzYYLFy4QzatkMolisQiT
      ydQx2AR2TM58Pg+j0Yh8Pg+fz6eVtdtt2Gw2iKKIUCikU/pyuYxEIoFms4lgMKi7LsdxcDgc
      OH/+PLFncrvdSCQSOHHiBLHu+Pg4qtUq8dxGoxGSJGFsbExX5nQ6kU6niQ6BarUKr9eLarWK
      ubm549cDADs37/f7Ua/XiR9aMBgEx3Ewm826j1zVerPZTPSkqNv77Pah76ZUKiESiUCWZYyP
      j2vHZVnWPEt+v5947mAwiJmZGTidzo6PG9jp2TiOA8MwMBgMum49n89jY2MDXq8X+Xxed26z
      2Yw7d+5gY2NDV6YoCpLJJFKpFNFMqdfrCIfDmJqaIroDzWYzstmszkRSZbZYLMQW3u12a54w
      kq2tjl+2t7eJPVMqlQLDMMReied5VKtVRCIR4hghl8vB5/MRnQL5fB4cx6HdbutMWYZhIIqi
      9v6PpQKIoohisQhZlrG1taUrV82EZrOpsy3VD79QKOi8ByzLotFooFgsolwuE1vLUCiE9fV1
      zeux+4NhWRaCIOjMMlXmpaUlxONxpNNp3Qu3WCyIx+OIxWLI5XK6gV0oFEIgEADP8x2Kp2K1
      WlGtVomDXIZh4PV6IQgCsbUMBAIoFArI5XI6k0FRFHg8HnzoQx/SKQfHcUin0yiVSsjn88Tn
      xfM8nE4nsUEwmUzwer2w2Ww6b5t6z6IodriTVdQ9vWKxmM4hAewoXD6fJ44tAoEAZFlGrVbT
      ubLb7TZu3ryJdruNtbW146kABoMBBoMBuVyO2MWFw2HU63U0Gg3iw1MHlNFoVFfGsqzWSt69
      e1f3oVYqFVgsFl2rxLIs7HY7CoUCLBaLbiBrMBiwsLCAqakpRCIR4gfhcrl62q1bW1toNBqQ
      JEnXagE7rbjH4yHay61WC6Iowmw2E8c1pVIJsVgM8Xhc15Jns1ncvn0bN2/eJPaIfr8ftVoN
      kUiEOEiORqMds7e7aTQaaDQaAHbMx92kUinN3COZufF4HC6XC9FolPgNGI1GtNtt4vOo1Wqo
      1+vaGGI3Pp9P6+GP7TyAGhd05coV3UsplUq4efMmXC4XyuUyms2mboKFYRgoioJEIoHF+3E0
      wE6XbDQaMTExAUVREIlEdPZ2s9lEu90mKhbLspAkCZVKBW63W3fNer2OYrEInufhcDg0uRRF
      QTabRfR+LAzJxBkfH8fKygrC4bDOdy3LMqanp9FqtYimhs1mQyKRwMmTJ4njB4ZhMDMzQxzc
      B4NBKIqCarVKVExBELTJR5LLOZVKQZIkNBoNeL3ejjKPx4NKpYJCoYCFhYWOMqPRiEAgQDR/
      AGBzc1MbB0aj0Y6xCbDzIU9PT+t6LZ7nsbq6CoZhtAar+106nU7E43E4nc7j2QOodtry8rKu
      5fB4PJidnYXL5YLD4SC2AJOTk5ibm9Nan25U29ZkMukeoH9XkFY3qVQKFosFJ0+e1AbSu1E/
      gFAopPuI1Vad4ziiAjQaDdRqNVSrVZ3c5XIZ1WoV2WxW18LzPA+e58FxHOLxOPGeHQ4HotEo
      Tpw4oWtQFEVBPB6HJElEc6LVaoFlWWQyGeIzsVqtqFQqROUol8toNBowGo26MY/P54Pdbofd
      bie6Zz/4wQ/iueeew6VLl4g9QKVSwbVr15BMJjuOq84Ej8ejTfB1k06nceHCBSwsLBy/HkCd
      0Dl37hxEUcTm5qZO+ycmJrC+vt7Ttkwmk1oLvxue5zsGkQ6HQ/fiMpmMNoDqplqtYmxsDKVS
      SVMUlXK5DFmWIUkS8vl8R6sjyzICgQBu3LgBAETTTJZlcByHXC6nK6/VakgkEnC5XNogXUUU
      Rbz77rtaiAVpsFqpVCCKIrLZrO5jUnsHRVGIJo7f70er1QLHcbqeVpXb7XbrBv3ATiuvNlAk
      t/G9e/e0Gdnuc1arVe1erFarzqT0+Xyo1Wo604tlWVQqFZhMJnAch2QyqWus7HY7bt26BavV
      evwUANh5Yc1mU/uoutna2kImk4HNZsPY2JjOE1CtVjE9Pa17oRzHwefzoVAoEFszRVEQDoch
      CAJxcobneWxvb0OWZbAs2/Exud1uFItFTE9P6waLiqJobk+PxwOHw6GLVjQajZqZ0N0rRSIR
      lMtlnDp1Crdu3eoos9lsePrppyGKIrE3lGUZkUgE2WwWkUhE98EoioJcLgeDwUA07TY3N2Ey
      mXpOdrXbbZw5c0Z3XL12MBiE1+vVNTTqzPP6+jqsVqvOFaqOa9Rn0406K5/P5zucBupciiRJ
      sFgsugF0oVBArVbTzGTDa6+99hpR+iOCYRgEAgFsbGyA4ziinScIAmw2G2q1Gvx+v87c2P2h
      7m551JBrp9NJtLWTySQSiQQqlQoEQdAFrE1OTmJychKhUEjXbTebTbRaLbz99tuw2+3w+Xzv
      xdCzLDwejzZu2dra2ln7cL/3kmUZS0tLqFarKJVKcLvduhbP6XTi6tWrxKCylZUVZDIZbG1t
      IRqNdpg5pVIJ7XYb+XwerVYLXq9X9zxrtRpyuRzC4TBxPLWxsaHF9ZDGTGqoRncrzzAMlpaW
      tPmE3c+7XC5jcXFRm/TcrXgMw2jzLZVKBTzP63oulmWRz+cRDoc73gXLsrBYLDDc3x3e7/d3
      yGy1WhEMBhEMBjE2NnY8xwAcx2FhYQHhcFj3stTp73q9DrvdTux6K5UKOI7T2cOiKGJrawvx
      eBzValVnT5dKJUSjUW2Bzn5QY+yj0SjMZjOx/vLyMmq1GkwmU4e7kmVZXLhwAU6ns6dNvL6+
      jvn5eaKHSJ2jMJlMuh7T6/WiWCxCkqSe96S6QkkDaI7jtI+muzyfz4Nl2Z6z2+qsvqIousZG
      dWGryknC5XJhbGysY+CvKArW1tZgNBrRaDR0bnJ1nsXpdGJiYqJvcCAwhHmBnE6nForgdDqJ
      EyxGo5EYI8JxHIxGI8xmM3K5nK5uKBRCuVyG1+vVjTv2wmazged5JJNJ5PN5ojliNBqRzWZ1
      8wvAztiD53kwDEM0v3odB4AzZ87gsccew/z8PHHqXxAEbeKQhBp1SzI37XY7bDYbbty4gWvX
      rnX8Ru3l1BnqblQ39sLCAuLxeEfZ3NycFmTX7atX77fRaCCdThPNI4vFgosXL+pkVoP73nnn
      HcTjceJYruP3x3E9wF6sra3BbrcjnU6j2Wzi8uXL2geVTqeRyWQ0JdlrwcZBkkwmtbHL6dOn
      tZZcURTNTFAUBW63W9elqz7zra0tzM3N6cY1pVIJ6XQagUCA6BXphRo8V6/XtXHL7meiumhX
      VlYQCoU6BuBqYKIgCNoA22w2a/XL5TLeeecdLSCue/AuyzJWVlYgCELPyN1etNttxGIxzMzM
      YHNzEydPnux4VrFYDJIkEZ+VOgMtSRLGx8d7Kj4whD0AsOOZUE2B7plP1YvSy213WPA8j0Kh
      AKvVirNnz+pseK/XC7vdDlEUiTHqpVIJNpsNc3NzutledU5jenqaODPeD3WyqF6vEyecgB2T
      MRqN6sJOGo2GNgO8sbHRsdQR2Bn4qx6W7o9blmW8/vrrWlDjXi1xNxzHQZZlrK2t6QbmNpsN
      586dw+OPP04MhcjlcloUaq95BpWhVABgZ5rdbrcjEol0vBSr1arZ+KQw2sMimUwiGo2iWCx2
      tJLATrdstVqxtbUFn8+nMweAnfDs1dVVxONx3Qvf2tpCq9XSVjntB6fTiVwup7ppiT4AAAbS
      SURBVE3wkUIhSqUS6vW6TvEcDgfGx8chCALa7TZxllmSJJw5c0bnamQYBpcvX4bb7QbLsvtu
      jDKZDObm5rReZz84HA5t7NFrZZ3KsXSD7kWhUMD4+PiOH7drYDY3N3ckMjkcDqyurqLZbOL2
      7ds7kyxdspnNZqRSKZ2nhed5bbUZKUhvamoKzWYToij2jOnvhzrH0K2YsiwjnU5r5+3lbvT5
      fGg2m2g2m7rr22w2XL16FePj47rFS9VqVQtM3I/caoRqLpfD4uIi1tfXdbPMvRBFEfl8HpFI
      RLe2gsRQKoDf79f806TliUclU/fkWDdWqxU8z+s+BpZlYTabtbW+/ZYmPsy9iqJIXB6orjWY
      mpqC0+nUmSmKosBsNqNarWrx9900m00EAgGi2ba5uQmn06ktbyVNWpJgGAZjY2PafEu3O3ov
      1AYym83u2XsMpQK0Wi3kcjlYLJY918EeJ+r1uhbkt3vyRhAErSVmWZY4YSUIwk74LiFgbS/8
      fj8ymQzMZjPsdvt7GREYRksSoCrf7omjUqmESqWCRqOB2dlZokNBTc/SbR6xLIsrV67sW1aV
      3Qv/92MCcRyHmZkZxGIxuN1uYmRth5wPLeER0mw2EQqF4HQ6+66VPW643W5IkqSLT1EzHxQK
      BZhMJmK4tbrIo5crtB+qJ4gU8Ob1ejE/P6+ttNuNLMuaKaKGEO9GncwaGxvbdyt9mHg8Hpw6
      dYq4lqSboVMANWZF1ezuAeNxJp1O69KSqKhrDRKJRM+4mmq1SgxY24t6va59oN0KYDAYYLVa
      IQiCbv2Ez+fD5cuX8cILL+D8+fM6uRKJhLbqi7TOeRgYOhMok8mgUqkgnU5jYmICtVqN6Ao7
      bjSbTUQiEc2b0j0OkCQJk5OTcLlcRKVuNpvweDw9XZn9CAQCWF1dJQ7MgZ3BKmmAuxeTk5O4
      fv26Fr4yjAxdD6Cu9OF5HqVSieiaO24oioJ79+4hEAggHA7rzJhms4lsNotwOIxKpaJr5Vut
      FqLRKKampvb9oRUKBaTTaczNzREXxOyGtAaiH2NjYzh//jwee+yxBzI3jiND1wNMTEx0eFtI
      LdpxQ50HuHnzJhRF0XlTBEHQIlTVwLHdvVosFsPp06dhNpsRj8eJaxF6kUql4PF4tHUDau5O
      FUVR0Gq1cOrUKdy9e3ffISCDnGk/DIYyFGIYUSNRAehmVHeXkcozmQzS6TSMRqO29PJBabVa
      Wo/SKxQimUwim81ifn5+KMzJg+T4N5+PCGqU4n7LZFlGpVKB3W5HMBgkLkrph8Vi0WZDu81F
      RVFw9+5dBAIBLTvDqCnA0I0BRg2WZXHixAlMTk4im81idXUVqVTqoeKcSImxms0m1tbWsLCw
      sO94nUcBagINCevr6ygWi/B4PNqa4we1vxOJBMrlspYYa/cYQBAELVlAr0C9RxlqAg0JjUZD
      W7ZIWlPcj3a7jdnZWaLS7J5FH7WPH6Am0NAwMzMDs9n8UP52NQJ1fX19oCHiwwBVgCEhHo9D
      FEXiSre9KBQKSKVSyOVyfecBRhFqAg0J6tzBw8x7qDu0kNYTjzq0BxgSqtUqNjY2HioYTl3O
      ODc319PdOqpQBRgiZFnet6tSURRsbW1pIRi9cvGPKlQBhgR177D9Rr/m83k0m01tAPww6wke
      ZegYYEjIZrM4f/78vmNv/H4/WJbF9vY2MbHuqEObgyGh0WhgdXVVlwz2QXC5XJibmyMmzhp1
      aA8wJJjNZhgMhn2bMDzPo16vo1QqaVvMUt6D9gBDgrqpw37XP8RiMW2jCUEQ6CC4C9ocDAlb
      W1uQZbnvLpAkJicnce3aNRiNxp47uYwyVAGGhMnJSbTbbeKC+V4oioJms4kLFy5og2d1jwBq
      Cu1An8KQoO6ITtrEoh8OhwO3bt3SYoBCoRDtBXZBFWBIEARh3zmQ1MRX586dO0TJhhuqAEPC
      xMQEJEkCz/P7ngzr3iibToa9B30SQ0Cz2cTdu3fRbrcfah6gXq8jFAoRNxwZdeiKsCFAFEVt
      yye/37/vdcGlUgnFYhFGo5EqQRe0BxgCOI7T8gVtbm7uq26hUIAkSVp2Z9redUIVYEhwOBwo
      FAr7br29Xi+azSZOnDgBi8VCQyG6oIPgIaBYLMJqtWJycnLf6QtFUcS9e/e0jQPpALgTqgBD
      gLqn8PT09L4/YKPRiFOnTmFtbW3fO62MArQ5GAJsNhva7TZWVlZ0GZwfhFKpBI/HA5vNNhS5
      VAcJVYAhoNVqoVarAdj/TDAATE9Pa8F0dBa4E2oCDQFms1nbgHu/qC2+GvvTnRx31KEKMAQ8
      zMZ4Ko1GQ9stk2VZ2gN08f8BWpy7Nt2brqAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Local Rodent Population Vs Local Restaurants' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Restaurant Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Restaurant Dashboard 2' width='192'>
      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
      rm0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Restaurant List by Violation Count' width='192'>
      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
      zf8DES6+rJztorkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Restaurants By Zip' width='192'>
      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
    </thumbnail>
    <thumbnail height='24' name='Sheet 6' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABSElEQVRYhe2XQYrCQBBFf4VEBBcS117BQ3gHQ4vS6YO5cp2reAz3xl1VNt+FzIDMgJvp
      qYB5y6Khfj+6Kx0hSXwwhXcAbyYB3gG8mQR4B/BmEuAdwJvy3YLL5fIfOdyQ6SH04UwCvAMA
      gKrCzH7UzezX+l/iLkBVcTgcEGN82ayZIcaI4/GYVYK7ABFBWZboug5t20JVAQApJXRdh8Vi
      ARHJF4AjQFUZQqCIcLfb8Xa7UUSYUuIwDFl7j0IA+ZTQNA1FhOv1mjFGmln2vqN6B/R9j81m
      g+v1ir7vsVwus/d0nwHAc+Dt93usVitst1vc73fUdY0QQvavgPsV+Dr6AJhS+j72IQQCYNM0
      VNVs/d/+C+SGJMwMbdvidDqhqioAwPl8BkkMwwBmvKWjmAGqiqIoMJvNXupmBpKYz+fZeo9C
      gCejGIKePABbI0ZQ+Iv/TgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      dywBuXyKAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='KPI/01.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbND6kK1KI3WvBNwGJWBkOwvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0JfVVhiwFi9N
        l8DfP39B0NQJfCILd9EzsWm+HJV4PH5dVcdtNa/h3WdwO8RD27fClGBod52OhwSWtVyL2O7H
        YwTBCWK2CUzHC/B98QCYVAIQx59VLsaAUgcHhFL8CXgu9pBrF53hICY09kJwHtCqqfo5XvLi
        rGWtBG6M6WOEDoeDc/AdqV4Qns/now/Pm1nETL92phxmnb6ZPHChK9X0ppEdGO1yLfcmgXBK
        oe0Xi4vjTjunhJxKtmgoe4QdF7UtmtDaLMXzdbRevfYCLYWWe1UJC795I3WdOgJtNPE31dhP
        KXdcVvtWdOaeJ9DeOHVTx0FKOeaEpnZyjnGUZZR5uCAkz33ippOP97hF5qeMUN/SCca5H0Vh
        lBd5nnHGipBduPedNmVXiYnb/ON6V7kxU6I0Uq2k3E0V8LCRRuqN7AF7pODDU9PV8qA/jt9z
        jlSo5oeoCyVbcHrfuHlHP2Mpi1KS04CT3Mc49SI3wn7AgnAeuNTq/+XWb/Le78fAA1aQgLmY
        hxHPMc5CgvMi5VGKvZzhACIbCfqvUqYjW37j9lL31rh0juhsuyjbF38A6YkGSkr/HRQAAAIU
        SURBVFiF7dhNqA1RHADw3/UoIilKilBI+U6SjWwoio1EFha+yuplQWIlFhYWYmWrbJWs3oIs
        ZSdZWPgo5dVb+Oh5Pc+77ljMvXW7ZuacuR/mLpw6u/P/n9/M/PufmaklSWKYx5yqAaHxH9jz
        SJJEhXW4DLewpuXonFUDHyPBOHYOG/B8E9eakzg0LMAN+NEBTDCLs1UD5+FlBq59XqsSeDOA
        S/C0KuBe1AO4KWysArgEHwO4BBeqqsGHEbgnqFUBPBmBG8fyKtrManwN4Bo4WEWjHsHzAC7B
        vbJH3Qhu4DJqPQCvRuDeYEFZ4O22BHe7xO3CrwBuBtvzcHnAExmJrpfELcTbAC7BJeTisoDb
        pI0yK9nFEsD7Ebhnmu+jscDFeF+QsIHTEbgjEbgvWNUKiAXui0hcx9EC3ApMROQ53h4UC1wk
        rm5mcCADV8NYRPyDzsAyNbgS7yI2mcKejn1GI+I+SEupayCsxaeIzb5hazNmM6YD6+sZF9UV
        ENZLz8YQcgKb8CpibW6r6gbYuisxBT8bseYF5vYbCDukjzIEKJqTWJe3Qa9A2I3vPQDPFCXv
        B5D0VT3vhCmaj0KJ+wWE/fhZAvcZS/8lEA5LG3UI15DdzAcOhGPCX2Z3yiTsNxBO4XcO7jXm
        Vw2Ec9JH2Y6bxpayiQYF5O/zd7SbJIMEwpUmbkyX3y9FwFqPuIGPof8FPPTAP7paeKi9UDuN
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/02.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbKP1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0BXlVhqwli91
        m8DfP39BUFcJfCILd9Exuam/HLV8PH5dlcdtOa/g3WdwO8RD0zXSFGBodm0fDwksKrWWsd2P
        xwiCE8RsE5iOF+D74gEwpSUgjj8rXYwBpQ4OCKX4E/Bc7CHXLjrDQUxo7IXgPKBV09VzvOT5
        WctaCdwY08UIHQ4H5+A7Sr8gPJ/PRx+eN7OIWf/ammKYtf3N5IHLvtR1Z2rVgtEu1mpvEgin
        FJpusbg4bnvnlJBTqgYNRYew46KmQRO6N0v5fB3dr147iZayV3tdSgu/eSN1nToCbTTxN13b
        Tyl2XJX7RrbmnifQ3jhVXcVBSjnmhKZ2co5xlGWUeTgnRAifuOnk4z1unhFMuZdbOsFY+FEU
        RiIXIuOM5SG7cO/b3hRtKSdu/Y8rrnJjpmVhlF4ptZsq4GGjjOo3qgPskYIPT3VbqUP/cfye
        c6RS1z9klWvVgNP7xvU7+hlLWZQSQQNOhI9x6kVuhP2ABeE8cKnV/8ut3uS934+BBywnAXMx
        DyMuMM5CgkWe8ijFnmA4gMhGgv6rlOnIlt+4vdS9NS6dI1vbLtr2xR/wLwZQllJg0QAAASdJ
        REFUWIXtWEtKA1EQrHKhS71HPI5MziOeKHdJsvESxv/ESLkwy2mk6Xr4yKSgGagHRTH9eR9K
        Qs+4+G8Df+H0DZJckdRErBwGWa1Bkk8ArieWdpJuSuLwpPgr4A8GbYvB94B/M2hbDH4G/GjQ
        thiMjETGU3AYfA34blL8HfDdNMku4J8N2k3/YMSn0LIGXwzaFoP7JJ+Cw+BHkk+h5U7SjcFo
        L+4mxVEzRM2TwiwGdTSQuxnU5/NgFefzYBVRKqPUp1C+1bXG6V/cW2MeBkkOJNckx+N3cOgC
        ACSVAsAdAE3EUNWWZHmbWQNYTCxtJN2WxOF5PBoBXE4s7SVdlcThqcHHJJ+Cw+B9wD8YtOtN
        ciyRJYAtfo/5WwBLh66lSVpjHoO6JX4AZswqmojMTWIAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/03.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGMCG
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfiILZ9Exsam/HJV4PH5dlcdtOa/w3Wd0O0RD0zVCF2hodm0fDTEuKrkWkdmP
        xzZGJ4jexjgZL9D3xQNiUglELG9WOgCIUgt8Qil8Qq4Dru2YRWfgR4RGboDOAxs1VT1HS56f
        tYwV443WXWTbh8PBOniWVC82zOfz0Yfrzgxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGOMp
        haZbLC6O2946JWSVsrGHorPBcuymsSd0r5fi+Tq6X712wl6KXu5VKQz85o3UdeoINNFE31Rt
        PqXYcVnuG9Hqex5jc2NVdRX5CeXACU3M5BwgTFPKXMgJyTKPOMnk4z1unhKg3AsMnQBkXhgG
        YZZnWcoZywN24d63vS7aUkzc+h+XXuVGTIlCS7WScjdVwMNGatlvZIfYI0Ufnuq2kof+4/g9
        50iFqn+IKleyQaf3jep39FOWsDAhGfU5yTyAxA2dEDyf+cHcd6jR/8ut3uS934+B+ywnPnOA
        ByHPANKAQJYnPEzAzRj42DaR2P9VynRkym/cXureGJfOEa1pF2X64g/OuQY0x2QNAgAAAVlJ
        REFUWIXN2D1uwzAMBeDnDlk6BD1A7pcxSzPmRC1yjiQ9U9glLlxFEv+eEBPgZksfYJEUPIkI
        1hxvrwZosXogROQvizgAuAH4GLj9FsAFwH7p+GdqAA8A7gAEwM8g5BbA9bHHvYWsAZe4OdnI
        JW7OKrIE1nBsZA3XRJbAS+NFFrKHm/OrB7QsEEVa1v4GsNHO4AhkCNerYiYyjOsB54WzZzKF
        04BZZBpnAUaRZhyAJs4K9CJdOBbQg3ThmEAr0oVjAzPIKm4EMIJs4kYBPchzD6cBszfqyfDM
        DsB7eIfEJ9aq1dLMnwysIvHgVCS7zURwXSSzUWu4MwKzmzXqrBPCPbsZlwXv+HIhM8AIzo2M
        AjM4GrIFZOAoyBqQiUsjS+AIXApZAkfhXMge8DQQZ0UetTNYQ7JwGvLTWsVLJBvXQj7htD54
        GogrkVWciGByXLNeEqv/R7164C96sSVWO4KjCgAAAABJRU5ErkJggg==
      </shape>
      <shape name='KPI/04.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGMCG
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfiILZ9Exsam/HJV4PH5dlcdtOa/w3Wd0O0RD0zVCF2hodm0fDTEuKrkWkdmP
        xzZGJ4jexjgZL9D3xQNiUglELG9WOgCIUgt8Qil8Qq4Dru2YRWfgR4RGboDOAxs1VT1HS56f
        tYwV443WXWTbh8PBOniWVC82zOfz0Yfrzgxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGOMp
        haZbLC6O2946JWSVsrGHorPBcuymsSd0r5fi+Tq6X712wl6KXu5VKQz85o3UdeoINNFE31Rt
        PqXYcVnuG9Hqex5jc2NVdRX5CeXACU3M5BwgTFPKXMgJyTKPOMnk4z1ungYeJOlIJwCZF4ZB
        mOVZlnLG8oBduPdtr4u2FBO3/sd1rnIjpkShpVpJuZsq4GEjtew3skPskaIPT3VbyUP/cfye
        c6RC1T9ElSvZoNP7RvU7+ilLWJiQjPqcZB5A4oZOCJ7P/GDuO9To/+VWb/Le78fAfZYTnznA
        g5BnAGlAIMsTHibgZgx8bJtI7P8qZToy5TduL3VvjEvniNa0izJ98QfaxQY+qMi/ygAAAbRJ
        REFUWIXN2LFSwjAcx/FvPVZ1g1HAUR7BgjM+ATyKp7yTCiej+Aw4i5M6AiN4cWiqaY7UpoSk
        v7v/kOs1/dyV8k8SCSGoco5CA/5L5YG1sjdGUVQH+kAP6ABN4EReXgELYA7MgCnwaZor92cm
        hLAqIAYegQ0gCtZW3hPbGmxgbWBsgTLVWM7lDggMgKUDXFpLYOgECIwcwvQa7QUEbg6IS+u2
        FFC+1kPj0hpYAYEWyV+FL+AKaNkAXXyttjUuBAQuA+DSiosAHwIC73OBQB27DuG6NkBdNemL
        hT579GcHqUnDb3Rgz5/FmCt1oAM7/hzGXKgDHdj05zCmpQ504LFHiCkZgw6MPEIKRQeugyiy
        yRh04JtHiCkLdaADX/05jJmrAx347M9hzCwz0lpdg/CtrmFsdUKIL5ItYqhMpeEvO1YzMVVe
        bgVcsE5sVtRt/C/527abpqFH4LDstvPOA25UatupIKu7cdde99ohbI2row8FeY6br3si58Ip
        UIF2SY7Sthaob3lPlx3Je14kH2odeYB5zd8B5hlwKi8vgXeSxv8CPAEfprnyDKWBvlL5M+rK
        A38AJRJHiz0chcgAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/05.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XaxR9orzGQhq6Yqti987O873zn2Obd3Y19WW6HBWrw0
        XQx///wFQVPH8IkUdtEzsWm+HJV4PH5dVcdtFdbw7jO4HaOx7VuhSzC2u26IxhiWtVyLyOyn
        YwTBCaK3MUymC/C9eABMKgGI5S4qG2NAqYU9Qin+BBwbO8g2iy6wFxEaOT44D2jUVP0cLXl+
        1jJWDDda9xFCh8PBOriWVC8Ih2E4+XCchUEshtdOl+OiG25mD1wMlWp63cgOTHa5lnsdQzin
        0PZFcXHcDdYpIauSLRrLHmHLRm2LZvSgl+L5OnpYvfYCLcUg96oSBn7zRuo6dQKaaKJvqjGf
        Uu64rPat6PQ9j6G5seqmjryEcswJTczkHOMgTSlzcE5IlrnETmYf73HzNPQDxkJDJxhnbhD4
        QZZnWcoZy3124d53gy67Sszc5h83uMqNmBKllmol5W6ugIeN1HLYyB6wRwo+PDVdLQ/Dx+l7
        zpEK1fwQda5kC07vGzXv6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/l9u/Sbv/X4K3GM58ZiN
        uR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEHFJwGbpDfEecAAAGy
        SURBVFiFzdi/SwJhHMfx9yMiCIKChUMtLjU51ebm6OZWU20FQUKQ/Tk11VZTbW6OTrbU4lJb
        gYNgiOjT0D1y2Hnej+d57r7wAU/vzhcfzsN7hJSSNE8macCmST0w694QQsQ5Vx54dV7XgJ+g
        B/peZlLKZWLOJSCdtMMc6DasRhcwB3y4gJ/Oe6kBnrlwKudpAWaBoQdwyMo1nhTwxAOncpo0
        MAO8+QDfCXArMwk88sGpHCcFFMAgAHDg7Gsd2AqAU2klAeyHAPZtA5shcCpNm8BeBGDPFrAR
        AafSsAHsxgB2TQPrMXAqdZPAZw3AF1PAAw04lUMTwEeNwCfdwBqw0AhcOOfUBrzXiFN50AXc
        A+YGgHNgXwfw1gBO5S4usArMDAJnQNUPuOnfboeAzxURJwvc+O7h0+AOMMVceypTYDdKgx1C
        PNvGmBxwvfbTNQ1WgAnm21OZAJUwDV7xt9Zia/LOd/4fjwbLwBh77amMgXKQBttAIWITcaaA
        16LTSoNFYIT99lRGQNGvwQugFLuL6FNyDMsR7l+vEOIL2LKMWp1vKeW22hAeN+hUTerXqFMP
        /AVLJss8zee8nAAAAABJRU5ErkJggg==
      </shape>
      <shape name='KPI/06.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAiBpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XqxR9orzGQhqqYqti987O873zn2Obd3Y19WW6HBWrw0
        XQz/vP2GoKlj+EQKu+iZ2DTfjko8Hr+vquO2Cmt49xXcjtHY9q3QJRjbXTdEYwzLWq5FZPbT
        MYLgBNHbGCbTBfhZPAAmlQDEcheVjTGg1MIeoRR/AY6NHWSbRRfYiwiNHB+cBzRqqn6Oljw/
        axkrhhut+wihw+FgHVxLqheEwzCcfDjOwiAWw2uny3HRDTezBy6GSjW9bmQHJrtcy72OIZxT
        aPuiuDjuBuuUkFXJFo1lj7Blo7ZFM3rQS/F8HT2sXnuBlmKQe1UJA795J3WdOgFNNNEP1ZhP
        KXdcVvtWdPqex9DcWHVTR15COeaEJmZyjnGQppQ5OCcky1xiJ7OPj7h5mtqcucTQCcaZGwR+
        kOVZlnLGcp9duPfdoMuuEjO3OXFDP2DcvsqNmBKllmol5W6ugIeN1HLYyB6wRwo+PTVdLQ/D
        5+l7zpEK1fwSda5kC07vGzUf6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/j9u/S7v/X4K3GM5
        8ZiNuR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEXBVYGYV78fTkA
        AAEUSURBVFiFzdi7DsMgDAVQU/WXk6GdO/WP24EuNMoDsMHX4CshkSHWkUlIRIgxkufcZgO4
        uAfeEUVCCP/pg4gCEb1a7q8+ZjFG9djhYhrPVmCxNgi4xzUjTYEFXBPSDMjgxEgToBAnQsKB
        jTgWCQV24qpIGFCJKyIhQBAui1QDwbgLUgVMhdC4A7IbaIzbkF3AQTgW6QFXRXrBFZGecFnk
        +Y/6Q/PzPVxllnihed1bpS/JDOQFx20zI5FZnGSjHoEs4qSfOkvkSsQ0iQMaIldKUQMNkBsO
        BgQiDzgoEIC84OBABTKLMwF2IIs4M2ADsoozBQqQC4czB1aQItwo4BkpxnFAyAFmyrswVyXs
        OuAy7s+o3QN/HTxebpAd/IAAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/07.png'>
        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
        AElFTkSuQmCC
      </shape>
      <shape name='KPI/08.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbND6kK1KI3WvBNwGJWBkOwvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0JfVVhiwFi9N
        l8DfP39B0NQJfCILd9EzsWm+HJV4PH5dVcdtNa/h3WdwO8RD27fClGBod52OhwSWtVyL2O7H
        YwTBCWK2CUzHC/B98QCYVAIQx59VLsaAUgcHhFL8CXgu9pBrF53hICY09kJwHtCqqfo5XvLi
        rGWtBG6M6WOEDoeDc/AdqV4Qns/now/Pm1nETL92phxmnb6ZPHChK9X0ppEdGO1yLfcmgXBK
        oe0Xi4vjTjunhJxKtmgoe4QdF7UtmtDaLMXzdbRevfYCLYWWe1UJC795I3WdOgJtNPE31dhP
        KXdcVvtWdOaeJ9DeOHVTx0FKOeaEpnZyjnGUZZR5uCAkz33ippOP97hFxv2IcmrpBOPcj6Iw
        yos8zzhjRcgu3PtOm7KrxMRt/nHJVW7MlCiNVCspd1MFPGykkXoje8AeKfjw1HS1POiP4/ec
        IxWq+SHqQskWnN43bt7Rz1jKopTkNOAk9zFOvciNsB+wIJwHLrX6f7n1m7z3+zHwgBUkYC7m
        YcRzjLOQ4LxIeZRiL2c4gMhGgv6rlOnIlt+4vdS9NS6dIzrbLsr2xR8BmAZedgi/9AAAAdlJ
        REFUWIXtmD0vBFEUht8VFvsDVDpZySYUOioFWtqZbKUQ4hcIUSnwBwS90FLbfssVRFilhs4u
        M3PnzodibiT32kRxX3GLPd05k7x5cs49H7ulPM/hsg38N8Bv5jzgoK2A59cvASz3+HR1cX62
        YqtvDQhg/mh3DKMjpe9AGOXY3HubJ2hTSizTTG805ScEbQpgIGIdUPmfBG0KYCSNXCUpAEAQ
        tCmAIkn1DMokB4CIoE0B/IiE2yVOzWWUZQAcapL3IMq0QFj4HYI2J4OZzgc1dVKCNucNmmNG
        vckuQZsCGJtdrPyYoE0BDKXUA8oPCdqkTSL1DMbFHHQGUKZmiRO3StyNeu/iD4L234yZ1LFB
        3QmFMaiFW4NapsZIdm3VBbF0+1iI1Hn1baqLHboHjWKqA5ZyDzJ+NH3ePAqs7rya8YCgjVL/
        nwVL6wPaGqNJ4Pn1dQBbAMYBvAA4uDg/O2FoWzeJ59fXahPl06W5CqaqZdy1YzSaAe6f4w0G
        JKPE24uzFczUhjE0WMJMbRgLsxWgyKi1MQDHpyfLWmCqWgaKclsbA/Dl9km/Te/bMVC8RWtj
        AO43mgFaDwJJArQeBK6bAQAcErQ5m8Tz6xv42cXH1sLorzp7cx7wCztR4jstIoJvAAAAAElF
        TkSuQmCC
      </shape>
      <shape name='KPI/09.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbKP1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0BXlVhqwli91
        m8DfP39BUFcJfCILd9Exuam/HLV8PH5dlcdtOa/g3WdwO8RD0zXSFGBodm0fDwksKrWWsd2P
        xwiCE8RsE5iOF+D74gEwpSUgjj8rXYwBpQ4OCKX4E/Bc7CHXLjrDQUxo7IXgPKBV09VzvOT5
        WctaCdwY08UIHQ4H5+A7Sr8gPJ/PRx+eN7OIWf/ammKYtf3N5IHLvtR1Z2rVgtEu1mpvEgin
        FJpusbg4bnvnlJBTqgYNRYew46KmQRO6N0v5fB3dr147iZayV3tdSgu/eSN1nToCbTTxN13b
        Tyl2XJX7RrbmnifQ3jhVXcVBSjnmhKZ2co5xlGWUeTgnRAifuOnk4z1unuWRlwtq6QRj4UdR
        GIlciIwzlofswr1ve1O0pZy49T8uucqNmZaFUXql1G6qgIeNMqrfqA6wRwo+PNVtpQ79x/F7
        zpFKXf+QVa5VA07vG9fv6GcsZVFKBA04ET7GqRe5EfYDFoTzwKVW/y+3epP3fj8GHrCcBMzF
        PIy4wDgLCRZ5yqMUe4LhACIbCfqvUqYjW37j9lL31rh0jmxtu2jbF38ALPoGgtAaSM0AAAJT
        SURBVFiF7dixi9NgGMfxb2pOPGgOEyyeaA9cahfFoc53CILWVaSlm4ubNyp0LA6u/g2WdlMH
        BxHuijfqdEfxHC0qSMOBvd5dOIc4pfRyedM3ed9gB58t8JB8eJO8zy8xfN9nniv3rwGzau6B
        5vRBrd6YPmwBD4HbwI+Mrr8MbAKvup3286gG0Qq2gOat0bAEbACXM8L1KqNhGWjV6o2mLLAF
        NB9//2JU3QEZIQPctfvugEc/dw0RMgyc4JaPDwHIAHkCB1D0DoTIMPBBZTSc4ILSiDyFC6ro
        HXBjf88A7sQB1z4vFb6+u7By6swakEIcwOvCVbYt5yNQjQP+AlYzQMri7nU77RO3L+ol0Y1M
        jRMBp5G7ikglXBwwQK4pIJVxs4AqSGkcIMTJANMgteFkgUmR2nAQCguSyB5QDgOq7oDr472S
        j8GKt68FB8njVuxKFr2xVlwa4EykThykD6wT5LdzlrBpx3LYtpyttDhQS9QGYBgxDef/HANc
        BOy0F0kLnGwlUc9cUEVvrJyC0gBj97lwqaagpMBY3I7lEPVMqiCT7IMyE2ILKFRGw8h9Eih9
        WipskOBDTHYFZcfXXdQCRipg0tmqmoISAdMOfm3IOKBqKpFG1uoNIVIE1BWZlJFRQK15ThUZ
        BurGKSPDwCxwiZFxwPdHOZPf5lnduJlId2GRw5wJ8CYOuN7P2y8/OFcmSI04IdJdWKRnX6Kf
        t190O+2n081Ro269n7cBnpzxfd24MLIHlI9yZoB7Fm4UzeIAeTMDXBTybRQOwPj/E12x5h74
        F8U8DkvlrA52AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/11.png'>
        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
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/12.png'>
        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
        Xc5rPfBWb+cAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/13.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLKK2EbrA1uVRupeCbgNSsDIOAvNr/Vhn7RfmMlCVE1VbD/42ufcc6997+3d0BXlVhqwli91
        m8A/b78hqKsEPpHczTsmN/W3o5aPx++r8rgt5xW8+wpuh3houkaaAgzNru3jIYFFpdYytvvx
        GEFwgphtAtPxAvzMHwBTWgLi+LPSxRhQ6uCAUIq/AM/FHnLtojMcxITGXgjOA1o1XT3HS56d
        tayVwI0xXYzQ4XBwDr6j9AvC8/l89OF5M4uY9a+tKYZZ299MHrjsS113plYtGO1irfYmgXBK
        oeny/OK47Z1TQk6pGjQUHcKOi5oGTejeLOXzdXS/eu0kWspe7XUpLfzmndR16gi00cQ/dG0/
        pdhxVe4b2Zp7nkB741R1FQcp5ZgTmtrJOcbRYkGZhzNChPCJm04+PuJmzBMuI66lE4yFH0Vh
        JDIhFpyxLGQX7n3bm6It5cStL9wgu8qNmZaFUXql1G6qgIeNMqrfqA6wRwo+PdVtpQ795/F7
        zpFKXf+SVaZVA07vG9cf6C9YyqKUCBpwInyMUy9yI+wHLAjngUut/j9u9S7v/X4MPGAZCZiL
        eRhxgfEiJFhkKY9S7AmGA4hsJOi/SpmObPmN20vdW+PSObK17aJtX/wF9TIGVo7wNFAAAAGM
        SURBVFiF7di9boMwFAXgQ4WaKSgLSh8kazORqTwAiOdD8ABNhzBn4z1SKQvK1oaIDoU2UAy2
        7+Vn6JksWb76dCRLlo2iKDDnPEwN6MvsgSbHEM8PquUBgAFgp3I+jkLhHmeDh83lvNtczg6A
        hGsoS4Mocc/ZOwwUAOCklp1Ascm2kBv0/OAHZ+WfWOZXbLMTuJokAZu4KpxIbaAIx43UAvbh
        OJHKQFkcF1IJqIrjQEoDdXFUpBSQiqMge4GeHyQcOF1kJ7DEOdvsxILTQQqB97hlfmXDtSE9
        PxAiW4FD41SQf4Bj4WSRNeDYOBlks8EPALhN8NC+waiWtdtYk8RR6KaWvT+u1sjMxVg2ZOYj
        jqsnpJb9FkfhixA4BbIL1wocE9mHEwLHQMrgOoFDIu9xAIS4XuAQSBWcFJATqYqTBnIgdXBK
        QApSF6cM1EFScFpAFSQVpw2UQWbmgowjAbuQ37g1UsveU3BkYBuygXOp87l+t9zUsl9RtsWF
        A/iAwC8SYMIBgPH/iU7M7IFfIdyNLuJOcwcAAAAASUVORK5CYII=
      </shape>
    </shapes>
  </external>
</workbook>
